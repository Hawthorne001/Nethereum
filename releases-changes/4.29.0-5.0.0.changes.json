{"url":"https://api.github.com/repos/Nethereum/Nethereum/compare/4.29.0...5.0.0","html_url":"https://github.com/Nethereum/Nethereum/compare/4.29.0...5.0.0","permalink_url":"https://github.com/Nethereum/Nethereum/compare/Nethereum:9715a7e...Nethereum:aac2eab","diff_url":"https://github.com/Nethereum/Nethereum/compare/4.29.0...5.0.0.diff","patch_url":"https://github.com/Nethereum/Nethereum/compare/4.29.0...5.0.0.patch","base_commit":{"sha":"9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","node_id":"C_kwDOAslKS9oAKDk3MTVhN2U4ZDhiNzgzMWMzZTRiM2MwMzE3MWNmNDU4OWI4ZGNmNzA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-10T16:34:25Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-10T16:34:25Z"},"message":"Update nuget bat to add extra projects","tree":{"sha":"679e8bdc85326e51d14d482063bc12792b4fad50","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/679e8bdc85326e51d14d482063bc12792b4fad50"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","html_url":"https://github.com/Nethereum/Nethereum/commit/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"48202f03a6c47dbc499ca3935934032de1593333","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/48202f03a6c47dbc499ca3935934032de1593333","html_url":"https://github.com/Nethereum/Nethereum/commit/48202f03a6c47dbc499ca3935934032de1593333"}]},"merge_base_commit":{"sha":"9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","node_id":"C_kwDOAslKS9oAKDk3MTVhN2U4ZDhiNzgzMWMzZTRiM2MwMzE3MWNmNDU4OWI4ZGNmNzA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-10T16:34:25Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-10T16:34:25Z"},"message":"Update nuget bat to add extra projects","tree":{"sha":"679e8bdc85326e51d14d482063bc12792b4fad50","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/679e8bdc85326e51d14d482063bc12792b4fad50"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","html_url":"https://github.com/Nethereum/Nethereum/commit/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"48202f03a6c47dbc499ca3935934032de1593333","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/48202f03a6c47dbc499ca3935934032de1593333","html_url":"https://github.com/Nethereum/Nethereum/commit/48202f03a6c47dbc499ca3935934032de1593333"}]},"status":"ahead","ahead_by":72,"behind_by":0,"total_commits":72,"commits":[{"sha":"61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","node_id":"C_kwDOAslKS9oAKDYxZDc1ZThhYTY1OGI0Y2Y2NzhlYzFjMzI2ZTlkYzVjNjI3ZjEwYjA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-12T09:34:38Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-12T09:34:38Z"},"message":"Remove package json to  get MUD contracts","tree":{"sha":"97ef9a60a026f129d440fc1f40d209e2f5034e23","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/97ef9a60a026f129d440fc1f40d209e2f5034e23"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","html_url":"https://github.com/Nethereum/Nethereum/commit/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","html_url":"https://github.com/Nethereum/Nethereum/commit/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70"}]},{"sha":"17203f9c311b6374319663d46657c8d510a14aac","node_id":"C_kwDOAslKS9oAKDE3MjAzZjljMzExYjYzNzQzMTk2NjNkNDY2NTdjOGQ1MTBhMTRhYWM","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-12T10:40:56Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2025-02-12T10:40:56Z"},"message":"Create funding.json","tree":{"sha":"97433e762f98d551398787e445290360f3eaa546","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/97433e762f98d551398787e445290360f3eaa546"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/17203f9c311b6374319663d46657c8d510a14aac","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnrHq4CRC1aQ7uu5UhlAAAnj8QAEqhANHVEoFeQJZiCd8J76Qn\nQRB9RsTie3VHvycC4Unk0taybOq+niug0hr55qjvQpyN6JqwG2RptNyyB6IWAy+X\nlDuQA48uftA5hFDcq0XriTpmNkqWF2gpeE64rtTkHJ7UEVMk3kpnXgVsEEaje8oj\n2r8vreiktbluVfwS1I5kFknhTfaMTHoBIZOHcvArklY8JxTdJS+Qp6RgxKHq7beX\nT+kR8kGpaION/bnuNyUcApY0gRAOuZjJGvTkyC7A6YvSdCxQ8a0FATxKVJllQl3u\nJSVFkzuaes1HMeh6I9k67/HhikdDviBECM7w0srWPIqRUN17Uqwt4XLP9tgX8Kg3\nENXBYst9MPkqHhdcJAGnwGuqXvZwWMyj8dDsq4Sro9xsQZXemTbVh2iy61f5ku8d\nB3GiDlD62UlAGDHCb2dJWaNW76mZFcloeRgqJeeIlgCq6OHXxszA7O0qkFXQ7jkH\nvecFSeaJLqxAG9tUyc0sxDxIdLbALChdyeeWs7MTlenU8f7vfMe7cAA9KrtG2REF\nlD2Yf/ki8VYo/GL5OzbaNzgmkufz6OnLM28k9jAODHuz3EKlAj0lAZm+lPcfqOIs\nqolIRKSjIdmGZQxaIc5ntZk3/A3I+ra1nBUdEV/pPk3HTUoxVKn34OMjcQTlF7ql\n2wfxd7XwIvsRlBTuFuUM\n=o0Xn\n-----END PGP SIGNATURE-----\n","payload":"tree 97433e762f98d551398787e445290360f3eaa546\nparent 61d75e8aa658b4cf678ec1c326e9dc5c627f10b0\nauthor Juan Blanco <juanfranblanco@hotmail.com> 1739356856 +0000\ncommitter GitHub <noreply@github.com> 1739356856 +0000\n\nCreate funding.json","verified_at":"2025-02-12T10:40:59Z"}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/17203f9c311b6374319663d46657c8d510a14aac","html_url":"https://github.com/Nethereum/Nethereum/commit/17203f9c311b6374319663d46657c8d510a14aac","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/17203f9c311b6374319663d46657c8d510a14aac/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","html_url":"https://github.com/Nethereum/Nethereum/commit/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0"}]},{"sha":"328524cd830c47681f8afb4e71a31d139d0247c2","node_id":"C_kwDOAslKS9oAKDMyODUyNGNkODMwYzQ3NjgxZjhhZmI0ZTcxYTMxZDEzOWQwMjQ3YzI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:51:42Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:51:42Z"},"message":"AbiBytes extension","tree":{"sha":"985f6dd5c6e9173ad42f2c73c9b585cc5c18dbaa","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/985f6dd5c6e9173ad42f2c73c9b585cc5c18dbaa"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/328524cd830c47681f8afb4e71a31d139d0247c2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/328524cd830c47681f8afb4e71a31d139d0247c2","html_url":"https://github.com/Nethereum/Nethereum/commit/328524cd830c47681f8afb4e71a31d139d0247c2","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/328524cd830c47681f8afb4e71a31d139d0247c2/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0","html_url":"https://github.com/Nethereum/Nethereum/commit/61d75e8aa658b4cf678ec1c326e9dc5c627f10b0"}]},{"sha":"207ae7059593cbd9657a1bafad01678d0d5d0282","node_id":"C_kwDOAslKS9oAKDIwN2FlNzA1OTU5M2NiZDk2NTdhMWJhZmFkMDE2NzhkMGQ1ZDAyODI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:53:32Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:53:32Z"},"message":"Account abstraction PackedUserOperation, UserOperation, UserOperationBuilder (packing and 712 hashing) ERC4337Domain","tree":{"sha":"e2db7bfd46ce5e391c828a05d0efaf9f77d4f21f","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/e2db7bfd46ce5e391c828a05d0efaf9f77d4f21f"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/207ae7059593cbd9657a1bafad01678d0d5d0282","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/207ae7059593cbd9657a1bafad01678d0d5d0282","html_url":"https://github.com/Nethereum/Nethereum/commit/207ae7059593cbd9657a1bafad01678d0d5d0282","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/207ae7059593cbd9657a1bafad01678d0d5d0282/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"328524cd830c47681f8afb4e71a31d139d0247c2","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/328524cd830c47681f8afb4e71a31d139d0247c2","html_url":"https://github.com/Nethereum/Nethereum/commit/328524cd830c47681f8afb4e71a31d139d0247c2"}]},{"sha":"7ed3c846c86bf0554a304546d175ce57633c2eb5","node_id":"C_kwDOAslKS9oAKDdlZDNjODQ2Yzg2YmYwNTU0YTMwNDU0NmQxNzVjZTU3NjMzYzJlYjU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:53:37Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-14T15:53:37Z"},"message":"Merge branch 'master' of https://github.com/Nethereum/Nethereum","tree":{"sha":"1843fa47b8e41360bb5c33b0b933524b7c9d5123","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/1843fa47b8e41360bb5c33b0b933524b7c9d5123"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/7ed3c846c86bf0554a304546d175ce57633c2eb5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7ed3c846c86bf0554a304546d175ce57633c2eb5","html_url":"https://github.com/Nethereum/Nethereum/commit/7ed3c846c86bf0554a304546d175ce57633c2eb5","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7ed3c846c86bf0554a304546d175ce57633c2eb5/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"207ae7059593cbd9657a1bafad01678d0d5d0282","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/207ae7059593cbd9657a1bafad01678d0d5d0282","html_url":"https://github.com/Nethereum/Nethereum/commit/207ae7059593cbd9657a1bafad01678d0d5d0282"},{"sha":"17203f9c311b6374319663d46657c8d510a14aac","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/17203f9c311b6374319663d46657c8d510a14aac","html_url":"https://github.com/Nethereum/Nethereum/commit/17203f9c311b6374319663d46657c8d510a14aac"}]},{"sha":"633474dd0d9bbb0465824e617cbc87293bbaae74","node_id":"C_kwDOAslKS9oAKDYzMzQ3NGRkMGQ5YmJiMDQ2NTgyNGU2MTdjYmM4NzI5M2JiYWFlNzQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-20T15:15:37Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-20T15:15:37Z"},"message":"MulticallInputOuputRpcBatchItem and CreateMulticallInputOutputRpcBatchItems\n\nTo be able to send batches of rpc calls and decode them the MultiQueryBatchRpcHandler includes CreateMulticallInputOutputRpcBatchItems. This method using the multicalls creates a set of MulticallInputOutputRpcBatchItems that contains both the multicallinputouput for decoding the call data and the newly created based on the multicallinputoutput rpcRequestResponseBatchItem.\nMulticallInputOuputRpcBatchItem  implements the interface of IRpcRequestResponseBatchItem by wrapping the rpcRequestResponseBatchItem so it can be used as any other normal batch request","tree":{"sha":"51b967b075abc039ae355ee0a18ca00bb1d9a1b2","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/51b967b075abc039ae355ee0a18ca00bb1d9a1b2"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/633474dd0d9bbb0465824e617cbc87293bbaae74","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/633474dd0d9bbb0465824e617cbc87293bbaae74","html_url":"https://github.com/Nethereum/Nethereum/commit/633474dd0d9bbb0465824e617cbc87293bbaae74","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/633474dd0d9bbb0465824e617cbc87293bbaae74/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"7ed3c846c86bf0554a304546d175ce57633c2eb5","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7ed3c846c86bf0554a304546d175ce57633c2eb5","html_url":"https://github.com/Nethereum/Nethereum/commit/7ed3c846c86bf0554a304546d175ce57633c2eb5"}]},{"sha":"11c5945fcddb55a8a495c24210bc8f964dce0878","node_id":"C_kwDOAslKS9oAKDExYzU5NDVmY2RkYjU1YThhNDk1YzI0MjEwYmM4Zjk2NGRjZTA4Nzg","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-20T15:24:01Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-20T15:24:01Z"},"message":"Adding extensions to create multicallinput and inputoutput","tree":{"sha":"c3739538f35b07e1068344097aebba264e779014","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/c3739538f35b07e1068344097aebba264e779014"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/11c5945fcddb55a8a495c24210bc8f964dce0878","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/11c5945fcddb55a8a495c24210bc8f964dce0878","html_url":"https://github.com/Nethereum/Nethereum/commit/11c5945fcddb55a8a495c24210bc8f964dce0878","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/11c5945fcddb55a8a495c24210bc8f964dce0878/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"633474dd0d9bbb0465824e617cbc87293bbaae74","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/633474dd0d9bbb0465824e617cbc87293bbaae74","html_url":"https://github.com/Nethereum/Nethereum/commit/633474dd0d9bbb0465824e617cbc87293bbaae74"}]},{"sha":"cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","node_id":"C_kwDOAslKS9oAKGNmZTFmZjQ3YWM4NTk2NDlmMDBlOGM1YjBkNDlmZDNkYjA1YThjNGE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-21T15:18:00Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-02-21T15:18:00Z"},"message":"Shuffler","tree":{"sha":"bdfb3fa3f1b5c1f328a412c4838d0cb3720e921f","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/bdfb3fa3f1b5c1f328a412c4838d0cb3720e921f"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","html_url":"https://github.com/Nethereum/Nethereum/commit/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"11c5945fcddb55a8a495c24210bc8f964dce0878","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/11c5945fcddb55a8a495c24210bc8f964dce0878","html_url":"https://github.com/Nethereum/Nethereum/commit/11c5945fcddb55a8a495c24210bc8f964dce0878"}]},{"sha":"15bc6a642b77cfdebd398292cddd660e830faa5f","node_id":"C_kwDOAslKS9oAKDE1YmM2YTY0MmI3N2NmZGViZDM5ODI5MmNkZGQ2NjBlODMwZmFhNWY","commit":{"author":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T13:46:33Z"},"committer":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T13:46:33Z"},"message":"DTOs for debug and tracer options/responses added, debug api services modified, integration tests added","tree":{"sha":"d898fc67bfbd0d6e51892d9be013db5c669d57ed","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/d898fc67bfbd0d6e51892d9be013db5c669d57ed"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/15bc6a642b77cfdebd398292cddd660e830faa5f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/15bc6a642b77cfdebd398292cddd660e830faa5f","html_url":"https://github.com/Nethereum/Nethereum/commit/15bc6a642b77cfdebd398292cddd660e830faa5f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/15bc6a642b77cfdebd398292cddd660e830faa5f/comments","author":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","html_url":"https://github.com/Nethereum/Nethereum/commit/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a"}]},{"sha":"d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","node_id":"C_kwDOAslKS9oAKGQ4MzIxOWJkMmY5MjkzOWI5MmRjNmNmMWY5ZmFhY2Y1M2IzNGM5YzI","commit":{"author":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T14:47:42Z"},"committer":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T14:47:42Z"},"message":"Refactoring","tree":{"sha":"7bd80012340e2f5ab47d83326db819000622e179","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/7bd80012340e2f5ab47d83326db819000622e179"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","html_url":"https://github.com/Nethereum/Nethereum/commit/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2/comments","author":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"15bc6a642b77cfdebd398292cddd660e830faa5f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/15bc6a642b77cfdebd398292cddd660e830faa5f","html_url":"https://github.com/Nethereum/Nethereum/commit/15bc6a642b77cfdebd398292cddd660e830faa5f"}]},{"sha":"b54cde4534d614defa158af36ac5d3ed9d8538e1","node_id":"C_kwDOAslKS9oAKGI1NGNkZTQ1MzRkNjE0ZGVmYTE1OGFmMzZhYzVkM2VkOWQ4NTM4ZTE","commit":{"author":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T14:53:43Z"},"committer":{"name":"SolidityNinja","email":"sergeyvagapov@gmail.com","date":"2025-03-12T14:53:43Z"},"message":"Removed empty line","tree":{"sha":"abc923c678c5d5af020348cdb59319939b003f49","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/abc923c678c5d5af020348cdb59319939b003f49"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/b54cde4534d614defa158af36ac5d3ed9d8538e1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b54cde4534d614defa158af36ac5d3ed9d8538e1","html_url":"https://github.com/Nethereum/Nethereum/commit/b54cde4534d614defa158af36ac5d3ed9d8538e1","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b54cde4534d614defa158af36ac5d3ed9d8538e1/comments","author":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"waggyes","id":54091927,"node_id":"MDQ6VXNlcjU0MDkxOTI3","avatar_url":"https://avatars.githubusercontent.com/u/54091927?v=4","gravatar_id":"","url":"https://api.github.com/users/waggyes","html_url":"https://github.com/waggyes","followers_url":"https://api.github.com/users/waggyes/followers","following_url":"https://api.github.com/users/waggyes/following{/other_user}","gists_url":"https://api.github.com/users/waggyes/gists{/gist_id}","starred_url":"https://api.github.com/users/waggyes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/waggyes/subscriptions","organizations_url":"https://api.github.com/users/waggyes/orgs","repos_url":"https://api.github.com/users/waggyes/repos","events_url":"https://api.github.com/users/waggyes/events{/privacy}","received_events_url":"https://api.github.com/users/waggyes/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2","html_url":"https://github.com/Nethereum/Nethereum/commit/d83219bd2f92939b92dc6cf1f9faacf53b34c9c2"}]},{"sha":"730542dab3426b321ec1023c6bdf751832ea32b6","node_id":"C_kwDOAslKS9oAKDczMDU0MmRhYjM0MjZiMzIxZWMxMDIzYzZiZGY3NTE4MzJlYTMyYjY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-17T14:51:55Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-17T14:51:55Z"},"message":"#1069 Fix Invalid Type Encoding with complex struct\n\nIssue: When having multiple structs all referencing the same type, the Distinct usage was not picking up all the Objects when iterating across all the inner objects (ie A-> B, A->B[] -> A->C) (B->C, B-> C[], B->D) (C->D, C-D[]) will cause duplicates.\n\nSolution.. Ensure Distinct on return..","tree":{"sha":"ba9455097fecd66181da46fe902a3c0b9572e11f","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/ba9455097fecd66181da46fe902a3c0b9572e11f"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/730542dab3426b321ec1023c6bdf751832ea32b6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/730542dab3426b321ec1023c6bdf751832ea32b6","html_url":"https://github.com/Nethereum/Nethereum/commit/730542dab3426b321ec1023c6bdf751832ea32b6","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/730542dab3426b321ec1023c6bdf751832ea32b6/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a","html_url":"https://github.com/Nethereum/Nethereum/commit/cfe1ff47ac859649f00e8c5b0d49fd3db05a8c4a"}]},{"sha":"39374e88d75e7dbbfb74b926f386a428dc7f20b6","node_id":"C_kwDOAslKS9oAKDM5Mzc0ZTg4ZDc1ZTdkYmJmYjc0YjkyNmYzODZhNDI4ZGM3ZjIwYjY","commit":{"author":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:26:36Z"},"committer":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:26:36Z"},"message":"Allowing partial success.\nUnit tests.","tree":{"sha":"cb7942d1f36f0ca428014799a7b3e220912511e8","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/cb7942d1f36f0ca428014799a7b3e220912511e8"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/39374e88d75e7dbbfb74b926f386a428dc7f20b6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/39374e88d75e7dbbfb74b926f386a428dc7f20b6","html_url":"https://github.com/Nethereum/Nethereum/commit/39374e88d75e7dbbfb74b926f386a428dc7f20b6","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/39374e88d75e7dbbfb74b926f386a428dc7f20b6/comments","author":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"730542dab3426b321ec1023c6bdf751832ea32b6","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/730542dab3426b321ec1023c6bdf751832ea32b6","html_url":"https://github.com/Nethereum/Nethereum/commit/730542dab3426b321ec1023c6bdf751832ea32b6"}]},{"sha":"b360b61b1ed1d673e40ca245298f98d11bb10841","node_id":"C_kwDOAslKS9oAKGIzNjBiNjFiMWVkMWQ2NzNlNDBjYTI0NTI5OGY5OGQxMWJiMTA4NDE","commit":{"author":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:30:06Z"},"committer":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:30:06Z"},"message":"keep errors like before instead?","tree":{"sha":"6a3873b552ece0c8c301a9f1ec3e21f07138e290","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/6a3873b552ece0c8c301a9f1ec3e21f07138e290"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/b360b61b1ed1d673e40ca245298f98d11bb10841","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b360b61b1ed1d673e40ca245298f98d11bb10841","html_url":"https://github.com/Nethereum/Nethereum/commit/b360b61b1ed1d673e40ca245298f98d11bb10841","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b360b61b1ed1d673e40ca245298f98d11bb10841/comments","author":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"39374e88d75e7dbbfb74b926f386a428dc7f20b6","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/39374e88d75e7dbbfb74b926f386a428dc7f20b6","html_url":"https://github.com/Nethereum/Nethereum/commit/39374e88d75e7dbbfb74b926f386a428dc7f20b6"}]},{"sha":"e4a403a6f44dfebaf5968139444264afcc13020a","node_id":"C_kwDOAslKS9oAKGU0YTQwM2E2ZjQ0ZGZlYmFmNTk2ODEzOTQ0NDI2NGFmY2MxMzAyMGE","commit":{"author":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:45:47Z"},"committer":{"name":"David Lebee","email":"david@lebee.info","date":"2025-03-21T05:45:47Z"},"message":"added one more unit test, that tests that the rpc request response batch item behaves as expected now.","tree":{"sha":"6dd3f3c443c7c7e4f16105dd6e274c4aafaf6b1a","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/6dd3f3c443c7c7e4f16105dd6e274c4aafaf6b1a"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e4a403a6f44dfebaf5968139444264afcc13020a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e4a403a6f44dfebaf5968139444264afcc13020a","html_url":"https://github.com/Nethereum/Nethereum/commit/e4a403a6f44dfebaf5968139444264afcc13020a","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e4a403a6f44dfebaf5968139444264afcc13020a/comments","author":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"dlebee","id":36390643,"node_id":"MDQ6VXNlcjM2MzkwNjQz","avatar_url":"https://avatars.githubusercontent.com/u/36390643?v=4","gravatar_id":"","url":"https://api.github.com/users/dlebee","html_url":"https://github.com/dlebee","followers_url":"https://api.github.com/users/dlebee/followers","following_url":"https://api.github.com/users/dlebee/following{/other_user}","gists_url":"https://api.github.com/users/dlebee/gists{/gist_id}","starred_url":"https://api.github.com/users/dlebee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlebee/subscriptions","organizations_url":"https://api.github.com/users/dlebee/orgs","repos_url":"https://api.github.com/users/dlebee/repos","events_url":"https://api.github.com/users/dlebee/events{/privacy}","received_events_url":"https://api.github.com/users/dlebee/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"b360b61b1ed1d673e40ca245298f98d11bb10841","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b360b61b1ed1d673e40ca245298f98d11bb10841","html_url":"https://github.com/Nethereum/Nethereum/commit/b360b61b1ed1d673e40ca245298f98d11bb10841"}]},{"sha":"eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","node_id":"C_kwDOAslKS9oAKGViMGE2MzJlNDQwN2VhZDllMjFiZmI1NTc3YWU3ODgyNWVjMWFhZjk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-21T16:13:32Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2025-03-21T16:13:32Z"},"message":"Merge pull request #1070 from dlebee/master\n\nAllowing partial success in batch requests.","tree":{"sha":"6dd3f3c443c7c7e4f16105dd6e274c4aafaf6b1a","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/6dd3f3c443c7c7e4f16105dd6e274c4aafaf6b1a"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJn3ZAsCRC1aQ7uu5UhlAAASksQAAlKxb0uEUhcwf16hbfVKkHL\nCPyZXvSytkIaoJfQkjFi1Ue0iHG7VxdS2TH1eWEMrDhVnY3F2UJOzTrnACbd73qS\nsVHvrdMeEBxN4RuJIzOqrnpyK49sMLfDayRl6vniDTag15hSTf+GDegEu0wDS+8e\nxpxJm2SbWaMRZCvsDbU6uNf2SjDGKFfrnLpHi8aZiyf+59K2MAwYZg9DjOVWZzSY\nt78UIdB4scmPQZiVkeMM7UFCyk4XvYOciFRDPoBbMyPEDFIyeYx41w5gMo6yCpyw\nOFzb2p24US2cZ3bFA0GoUpYwRfSNMNIMCsiyWxakk5MFnMGey8abMQ2Sr2rkR9h5\nGGtCkPMy5/YvmfyQNeig2VZRkVMxoZVE0KZn20jDxzuaucYbOi72KobLtLE7y2vw\nt7+cgKvp6KN860YjXecXOGksE0MrRk6WVNPkoRxx9LRKSbh2MVBYt/fqw3YYL3dK\nnqxD9cSQrE/Yz7Sevsx4bn5A9qWouzK/Hko66nrmDE4BtXsMygwrVqImcWX0ZOaF\n95PkWL/X7d00jbgGiBl9DEP1AQ7MpuwpKZt0xoKR9Y+TZlaJBKOxLiFQXlstM4mB\nH55MAZa1O66fMQZ8Y554xRc5ANhQk/VITz1ZYYb/I12dTdBcdzM+NghaJ6Ttbwza\nqJXrH2VcbMKIA1RljUV/\n=sKFz\n-----END PGP SIGNATURE-----\n","payload":"tree 6dd3f3c443c7c7e4f16105dd6e274c4aafaf6b1a\nparent 730542dab3426b321ec1023c6bdf751832ea32b6\nparent e4a403a6f44dfebaf5968139444264afcc13020a\nauthor Juan Blanco <juanfranblanco@hotmail.com> 1742573612 +0000\ncommitter GitHub <noreply@github.com> 1742573612 +0000\n\nMerge pull request #1070 from dlebee/master\n\nAllowing partial success in batch requests.","verified_at":"2025-03-21T16:13:36Z"}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","html_url":"https://github.com/Nethereum/Nethereum/commit/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"730542dab3426b321ec1023c6bdf751832ea32b6","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/730542dab3426b321ec1023c6bdf751832ea32b6","html_url":"https://github.com/Nethereum/Nethereum/commit/730542dab3426b321ec1023c6bdf751832ea32b6"},{"sha":"e4a403a6f44dfebaf5968139444264afcc13020a","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e4a403a6f44dfebaf5968139444264afcc13020a","html_url":"https://github.com/Nethereum/Nethereum/commit/e4a403a6f44dfebaf5968139444264afcc13020a"}]},{"sha":"906f165d64898a4f6440d7d2d17f96fe62da69d0","node_id":"C_kwDOAslKS9oAKDkwNmYxNjVkNjQ4OThhNGY2NDQwZDdkMmQxN2Y5NmZlNjJkYTY5ZDA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-31T09:40:56Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-31T09:40:56Z"},"message":"EIP7022 changes\n\nModel:\n *New Transaction7702\n* New Transaction7702Encoder (RLP encoding / decoding)\n* TransactionFactory update to create 7702 transactions directly, from a generic input or rlp\n* New transaction Type (0x04)\n* Authorisation7702 and Authorisation7702Signed both supported by Encoders, First one used to sign authorisations\nRPC:\n* New Authorisation RPC object and Model mappers\n* Changes to TransactionInput and Transaction to include Authorisations\n* Changes to TransactionManagerBase to include identification of EIP7022 transaction types if included the authorisation list, also include common methods to Add authorisations or remove authorisations to the next request, default gas calculation optimised to add extra 2500 per authorisation if either present on the transaction input or in the next requests to be appended to the transaction\n\nSigner:\nNew: Transaction7702Signer similar generic same as 1059\nAuthorisation7702Signer signer to authorise items requests before including them into the 7022 transaction.\nEthECKeyBuilderFromSignedAuthorisation to recover the the signer from Authorisation7702Signed  authorisation\n\nUpdates:\n* EthECKeyBuilderFromSignedTransaction update to recover from Transaction7702  transaction\n* EthExternalSignerBase generic external signer support of 7702.\n* Aws, Azure enable generic signing of 7702\n* Ledger, Trezor, marked as unsupported\n\nAccounts:\n* AccountSignerTransactionManager  at the time of nonce allocation, does the signing of all the authorisations to ensure correct nonces in sequencing order based on the nonce manager, authorisations are merged from the request queue onto the transaction input.\n* OfflineTransactionSigner update.\n* ExternalAccount signing partial support whilst it can sign the 7702 this needs to be implemented to SignAuthorisationAsync and nonce flow\n\nContracts\n* Added AuthorisationList to the common contract object and encoding services\n\nTests\n* Signing Integration tests, included smart contracts examples BatchCall as a contract to be used as 7702 (enabling multiple calls) and delegation.","tree":{"sha":"be684c3ca91a2d3f3b435bb5a4da4f31a2af143a","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/be684c3ca91a2d3f3b435bb5a4da4f31a2af143a"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/906f165d64898a4f6440d7d2d17f96fe62da69d0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/906f165d64898a4f6440d7d2d17f96fe62da69d0","html_url":"https://github.com/Nethereum/Nethereum/commit/906f165d64898a4f6440d7d2d17f96fe62da69d0","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/906f165d64898a4f6440d7d2d17f96fe62da69d0/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9","html_url":"https://github.com/Nethereum/Nethereum/commit/eb0a632e4407ead9e21bfb5577ae78825ec1aaf9"}]},{"sha":"2e7492d63365c099b2aafc975e00e10fdf2da40f","node_id":"C_kwDOAslKS9oAKDJlNzQ5MmQ2MzM2NWMwOTliMmFhZmM5NzVlMDBlMTBmZGYyZGE0MGY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-31T14:00:40Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-03-31T14:00:40Z"},"message":"EIP7022 EIP7022AuthorisationService and EthApiService and Test update\n\nAdding EIP7022AuthorisationService to simplify in single transaction to add or remove the delegated contract address, or simple scenarios like retrieving the address.\nTest e2e of adding / removing and sending a transaction that is handled by the eoa delegated smart contract","tree":{"sha":"27639bcc038485b70e8aaa4f342f156d0c4dbe7f","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/27639bcc038485b70e8aaa4f342f156d0c4dbe7f"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/2e7492d63365c099b2aafc975e00e10fdf2da40f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2e7492d63365c099b2aafc975e00e10fdf2da40f","html_url":"https://github.com/Nethereum/Nethereum/commit/2e7492d63365c099b2aafc975e00e10fdf2da40f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2e7492d63365c099b2aafc975e00e10fdf2da40f/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"906f165d64898a4f6440d7d2d17f96fe62da69d0","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/906f165d64898a4f6440d7d2d17f96fe62da69d0","html_url":"https://github.com/Nethereum/Nethereum/commit/906f165d64898a4f6440d7d2d17f96fe62da69d0"}]},{"sha":"2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","node_id":"C_kwDOAslKS9oAKDJiYTM4OTI1MGEwY2U5ZWJmMmE2ZGNkNTJiNmUzYmJhYWIwYTJiMGQ","commit":{"author":{"name":"Mirko Da Corte","email":"mirko@etherna.io","date":"2025-04-03T00:33:02Z"},"committer":{"name":"Mirko Da Corte","email":"mirko@etherna.io","date":"2025-04-03T00:33:02Z"},"message":"fix issue in ToDER() method with latest bouncycastle","tree":{"sha":"e66101f61ac20e5532f46a8943075e4dd292bf6e","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/e66101f61ac20e5532f46a8943075e4dd292bf6e"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","html_url":"https://github.com/Nethereum/Nethereum/commit/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d/comments","author":{"login":"tmm360","id":7620704,"node_id":"MDQ6VXNlcjc2MjA3MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/7620704?v=4","gravatar_id":"","url":"https://api.github.com/users/tmm360","html_url":"https://github.com/tmm360","followers_url":"https://api.github.com/users/tmm360/followers","following_url":"https://api.github.com/users/tmm360/following{/other_user}","gists_url":"https://api.github.com/users/tmm360/gists{/gist_id}","starred_url":"https://api.github.com/users/tmm360/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmm360/subscriptions","organizations_url":"https://api.github.com/users/tmm360/orgs","repos_url":"https://api.github.com/users/tmm360/repos","events_url":"https://api.github.com/users/tmm360/events{/privacy}","received_events_url":"https://api.github.com/users/tmm360/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"tmm360","id":7620704,"node_id":"MDQ6VXNlcjc2MjA3MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/7620704?v=4","gravatar_id":"","url":"https://api.github.com/users/tmm360","html_url":"https://github.com/tmm360","followers_url":"https://api.github.com/users/tmm360/followers","following_url":"https://api.github.com/users/tmm360/following{/other_user}","gists_url":"https://api.github.com/users/tmm360/gists{/gist_id}","starred_url":"https://api.github.com/users/tmm360/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmm360/subscriptions","organizations_url":"https://api.github.com/users/tmm360/orgs","repos_url":"https://api.github.com/users/tmm360/repos","events_url":"https://api.github.com/users/tmm360/events{/privacy}","received_events_url":"https://api.github.com/users/tmm360/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"2e7492d63365c099b2aafc975e00e10fdf2da40f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2e7492d63365c099b2aafc975e00e10fdf2da40f","html_url":"https://github.com/Nethereum/Nethereum/commit/2e7492d63365c099b2aafc975e00e10fdf2da40f"}]},{"sha":"b628eb2a802117ea39121556ff6fd724dcb31439","node_id":"C_kwDOAslKS9oAKGI2MjhlYjJhODAyMTE3ZWEzOTEyMTU1NmZmNmZkNzI0ZGNiMzE0Mzk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:39:59Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:39:59Z"},"message":"EIP712 EncodeStruct","tree":{"sha":"b492724b6fdf9fcd6a24497035a4b991dc28f58a","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/b492724b6fdf9fcd6a24497035a4b991dc28f58a"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/b628eb2a802117ea39121556ff6fd724dcb31439","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b628eb2a802117ea39121556ff6fd724dcb31439","html_url":"https://github.com/Nethereum/Nethereum/commit/b628eb2a802117ea39121556ff6fd724dcb31439","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b628eb2a802117ea39121556ff6fd724dcb31439/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"2e7492d63365c099b2aafc975e00e10fdf2da40f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2e7492d63365c099b2aafc975e00e10fdf2da40f","html_url":"https://github.com/Nethereum/Nethereum/commit/2e7492d63365c099b2aafc975e00e10fdf2da40f"}]},{"sha":"cbe118c398124d5dc671d923c88123248ea92bf6","node_id":"C_kwDOAslKS9oAKGNiZTExOGMzOTgxMjRkNWRjNjcxZDkyM2M4ODEyMzI0OGVhOTJiZjY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:41:00Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:41:00Z"},"message":"Account Abstraction Simple Account","tree":{"sha":"9dddb304a0f48eed7a3fa54ddeded6cd21bee232","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/9dddb304a0f48eed7a3fa54ddeded6cd21bee232"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/cbe118c398124d5dc671d923c88123248ea92bf6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cbe118c398124d5dc671d923c88123248ea92bf6","html_url":"https://github.com/Nethereum/Nethereum/commit/cbe118c398124d5dc671d923c88123248ea92bf6","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cbe118c398124d5dc671d923c88123248ea92bf6/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"b628eb2a802117ea39121556ff6fd724dcb31439","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b628eb2a802117ea39121556ff6fd724dcb31439","html_url":"https://github.com/Nethereum/Nethereum/commit/b628eb2a802117ea39121556ff6fd724dcb31439"}]},{"sha":"96829d51b87cc77b4a5b1cb144721839a9099b19","node_id":"C_kwDOAslKS9oAKDk2ODI5ZDUxYjg3Y2M3N2I0YTViMWNiMTQ0NzIxODM5YTkwOTliMTk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:43:15Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:43:15Z"},"message":"AccountAbstraction EIP7702 Utils\n\nUtils to to validate if the initcode is a 7702, update the InitCode with delegateAddresss, hashing etc","tree":{"sha":"735feb011e5286bb91fd0ff4859a5369e4359a23","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/735feb011e5286bb91fd0ff4859a5369e4359a23"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/96829d51b87cc77b4a5b1cb144721839a9099b19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/96829d51b87cc77b4a5b1cb144721839a9099b19","html_url":"https://github.com/Nethereum/Nethereum/commit/96829d51b87cc77b4a5b1cb144721839a9099b19","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/96829d51b87cc77b4a5b1cb144721839a9099b19/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"cbe118c398124d5dc671d923c88123248ea92bf6","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cbe118c398124d5dc671d923c88123248ea92bf6","html_url":"https://github.com/Nethereum/Nethereum/commit/cbe118c398124d5dc671d923c88123248ea92bf6"}]},{"sha":"27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","node_id":"C_kwDOAslKS9oAKDI3YzYzZGJkZWI1MDk4ZTM5MTRmZGI3N2M0YmQ3ZmEwODhiZGI1Y2Q","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:50:35Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:50:35Z"},"message":"Account Abstraction Project including\n\nEntryPoint Service enabling to InitialiseUserOperation with different estimates for gas, and handling EIP7702\n\nSignUserOperation including checks for 7702\n\nUserOperationBuilder  EIP712 Packing, Encoding and Hashing changes","tree":{"sha":"c92526158e6b566e1b982c69e871e74d3332ad02","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/c92526158e6b566e1b982c69e871e74d3332ad02"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","html_url":"https://github.com/Nethereum/Nethereum/commit/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"96829d51b87cc77b4a5b1cb144721839a9099b19","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/96829d51b87cc77b4a5b1cb144721839a9099b19","html_url":"https://github.com/Nethereum/Nethereum/commit/96829d51b87cc77b4a5b1cb144721839a9099b19"}]},{"sha":"e04c1c5bb4b4455b0eef02a940a39dbc78438567","node_id":"C_kwDOAslKS9oAKGUwNGMxYzViYjRiNDQ1NWIwZWVmMDJhOTQwYTM5ZGJjNzg0Mzg1Njc","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:52:26Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:52:26Z"},"message":"Geth update to Dev and applied to the Integration tests\n\nNote Geth not included due to Github limitations","tree":{"sha":"00d962e643738a7ba227cad2a401ca779a49a7f6","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/00d962e643738a7ba227cad2a401ca779a49a7f6"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e04c1c5bb4b4455b0eef02a940a39dbc78438567","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e04c1c5bb4b4455b0eef02a940a39dbc78438567","html_url":"https://github.com/Nethereum/Nethereum/commit/e04c1c5bb4b4455b0eef02a940a39dbc78438567","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e04c1c5bb4b4455b0eef02a940a39dbc78438567/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd","html_url":"https://github.com/Nethereum/Nethereum/commit/27c63dbdeb5098e3914fdb77c4bd7fa088bdb5cd"}]},{"sha":"c2253c2b2817246f84593343dda597336dcdca98","node_id":"C_kwDOAslKS9oAKGMyMjUzYzJiMjgxNzI0NmY4NDU5MzM0M2RkYTU5NzMzNmRjZGNhOTg","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:53:22Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:53:22Z"},"message":"EIP7022 Tests updated to use geth instead of foundry / sepolia","tree":{"sha":"a97b6b57cbd93d65d496e699616de4ae93686724","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/a97b6b57cbd93d65d496e699616de4ae93686724"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/c2253c2b2817246f84593343dda597336dcdca98","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c2253c2b2817246f84593343dda597336dcdca98","html_url":"https://github.com/Nethereum/Nethereum/commit/c2253c2b2817246f84593343dda597336dcdca98","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c2253c2b2817246f84593343dda597336dcdca98/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"e04c1c5bb4b4455b0eef02a940a39dbc78438567","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e04c1c5bb4b4455b0eef02a940a39dbc78438567","html_url":"https://github.com/Nethereum/Nethereum/commit/e04c1c5bb4b4455b0eef02a940a39dbc78438567"}]},{"sha":"d6ef243de5bed46df6b7a492f61c035c5f7f189c","node_id":"C_kwDOAslKS9oAKGQ2ZWYyNDNkZTViZWQ0NmRmNmI3YTQ5MmY2MWMwMzVjNWY3ZjE4OWM","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:54:39Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:54:39Z"},"message":"RPC Account Abstraction changes to support 0.6 and 0.7","tree":{"sha":"af842f01b453ad5e4824e464af97d823ddeb76a5","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/af842f01b453ad5e4824e464af97d823ddeb76a5"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/d6ef243de5bed46df6b7a492f61c035c5f7f189c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d6ef243de5bed46df6b7a492f61c035c5f7f189c","html_url":"https://github.com/Nethereum/Nethereum/commit/d6ef243de5bed46df6b7a492f61c035c5f7f189c","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d6ef243de5bed46df6b7a492f61c035c5f7f189c/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"c2253c2b2817246f84593343dda597336dcdca98","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c2253c2b2817246f84593343dda597336dcdca98","html_url":"https://github.com/Nethereum/Nethereum/commit/c2253c2b2817246f84593343dda597336dcdca98"}]},{"sha":"9e224f9c4137374618f25a185626b1ffd82dc1bd","node_id":"C_kwDOAslKS9oAKDllMjI0ZjljNDEzNzM3NDYxOGYyNWExODU2MjZiMWZmZDgyZGMxYmQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:55:48Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:55:48Z"},"message":"GnosisSafe updates to extend the 712 hash encoding","tree":{"sha":"b7788a157d9ad2db69cd8b9ce0fd04cbbb57e69e","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/b7788a157d9ad2db69cd8b9ce0fd04cbbb57e69e"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/9e224f9c4137374618f25a185626b1ffd82dc1bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9e224f9c4137374618f25a185626b1ffd82dc1bd","html_url":"https://github.com/Nethereum/Nethereum/commit/9e224f9c4137374618f25a185626b1ffd82dc1bd","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9e224f9c4137374618f25a185626b1ffd82dc1bd/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"d6ef243de5bed46df6b7a492f61c035c5f7f189c","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d6ef243de5bed46df6b7a492f61c035c5f7f189c","html_url":"https://github.com/Nethereum/Nethereum/commit/d6ef243de5bed46df6b7a492f61c035c5f7f189c"}]},{"sha":"0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","node_id":"C_kwDOAslKS9oAKDBjM2FmMmZmZTVhZDdiYjk3N2I5YjNmYmUwNTAzZGRlMjc1YWIzMzI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:57:01Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:57:01Z"},"message":"Account Abstraction integration tests first pass","tree":{"sha":"66b8b1e13acc2c4b0d21f68fe77ac1d398af2c15","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/66b8b1e13acc2c4b0d21f68fe77ac1d398af2c15"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","html_url":"https://github.com/Nethereum/Nethereum/commit/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"9e224f9c4137374618f25a185626b1ffd82dc1bd","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9e224f9c4137374618f25a185626b1ffd82dc1bd","html_url":"https://github.com/Nethereum/Nethereum/commit/9e224f9c4137374618f25a185626b1ffd82dc1bd"}]},{"sha":"3850668e47516f2c342157ee3c02cbafdf456d95","node_id":"C_kwDOAslKS9oAKDM4NTA2NjhlNDc1MTZmMmMzNDIxNTdlZTNjMDJjYmFmZGY0NTZkOTU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:57:27Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-04T11:57:27Z"},"message":"Solution update","tree":{"sha":"a4906be1d395c4d6c54d9b95103472019c8da241","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/a4906be1d395c4d6c54d9b95103472019c8da241"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/3850668e47516f2c342157ee3c02cbafdf456d95","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/3850668e47516f2c342157ee3c02cbafdf456d95","html_url":"https://github.com/Nethereum/Nethereum/commit/3850668e47516f2c342157ee3c02cbafdf456d95","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/3850668e47516f2c342157ee3c02cbafdf456d95/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332","html_url":"https://github.com/Nethereum/Nethereum/commit/0c3af2ffe5ad7bb977b9b3fbe0503dde275ab332"}]},{"sha":"deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","node_id":"C_kwDOAslKS9oAKGRlYWUzMWJjYjlhOGY3YWU2YTNhYmZiM2U5YmM5MTk4ODBhNzM4ODY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T15:32:46Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T15:32:46Z"},"message":"Ether transfer service, adding gas estimation if not set for all functions","tree":{"sha":"86712a87213c8bf2aefe98aa728d7fb735cdb6cb","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/86712a87213c8bf2aefe98aa728d7fb735cdb6cb"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","html_url":"https://github.com/Nethereum/Nethereum/commit/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"3850668e47516f2c342157ee3c02cbafdf456d95","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/3850668e47516f2c342157ee3c02cbafdf456d95","html_url":"https://github.com/Nethereum/Nethereum/commit/3850668e47516f2c342157ee3c02cbafdf456d95"}]},{"sha":"418c7a9f7d245165e22b4a05c8175964d7560dba","node_id":"C_kwDOAslKS9oAKDQxOGM3YTlmN2QyNDUxNjVlMjJiNGEwNWM4MTc1OTY0ZDc1NjBkYmE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T15:33:37Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T15:33:37Z"},"message":"Adding generic test accounts to the Test project","tree":{"sha":"52ca407e6f2c9c432c538796e8043a9929e3c30e","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/52ca407e6f2c9c432c538796e8043a9929e3c30e"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/418c7a9f7d245165e22b4a05c8175964d7560dba","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/418c7a9f7d245165e22b4a05c8175964d7560dba","html_url":"https://github.com/Nethereum/Nethereum/commit/418c7a9f7d245165e22b4a05c8175964d7560dba","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/418c7a9f7d245165e22b4a05c8175964d7560dba/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886","html_url":"https://github.com/Nethereum/Nethereum/commit/deae31bcb9a8f7ae6a3abfb3e9bc919880a73886"}]},{"sha":"e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","node_id":"C_kwDOAslKS9oAKGU2NTY2MGNkYzVhNmZkOWUzNWZjMTVmYjMzNWNmYzdiM2FjMzJiNWU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:05:07Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:05:07Z"},"message":"EntryPointTests, StakeManagementTests, SimpleAccountTests","tree":{"sha":"4cbf6f627896c997b1dd41a6e470a9fedc7077ce","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/4cbf6f627896c997b1dd41a6e470a9fedc7077ce"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","html_url":"https://github.com/Nethereum/Nethereum/commit/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"418c7a9f7d245165e22b4a05c8175964d7560dba","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/418c7a9f7d245165e22b4a05c8175964d7560dba","html_url":"https://github.com/Nethereum/Nethereum/commit/418c7a9f7d245165e22b4a05c8175964d7560dba"}]},{"sha":"700220479145977b54b7a0552b25e99df1da4be8","node_id":"C_kwDOAslKS9oAKDcwMDIyMDQ3OTE0NTk3N2I1NGI3YTA1NTJiMjVlOTlkZjFkYTRiZTg","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:08:43Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:08:43Z"},"message":"SimpleAccountFactoryService, EntryPointService, UserOperationBuilder\n\nSimpleAccountFactoryService, adding CreateAndDeployAccountAsync enabling to create and account using the factory and entryPoint\nEntryPointService simplifying the signing and useroperation building\nUserOperationBuilder when signing returning a pack operation to avoid dupplication","tree":{"sha":"99f3d44f9d0b53dc43df647060ce14e4c5ec9262","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/99f3d44f9d0b53dc43df647060ce14e4c5ec9262"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/700220479145977b54b7a0552b25e99df1da4be8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/700220479145977b54b7a0552b25e99df1da4be8","html_url":"https://github.com/Nethereum/Nethereum/commit/700220479145977b54b7a0552b25e99df1da4be8","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/700220479145977b54b7a0552b25e99df1da4be8/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e","html_url":"https://github.com/Nethereum/Nethereum/commit/e65660cdc5a6fd9e35fc15fb335cfc7b3ac32b5e"}]},{"sha":"d96b617c6c0c512316e18a48d8edf6b8d979cbab","node_id":"C_kwDOAslKS9oAKGQ5NmI2MTdjNmMwYzUxMjMxNmUxOGE0OGQ4ZWRmNmI4ZDk3OWNiYWI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:33:36Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-08T16:33:36Z"},"message":"EntryPoint Execute","tree":{"sha":"9cc5505ae3ee31ea62143e9bdbf296ce9cb92e31","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/9cc5505ae3ee31ea62143e9bdbf296ce9cb92e31"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/d96b617c6c0c512316e18a48d8edf6b8d979cbab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d96b617c6c0c512316e18a48d8edf6b8d979cbab","html_url":"https://github.com/Nethereum/Nethereum/commit/d96b617c6c0c512316e18a48d8edf6b8d979cbab","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d96b617c6c0c512316e18a48d8edf6b8d979cbab/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"700220479145977b54b7a0552b25e99df1da4be8","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/700220479145977b54b7a0552b25e99df1da4be8","html_url":"https://github.com/Nethereum/Nethereum/commit/700220479145977b54b7a0552b25e99df1da4be8"}]},{"sha":"ee6b4d723dfa0c2b434b647ac572170338ea8859","node_id":"C_kwDOAslKS9oAKGVlNmI0ZDcyM2RmYTBjMmI0MzRiNjQ3YWM1NzIxNzAzMzhlYTg4NTk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:09:50Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:09:50Z"},"message":"EVM Simulator - New GasCounter - BASEFEE- BLOBHASH - BLOBBASEFE- TLOAD - TSTORE","tree":{"sha":"dd4dcc41af9ffb87123fe825f7e335803db01f39","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/dd4dcc41af9ffb87123fe825f7e335803db01f39"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/ee6b4d723dfa0c2b434b647ac572170338ea8859","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ee6b4d723dfa0c2b434b647ac572170338ea8859","html_url":"https://github.com/Nethereum/Nethereum/commit/ee6b4d723dfa0c2b434b647ac572170338ea8859","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ee6b4d723dfa0c2b434b647ac572170338ea8859/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"d96b617c6c0c512316e18a48d8edf6b8d979cbab","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d96b617c6c0c512316e18a48d8edf6b8d979cbab","html_url":"https://github.com/Nethereum/Nethereum/commit/d96b617c6c0c512316e18a48d8edf6b8d979cbab"}]},{"sha":"ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","node_id":"C_kwDOAslKS9oAKGVjNGM5MTZkNDRhMzQyZDhhYzZkOWMyYzkxZGM0ODE3MDNlZDBhMTA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:10:37Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:10:37Z"},"message":"Nethereum.Geth use StateChange from the core RPC project","tree":{"sha":"9dcde48977539ff0a5cd76d43a8e772fa11cf5e2","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/9dcde48977539ff0a5cd76d43a8e772fa11cf5e2"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","html_url":"https://github.com/Nethereum/Nethereum/commit/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"ee6b4d723dfa0c2b434b647ac572170338ea8859","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ee6b4d723dfa0c2b434b647ac572170338ea8859","html_url":"https://github.com/Nethereum/Nethereum/commit/ee6b4d723dfa0c2b434b647ac572170338ea8859"}]},{"sha":"746c6d0cbc0b059cffed6529b1aeca57a7480856","node_id":"C_kwDOAslKS9oAKDc0NmM2ZDBjYmMwYjA1OWNmZmVkNjUyOWIxYWVjYTU3YTc0ODA4NTY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:13:07Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-10T18:13:07Z"},"message":"Account abstraction BaseAccount as a generic service, AccountAbstractionExecuteBuilder, helper class to create execute calls with Function Messages, both single and batch","tree":{"sha":"5185a07adac20437eb26e818a76e4115fb847952","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/5185a07adac20437eb26e818a76e4115fb847952"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/746c6d0cbc0b059cffed6529b1aeca57a7480856","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/746c6d0cbc0b059cffed6529b1aeca57a7480856","html_url":"https://github.com/Nethereum/Nethereum/commit/746c6d0cbc0b059cffed6529b1aeca57a7480856","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/746c6d0cbc0b059cffed6529b1aeca57a7480856/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10","html_url":"https://github.com/Nethereum/Nethereum/commit/ec4c916d44a342d8ac6d9c2c91dc481703ed0a10"}]},{"sha":"e88fb133459988fb58e45e0ce0675d87afdee724","node_id":"C_kwDOAslKS9oAKGU4OGZiMTMzNDU5OTg4ZmI1OGU0NWUwY2UwNjc1ZDg3YWZkZWU3MjQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-14T07:15:04Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-14T07:15:04Z"},"message":"7022SponsorAuthorisationService (Sign authorisations for multiple external accounts), AuthorisationGasCalculator (core gas calculator), AuthorisationSigner batch key signing support\n\nTests to batch creation / authorisation","tree":{"sha":"3984ad21b187eb1d4c4521b3bf5f7276ef0912ed","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/3984ad21b187eb1d4c4521b3bf5f7276ef0912ed"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e88fb133459988fb58e45e0ce0675d87afdee724","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e88fb133459988fb58e45e0ce0675d87afdee724","html_url":"https://github.com/Nethereum/Nethereum/commit/e88fb133459988fb58e45e0ce0675d87afdee724","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e88fb133459988fb58e45e0ce0675d87afdee724/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"746c6d0cbc0b059cffed6529b1aeca57a7480856","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/746c6d0cbc0b059cffed6529b1aeca57a7480856","html_url":"https://github.com/Nethereum/Nethereum/commit/746c6d0cbc0b059cffed6529b1aeca57a7480856"}]},{"sha":"04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","node_id":"C_kwDOAslKS9oAKDA0Yzk2YjU3ZTY3NDNkOTRlMTllMTVhODVhOGVmMWI2YWI1YzUzMmU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-14T07:35:22Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-04-14T07:35:22Z"},"message":"Expanded test to include account recovery and validation from authority signed","tree":{"sha":"48b67400a66bc251fc61a89f28762ab8f5f483dc","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/48b67400a66bc251fc61a89f28762ab8f5f483dc"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","html_url":"https://github.com/Nethereum/Nethereum/commit/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"e88fb133459988fb58e45e0ce0675d87afdee724","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e88fb133459988fb58e45e0ce0675d87afdee724","html_url":"https://github.com/Nethereum/Nethereum/commit/e88fb133459988fb58e45e0ce0675d87afdee724"}]},{"sha":"cd1e57277037bc9d8ec7adc8bd05044025109de5","node_id":"C_kwDOAslKS9oAKGNkMWU1NzI3NzAzN2JjOWQ4ZWM3YWRjOGJkMDUwNDQwMjUxMDlkZTU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-05T17:43:56Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-05T17:43:56Z"},"message":"update sh build","tree":{"sha":"9cbf3ede78a784aae2a4c8312059deaffe715945","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/9cbf3ede78a784aae2a4c8312059deaffe715945"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/cd1e57277037bc9d8ec7adc8bd05044025109de5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cd1e57277037bc9d8ec7adc8bd05044025109de5","html_url":"https://github.com/Nethereum/Nethereum/commit/cd1e57277037bc9d8ec7adc8bd05044025109de5","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cd1e57277037bc9d8ec7adc8bd05044025109de5/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e","html_url":"https://github.com/Nethereum/Nethereum/commit/04c96b57e6743d94e19e15a85a8ef1b6ab5c532e"}]},{"sha":"4433d11caf52feebb727817ebe9819632c65d883","node_id":"C_kwDOAslKS9oAKDQ0MzNkMTFjYWY1MmZlZWJiNzI3ODE3ZWJlOTgxOTYzMmM2NWQ4ODM","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-09T16:16:54Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-09T16:16:54Z"},"message":"Nethereum.MudBlazorComponents New project\n\nNew project providing different Blazor components in (MudBlazor) to provide simple data input for smart contracts and Mud (Mud.Dev) Tables.\n+ QueryFunctionComponent you can query any smart contract by providing the FunctionMessageType, SmartContractAddress and the Output, or a service type and the query method.\n+ TransactionFunctionComponent you can submit any transaction in the same way as the QueryFunctionComponent, the service will be used to decode all the events output after the transaction submission, you can also provide a set of event types for decoding\n+ ContractDeploymentComponent as per the Transactions but to deploy smart contracts.\n\n+ MudDevTableComponent using a TableServiceType it can be used to both query by key a table and upsert a value.\n+ MudDevTableServicesComponent scans an assembly for all the TableServiceTypes and creates a user interface (collection) of MudTableComponents per each table found.","tree":{"sha":"8d02f1838b25369555ef3d46979fad6cb240b422","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/8d02f1838b25369555ef3d46979fad6cb240b422"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/4433d11caf52feebb727817ebe9819632c65d883","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4433d11caf52feebb727817ebe9819632c65d883","html_url":"https://github.com/Nethereum/Nethereum/commit/4433d11caf52feebb727817ebe9819632c65d883","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4433d11caf52feebb727817ebe9819632c65d883/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"cd1e57277037bc9d8ec7adc8bd05044025109de5","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/cd1e57277037bc9d8ec7adc8bd05044025109de5","html_url":"https://github.com/Nethereum/Nethereum/commit/cd1e57277037bc9d8ec7adc8bd05044025109de5"}]},{"sha":"edba8091d05e5cdfb369066170aece21fe1c3227","node_id":"C_kwDOAslKS9oAKGVkYmE4MDkxZDA1ZTVjZGZiMzY5MDY2MTcwYWVjZTIxZmUxYzMyMjc","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T10:42:17Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2025-05-14T10:42:17Z"},"message":"Merge pull request #1071 from Etherna/fix-latest-bouncycastle\n\nfix issue in ToDER() method with latest bouncycastle","tree":{"sha":"6271711e4f65c4b03b0fa55b7fc31a76373bdc23","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/6271711e4f65c4b03b0fa55b7fc31a76373bdc23"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/edba8091d05e5cdfb369066170aece21fe1c3227","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoJHOJCRC1aQ7uu5UhlAAAslsQAAqgaho09eJc3wp7WbJV8OnB\nYjdRgIqcJvVd05cySXQHTGUkZzNYMRxY9Z83hiSwyEPkmERpVC6B0FkE3XFEPZ2G\nMUO2zl52jXA1k8DBHOwssrZ0qHU7s7Ut5F/reCGlWPOgN5tuqSPMNB1ozipMdJE9\nE9/xKqp9VCaOmlNDIHXlQop2CvfOKAJvpRa68rdoAOwwI5g06en7OqqE4+Vobdz4\nvVI1VDsxg+3FKTIxjUKk9954NEd57O/cYKV5p/UA9nBfTLAnmwv6FKAfCoJwR4sw\ncyMl1CmXDn7/2imXfLdE2fgh9JSrp8KzQ6o7P01LjeAh8QzsAOtbQAM4ajDbPslT\nm+RId3oHk4T0BXbwdmTMHKywJOqfsgc3/oHUn6qSIO7k4IuDBQTMaZfnzewMbD0/\noYqcnSavuypJRKRpa6VPLkP2cphrv6B2XjPDtk/XZvbIbKTuuTKuiNtrKYBLnNFM\nkIc4sWG7WpqpGwN/SZQwP5jV9H5173eDI+ygCcmXRRC4x/g01kVsdZ5A7qvbpAvq\nzt2tjqt8oxmicwcguHHBE1TY3uplIqwO2Yza1sGQQWILWle5cRxiGmQ9lPXh3v/V\n1miwQ/jnQvsDu5R1X3WF1vlWsbRb2rB0gfeMG2Nhjvfaov6H9vuq6r+f7s4Q4ksz\n2x3p9svVrjBCEOS8I//N\n=6t+8\n-----END PGP SIGNATURE-----\n","payload":"tree 6271711e4f65c4b03b0fa55b7fc31a76373bdc23\nparent 4433d11caf52feebb727817ebe9819632c65d883\nparent 2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d\nauthor Juan Blanco <juanfranblanco@hotmail.com> 1747219337 +0100\ncommitter GitHub <noreply@github.com> 1747219337 +0100\n\nMerge pull request #1071 from Etherna/fix-latest-bouncycastle\n\nfix issue in ToDER() method with latest bouncycastle","verified_at":"2025-05-14T10:42:20Z"}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/edba8091d05e5cdfb369066170aece21fe1c3227","html_url":"https://github.com/Nethereum/Nethereum/commit/edba8091d05e5cdfb369066170aece21fe1c3227","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/edba8091d05e5cdfb369066170aece21fe1c3227/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"4433d11caf52feebb727817ebe9819632c65d883","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4433d11caf52feebb727817ebe9819632c65d883","html_url":"https://github.com/Nethereum/Nethereum/commit/4433d11caf52feebb727817ebe9819632c65d883"},{"sha":"2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d","html_url":"https://github.com/Nethereum/Nethereum/commit/2ba389250a0ce9ebf2a6dcd52b6e3bbaab0a2b0d"}]},{"sha":"4d860580495a03f0ff6f19935ff6af8936356e0f","node_id":"C_kwDOAslKS9oAKDRkODYwNTgwNDk1YTAzZjBmZjZmMTk5MzVmZjZhZjg5MzYzNTZlMGY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T16:47:14Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T16:47:14Z"},"message":"Native AOT Sample Test Project","tree":{"sha":"d0b5ff62757efc7f3cd185ce2e068df3aff1fd7c","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/d0b5ff62757efc7f3cd185ce2e068df3aff1fd7c"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/4d860580495a03f0ff6f19935ff6af8936356e0f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4d860580495a03f0ff6f19935ff6af8936356e0f","html_url":"https://github.com/Nethereum/Nethereum/commit/4d860580495a03f0ff6f19935ff6af8936356e0f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4d860580495a03f0ff6f19935ff6af8936356e0f/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"edba8091d05e5cdfb369066170aece21fe1c3227","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/edba8091d05e5cdfb369066170aece21fe1c3227","html_url":"https://github.com/Nethereum/Nethereum/commit/edba8091d05e5cdfb369066170aece21fe1c3227"}]},{"sha":"e99d1746ab920aa13ac5add88254826dbba26e2b","node_id":"C_kwDOAslKS9oAKGU5OWQxNzQ2YWI5MjBhYTEzYWM1YWRkODgyNTQ4MjZkYmJhMjZlMmI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T16:50:50Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T16:50:50Z"},"message":"Nethereum.JsonRpc.SystemTextJsonRpcClient\n\nA lightweight and AOT-friendly JSON-RPC client for Ethereum, using System.Text.Json.\n\nThis provides a new JSON RPC Client and Simple RPC Client including Nethereum RPC Context for generated serialisation of RPC types to provide the rpc transport with System.Text.Json instead of Newtonsoft making it suitable for AOT Native builds using .net9.","tree":{"sha":"15c13812a411e533f8dce734f0632beeacb0933f","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/15c13812a411e533f8dce734f0632beeacb0933f"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e99d1746ab920aa13ac5add88254826dbba26e2b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e99d1746ab920aa13ac5add88254826dbba26e2b","html_url":"https://github.com/Nethereum/Nethereum/commit/e99d1746ab920aa13ac5add88254826dbba26e2b","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e99d1746ab920aa13ac5add88254826dbba26e2b/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"4d860580495a03f0ff6f19935ff6af8936356e0f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4d860580495a03f0ff6f19935ff6af8936356e0f","html_url":"https://github.com/Nethereum/Nethereum/commit/4d860580495a03f0ff6f19935ff6af8936356e0f"}]},{"sha":"8466e44de02c0578fec22dff886bf88548088c7c","node_id":"C_kwDOAslKS9oAKDg0NjZlNDRkZTAyYzA1NzhmZWMyMmRmZjg4NmJmODg1NDgwODhjN2M","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:03:52Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:03:52Z"},"message":"Update to all the RPC DTOs, Requests, Responses, to dual support Newtonsoft and System.Text.Json\n\nEvery DTO now has an attribute as follows\n```csharp\n   [JsonProperty(PropertyName = \"decimals\")]\n#if NET6_0_OR_GREATER\n[System.Text.Json.Serialization.JsonPropertyName(\"decimals\")]\n#endif\n        public uint Decimals { get; set; }\n\n```\nto provide serialisation support for both.\n\nHexTypes can be converted by both Newtonsoft and STJ\n\nTransactionReciept does not use JArray, this uses the FilterLog, any extensions from receipt has been converted to do return the same value to  not break any code.\n\nRpcError get deserialised onto JElemetn or JObject and converted to the right type depending on the serialiser.\n\nClients now have a method to DecodeResponse this enables to specific clients to use their own convertors","tree":{"sha":"29b2f7f6048e4b36834ff6dd9d5615a5a1b41837","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/29b2f7f6048e4b36834ff6dd9d5615a5a1b41837"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/8466e44de02c0578fec22dff886bf88548088c7c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8466e44de02c0578fec22dff886bf88548088c7c","html_url":"https://github.com/Nethereum/Nethereum/commit/8466e44de02c0578fec22dff886bf88548088c7c","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8466e44de02c0578fec22dff886bf88548088c7c/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"e99d1746ab920aa13ac5add88254826dbba26e2b","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e99d1746ab920aa13ac5add88254826dbba26e2b","html_url":"https://github.com/Nethereum/Nethereum/commit/e99d1746ab920aa13ac5add88254826dbba26e2b"}]},{"sha":"adb28725ba21c70d0806b90a4534c3c6f8144a12","node_id":"C_kwDOAslKS9oAKGFkYjI4NzI1YmEyMWM3MGQwODA2YjkwYTQ1MzRjM2M2ZjgxNDRhMTI","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:05:50Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:05:50Z"},"message":"LeanIncrementalMerkleTree\n\nNew tree / trie to support proofs","tree":{"sha":"b7bbdff342b002d38cda29a754c2e1b6690876b8","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/b7bbdff342b002d38cda29a754c2e1b6690876b8"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/adb28725ba21c70d0806b90a4534c3c6f8144a12","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/adb28725ba21c70d0806b90a4534c3c6f8144a12","html_url":"https://github.com/Nethereum/Nethereum/commit/adb28725ba21c70d0806b90a4534c3c6f8144a12","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/adb28725ba21c70d0806b90a4534c3c6f8144a12/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"8466e44de02c0578fec22dff886bf88548088c7c","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8466e44de02c0578fec22dff886bf88548088c7c","html_url":"https://github.com/Nethereum/Nethereum/commit/8466e44de02c0578fec22dff886bf88548088c7c"}]},{"sha":"62affe5edd74057ca9ee5f70f864b488037f395d","node_id":"C_kwDOAslKS9oAKDYyYWZmZTVlZGQ3NDA1N2NhOWVlNWY3MGY4NjRiNDg4MDM3ZjM5NWQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:21:59Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:21:59Z"},"message":"BouncyCastle upgrade","tree":{"sha":"65e84ee676fdba1ac1c82dcd52179d9495d4f901","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/65e84ee676fdba1ac1c82dcd52179d9495d4f901"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/62affe5edd74057ca9ee5f70f864b488037f395d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62affe5edd74057ca9ee5f70f864b488037f395d","html_url":"https://github.com/Nethereum/Nethereum/commit/62affe5edd74057ca9ee5f70f864b488037f395d","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62affe5edd74057ca9ee5f70f864b488037f395d/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"adb28725ba21c70d0806b90a4534c3c6f8144a12","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/adb28725ba21c70d0806b90a4534c3c6f8144a12","html_url":"https://github.com/Nethereum/Nethereum/commit/adb28725ba21c70d0806b90a4534c3c6f8144a12"}]},{"sha":"94b214cb943884f2f759961a7e5bcd3bff2dcd46","node_id":"C_kwDOAslKS9oAKDk0YjIxNGNiOTQzODg0ZjJmNzU5OTYxYTdlNWJjZDNiZmYyZGNkNDY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:22:22Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:22:22Z"},"message":"Removing Accounts from the LITE version","tree":{"sha":"929e8c48eac078ebff66b0e126b683588f4de700","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/929e8c48eac078ebff66b0e126b683588f4de700"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/94b214cb943884f2f759961a7e5bcd3bff2dcd46","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/94b214cb943884f2f759961a7e5bcd3bff2dcd46","html_url":"https://github.com/Nethereum/Nethereum/commit/94b214cb943884f2f759961a7e5bcd3bff2dcd46","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/94b214cb943884f2f759961a7e5bcd3bff2dcd46/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"62affe5edd74057ca9ee5f70f864b488037f395d","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62affe5edd74057ca9ee5f70f864b488037f395d","html_url":"https://github.com/Nethereum/Nethereum/commit/62affe5edd74057ca9ee5f70f864b488037f395d"}]},{"sha":"62b06359322c986fa21a8308985e61c4d3c793f9","node_id":"C_kwDOAslKS9oAKDYyYjA2MzU5MzIyYzk4NmZhMjFhODMwODk4NWU2MWM0ZDNjNzkzZjk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:23:07Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:23:07Z"},"message":"Fixing geth dev (forcing dev mining 1 second)","tree":{"sha":"7ea57de0e3790e2864ccdbeba2e0fcf720238332","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/7ea57de0e3790e2864ccdbeba2e0fcf720238332"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/62b06359322c986fa21a8308985e61c4d3c793f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62b06359322c986fa21a8308985e61c4d3c793f9","html_url":"https://github.com/Nethereum/Nethereum/commit/62b06359322c986fa21a8308985e61c4d3c793f9","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62b06359322c986fa21a8308985e61c4d3c793f9/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"94b214cb943884f2f759961a7e5bcd3bff2dcd46","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/94b214cb943884f2f759961a7e5bcd3bff2dcd46","html_url":"https://github.com/Nethereum/Nethereum/commit/94b214cb943884f2f759961a7e5bcd3bff2dcd46"}]},{"sha":"8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","node_id":"C_kwDOAslKS9oAKDhhMjBiY2U4MmZmMGZhMzQzYjQ4YzRjMzYxMWI3YWRmNWFkZjBkYmQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:24:39Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:24:39Z"},"message":"7022 general fixes / changes gas calculation","tree":{"sha":"06f8bbf0b317204ce30fce73bc861cfc8c9b4862","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/06f8bbf0b317204ce30fce73bc861cfc8c9b4862"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","html_url":"https://github.com/Nethereum/Nethereum/commit/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"62b06359322c986fa21a8308985e61c4d3c793f9","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/62b06359322c986fa21a8308985e61c4d3c793f9","html_url":"https://github.com/Nethereum/Nethereum/commit/62b06359322c986fa21a8308985e61c4d3c793f9"}]},{"sha":"2343277dbcb748321a1d638a1e3157b9eb9536a4","node_id":"C_kwDOAslKS9oAKDIzNDMyNzdkYmNiNzQ4MzIxYTFkNjM4YTFlMzE1N2I5ZWI5NTM2YTQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:26:03Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:26:03Z"},"message":"7702 DecodeRLPToAuthorisation7702 to validate the rlp that is being signed by the user... (what am I authorising)","tree":{"sha":"907622222830f34fc4bc65320f0960fa15ee2f6b","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/907622222830f34fc4bc65320f0960fa15ee2f6b"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/2343277dbcb748321a1d638a1e3157b9eb9536a4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2343277dbcb748321a1d638a1e3157b9eb9536a4","html_url":"https://github.com/Nethereum/Nethereum/commit/2343277dbcb748321a1d638a1e3157b9eb9536a4","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2343277dbcb748321a1d638a1e3157b9eb9536a4/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd","html_url":"https://github.com/Nethereum/Nethereum/commit/8a20bce82ff0fa343b48c4c3611b7adf5adf0dbd"}]},{"sha":"d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","node_id":"C_kwDOAslKS9oAKGQzNGNkN2E4OWJjZjVjZTM4Y2Q2NTViM2FkZTM4OTU3ZmM0ZTczZDE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:26:37Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:26:37Z"},"message":"Blazor components (update the project)","tree":{"sha":"60422fde258db8329614b9c78e342633e73d41cb","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/60422fde258db8329614b9c78e342633e73d41cb"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","html_url":"https://github.com/Nethereum/Nethereum/commit/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"2343277dbcb748321a1d638a1e3157b9eb9536a4","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2343277dbcb748321a1d638a1e3157b9eb9536a4","html_url":"https://github.com/Nethereum/Nethereum/commit/2343277dbcb748321a1d638a1e3157b9eb9536a4"}]},{"sha":"9d30509451afd74caa77908ad0df397450e8e9c3","node_id":"C_kwDOAslKS9oAKDlkMzA1MDk0NTFhZmQ3NGNhYTc3OTA4YWQwZGYzOTc0NTBlOGU5YzM","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:27:14Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:27:14Z"},"message":"Fixing tests","tree":{"sha":"cf6997c21085e261762f1db439567b5dd8c6c8ba","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/cf6997c21085e261762f1db439567b5dd8c6c8ba"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/9d30509451afd74caa77908ad0df397450e8e9c3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9d30509451afd74caa77908ad0df397450e8e9c3","html_url":"https://github.com/Nethereum/Nethereum/commit/9d30509451afd74caa77908ad0df397450e8e9c3","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9d30509451afd74caa77908ad0df397450e8e9c3/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1","html_url":"https://github.com/Nethereum/Nethereum/commit/d34cd7a89bcf5ce38cd655b3ade38957fc4e73d1"}]},{"sha":"5f64edf603a39e1faf1c5863adc42a95526ff685","node_id":"C_kwDOAslKS9oAKDVmNjRlZGY2MDNhMzllMWZhZjFjNTg2M2FkYzQyYTk1NTI2ZmY2ODU","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:00Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:00Z"},"message":"AA updates.. WIP","tree":{"sha":"8ae36c3b77e16ef476a73a239f060d4b070e79b9","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/8ae36c3b77e16ef476a73a239f060d4b070e79b9"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/5f64edf603a39e1faf1c5863adc42a95526ff685","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5f64edf603a39e1faf1c5863adc42a95526ff685","html_url":"https://github.com/Nethereum/Nethereum/commit/5f64edf603a39e1faf1c5863adc42a95526ff685","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5f64edf603a39e1faf1c5863adc42a95526ff685/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"9d30509451afd74caa77908ad0df397450e8e9c3","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9d30509451afd74caa77908ad0df397450e8e9c3","html_url":"https://github.com/Nethereum/Nethereum/commit/9d30509451afd74caa77908ad0df397450e8e9c3"}]},{"sha":"e346b675ebea77c38dabae22bc6220bcd0ac6b3d","node_id":"C_kwDOAslKS9oAKGUzNDZiNjc1ZWJlYTc3YzM4ZGFiYWUyMmJjNjIyMGJjZDBhYzZiM2Q","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:22Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:22Z"},"message":"EVM fix","tree":{"sha":"3a9729f3a3e65dd5506a17aa800557f9abed27b4","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/3a9729f3a3e65dd5506a17aa800557f9abed27b4"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/e346b675ebea77c38dabae22bc6220bcd0ac6b3d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e346b675ebea77c38dabae22bc6220bcd0ac6b3d","html_url":"https://github.com/Nethereum/Nethereum/commit/e346b675ebea77c38dabae22bc6220bcd0ac6b3d","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e346b675ebea77c38dabae22bc6220bcd0ac6b3d/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"5f64edf603a39e1faf1c5863adc42a95526ff685","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5f64edf603a39e1faf1c5863adc42a95526ff685","html_url":"https://github.com/Nethereum/Nethereum/commit/5f64edf603a39e1faf1c5863adc42a95526ff685"}]},{"sha":"c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","node_id":"C_kwDOAslKS9oAKGMxYmNhZjg4YjNlZTI1MTNlZTk4OGQ1ODQ4NGQzMTE2ZmY1YTc3YjQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:43Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:43Z"},"message":"Adding Nethereum.Blazor to Metamask","tree":{"sha":"27bbec14be9251b92fc3c2a43b908f4a323cbd63","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/27bbec14be9251b92fc3c2a43b908f4a323cbd63"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","html_url":"https://github.com/Nethereum/Nethereum/commit/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"e346b675ebea77c38dabae22bc6220bcd0ac6b3d","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/e346b675ebea77c38dabae22bc6220bcd0ac6b3d","html_url":"https://github.com/Nethereum/Nethereum/commit/e346b675ebea77c38dabae22bc6220bcd0ac6b3d"}]},{"sha":"2d925718cb1c9026d9fff75d4f5f3a512c4cffea","node_id":"C_kwDOAslKS9oAKDJkOTI1NzE4Y2IxYzkwMjZkOWZmZjc1ZDRmNWYzYTUxMmM0Y2ZmZWE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:56Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:28:56Z"},"message":"AA update tests","tree":{"sha":"47445d9235b8480093982c52df87bbf817fff48e","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/47445d9235b8480093982c52df87bbf817fff48e"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/2d925718cb1c9026d9fff75d4f5f3a512c4cffea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2d925718cb1c9026d9fff75d4f5f3a512c4cffea","html_url":"https://github.com/Nethereum/Nethereum/commit/2d925718cb1c9026d9fff75d4f5f3a512c4cffea","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2d925718cb1c9026d9fff75d4f5f3a512c4cffea/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4","html_url":"https://github.com/Nethereum/Nethereum/commit/c1bcaf88b3ee2513ee988d58484d3116ff5a77b4"}]},{"sha":"c7f645a9a866832c4c0ac9e1efe7e51b167f9269","node_id":"C_kwDOAslKS9oAKGM3ZjY0NWE5YTg2NjgzMmM0YzBhYzllMWVmZTdlNTFiMTY3ZjkyNjk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:33:46Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-14T17:33:46Z"},"message":"New generator update. (WIP)\n\nSupport to have a common folder and shared namespace for shared Structs, Errors, etc across different contracts.\nNew Blazor Page generator, per generated smart contract service now you have a blazor web page to deploy, query and create transactions for all functions","tree":{"sha":"ba31a32c373338b71453d730a5905023f2abd0d9","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/ba31a32c373338b71453d730a5905023f2abd0d9"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/c7f645a9a866832c4c0ac9e1efe7e51b167f9269","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c7f645a9a866832c4c0ac9e1efe7e51b167f9269","html_url":"https://github.com/Nethereum/Nethereum/commit/c7f645a9a866832c4c0ac9e1efe7e51b167f9269","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c7f645a9a866832c4c0ac9e1efe7e51b167f9269/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"2d925718cb1c9026d9fff75d4f5f3a512c4cffea","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2d925718cb1c9026d9fff75d4f5f3a512c4cffea","html_url":"https://github.com/Nethereum/Nethereum/commit/2d925718cb1c9026d9fff75d4f5f3a512c4cffea"}]},{"sha":"48a2302565e158810b254c8b75aea4977de8703f","node_id":"C_kwDOAslKS9oAKDQ4YTIzMDI1NjVlMTU4ODEwYjI1NGM4Yjc1YWVhNDk3N2RlODcwM2Y","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T09:45:17Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T09:45:17Z"},"message":"Nethereum.ABI.SourceGenerators wip experiment to avoid attribute decoding","tree":{"sha":"b13fbdc0bdfe9000b56fdb6b9c8c9de651fa2c35","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/b13fbdc0bdfe9000b56fdb6b9c8c9de651fa2c35"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/48a2302565e158810b254c8b75aea4977de8703f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/48a2302565e158810b254c8b75aea4977de8703f","html_url":"https://github.com/Nethereum/Nethereum/commit/48a2302565e158810b254c8b75aea4977de8703f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/48a2302565e158810b254c8b75aea4977de8703f/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"c7f645a9a866832c4c0ac9e1efe7e51b167f9269","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c7f645a9a866832c4c0ac9e1efe7e51b167f9269","html_url":"https://github.com/Nethereum/Nethereum/commit/c7f645a9a866832c4c0ac9e1efe7e51b167f9269"}]},{"sha":"a184667de051281e89546c0e215aa0c8ce4aabaa","node_id":"C_kwDOAslKS9oAKGExODQ2NjdkZTA1MTI4MWU4OTU0NmMwZTIxNWFhMGM4Y2U0YWFiYWE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:22:31Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:22:31Z"},"message":"Extending support for BouncyCastle.Cryptography to 472, removing netstandard1.1 support, keeping it at 2.0 latest version of Portable.BouncyCastle for lower frameworks","tree":{"sha":"8eb4c9bb4136b3c401af4afce9fcee0125258dc2","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/8eb4c9bb4136b3c401af4afce9fcee0125258dc2"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/a184667de051281e89546c0e215aa0c8ce4aabaa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/a184667de051281e89546c0e215aa0c8ce4aabaa","html_url":"https://github.com/Nethereum/Nethereum/commit/a184667de051281e89546c0e215aa0c8ce4aabaa","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/a184667de051281e89546c0e215aa0c8ce4aabaa/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"48a2302565e158810b254c8b75aea4977de8703f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/48a2302565e158810b254c8b75aea4977de8703f","html_url":"https://github.com/Nethereum/Nethereum/commit/48a2302565e158810b254c8b75aea4977de8703f"}]},{"sha":"9b392824b0beec725ff7067fe9dbe4ddb8ed3746","node_id":"C_kwDOAslKS9oAKDliMzkyODI0YjBiZWVjNzI1ZmY3MDY3ZmU5ZGJlNGRkYjhlZDM3NDY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:42:35Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:42:35Z"},"message":"Fixing tests","tree":{"sha":"93d2e77188b30c36ce5b2b729722d3f010528f38","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/93d2e77188b30c36ce5b2b729722d3f010528f38"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/9b392824b0beec725ff7067fe9dbe4ddb8ed3746","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9b392824b0beec725ff7067fe9dbe4ddb8ed3746","html_url":"https://github.com/Nethereum/Nethereum/commit/9b392824b0beec725ff7067fe9dbe4ddb8ed3746","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9b392824b0beec725ff7067fe9dbe4ddb8ed3746/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"a184667de051281e89546c0e215aa0c8ce4aabaa","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/a184667de051281e89546c0e215aa0c8ce4aabaa","html_url":"https://github.com/Nethereum/Nethereum/commit/a184667de051281e89546c0e215aa0c8ce4aabaa"}]},{"sha":"7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","node_id":"C_kwDOAslKS9oAKDdkMjlmOTZlYjM2MWI1ZjZlYmI5NDg5YzFiOWFmMzNlNDliZTBiMjk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:42:58Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:42:58Z"},"message":"Fix namespace","tree":{"sha":"cfe0f01a24e7c6eaf143026b67d4d52e7c746df6","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/cfe0f01a24e7c6eaf143026b67d4d52e7c746df6"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","html_url":"https://github.com/Nethereum/Nethereum/commit/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"9b392824b0beec725ff7067fe9dbe4ddb8ed3746","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/9b392824b0beec725ff7067fe9dbe4ddb8ed3746","html_url":"https://github.com/Nethereum/Nethereum/commit/9b392824b0beec725ff7067fe9dbe4ddb8ed3746"}]},{"sha":"7631950459bae1c88def833afaaaeabc97801baf","node_id":"C_kwDOAslKS9oAKDc2MzE5NTA0NTliYWUxYzg4ZGVmODMzYWZhYWFlYWJjOTc4MDFiYWY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:43:17Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T17:43:17Z"},"message":"Removing netstandard1.3","tree":{"sha":"fa961e811fd27d87232312c581212106bb37ca50","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/fa961e811fd27d87232312c581212106bb37ca50"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/7631950459bae1c88def833afaaaeabc97801baf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7631950459bae1c88def833afaaaeabc97801baf","html_url":"https://github.com/Nethereum/Nethereum/commit/7631950459bae1c88def833afaaaeabc97801baf","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7631950459bae1c88def833afaaaeabc97801baf/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29","html_url":"https://github.com/Nethereum/Nethereum/commit/7d29f96eb361b5f6ebb9489c1b9af33e49be0b29"}]},{"sha":"2b0407d995b677b77f01e74c543389ad173404f9","node_id":"C_kwDOAslKS9oAKDJiMDQwN2Q5OTViNjc3Yjc3ZjAxZTc0YzU0MzM4OWFkMTczNDA0Zjk","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T18:58:50Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-15T18:58:50Z"},"message":"Error GetData returning a string","tree":{"sha":"86dcbaf086e3274d24724e472c21f3c3f77ff50c","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/86dcbaf086e3274d24724e472c21f3c3f77ff50c"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/2b0407d995b677b77f01e74c543389ad173404f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2b0407d995b677b77f01e74c543389ad173404f9","html_url":"https://github.com/Nethereum/Nethereum/commit/2b0407d995b677b77f01e74c543389ad173404f9","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2b0407d995b677b77f01e74c543389ad173404f9/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"7631950459bae1c88def833afaaaeabc97801baf","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/7631950459bae1c88def833afaaaeabc97801baf","html_url":"https://github.com/Nethereum/Nethereum/commit/7631950459bae1c88def833afaaaeabc97801baf"}]},{"sha":"5eccd836aa7897410b56a4604729c8d6013a3244","node_id":"C_kwDOAslKS9oAKDVlY2NkODM2YWE3ODk3NDEwYjU2YTQ2MDQ3MjljOGQ2MDEzYTMyNDQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-16T06:27:46Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-16T06:27:46Z"},"message":"System Text Json Further support\n\nRPC Error fix (required public parameters)\nRPC Clients serialisation options\nSupport to Deserialise the ABI using STJ using ABIJsonDeserialiserSTJ\nThis is opt in only for USING AbiDeserializationSettings / UseSystemTextJson\nAOT samples include Error decoding and Structs for a complex\nNOTE to workaround ' vs \" these are converted before deserialising the contract abi","tree":{"sha":"37ef36684d7374381b6e8356b4b2ad27cbe7a848","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/37ef36684d7374381b6e8356b4b2ad27cbe7a848"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/5eccd836aa7897410b56a4604729c8d6013a3244","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5eccd836aa7897410b56a4604729c8d6013a3244","html_url":"https://github.com/Nethereum/Nethereum/commit/5eccd836aa7897410b56a4604729c8d6013a3244","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5eccd836aa7897410b56a4604729c8d6013a3244/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"2b0407d995b677b77f01e74c543389ad173404f9","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/2b0407d995b677b77f01e74c543389ad173404f9","html_url":"https://github.com/Nethereum/Nethereum/commit/2b0407d995b677b77f01e74c543389ad173404f9"}]},{"sha":"ef74cf6d1dc85dcfb5540fae20fb7756760417a0","node_id":"C_kwDOAslKS9oAKGVmNzRjZjZkMWRjODVkY2ZiNTU0MGZhZTIwZmI3NzU2NzYwNDE3YTA","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T05:48:06Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T05:48:06Z"},"message":"Refactoring the code generator to remove generics, Dotnet console, generator and unit test fixes.\n\nThe code generator output to Typescript was having errors resolving generics after adding the blazor page, now all the generics have been removed where possible (keeping just a generic class) to avoid errors. (Eventually found the error and long fix)\n\nDotnet all the projects added support to the shared types changes, blazor generation added in the multiconfig sections\n\nGeneral fixes in Typescript version.","tree":{"sha":"4d336b6e9761df6ebcad59130610097b760b4c5b","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/4d336b6e9761df6ebcad59130610097b760b4c5b"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/ef74cf6d1dc85dcfb5540fae20fb7756760417a0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ef74cf6d1dc85dcfb5540fae20fb7756760417a0","html_url":"https://github.com/Nethereum/Nethereum/commit/ef74cf6d1dc85dcfb5540fae20fb7756760417a0","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ef74cf6d1dc85dcfb5540fae20fb7756760417a0/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"5eccd836aa7897410b56a4604729c8d6013a3244","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/5eccd836aa7897410b56a4604729c8d6013a3244","html_url":"https://github.com/Nethereum/Nethereum/commit/5eccd836aa7897410b56a4604729c8d6013a3244"}]},{"sha":"0b0d02345337b87eb1f42c69882f79660969b1b6","node_id":"C_kwDOAslKS9oAKDBiMGQwMjM0NTMzN2I4N2ViMWY0MmM2OTg4MmY3OTY2MDk2OWIxYjY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T10:36:45Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T10:36:45Z"},"message":"New version of the code generator and README update","tree":{"sha":"bf8fe2a3acfc6d22e9da35e41aebb505f3f49635","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/bf8fe2a3acfc6d22e9da35e41aebb505f3f49635"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/0b0d02345337b87eb1f42c69882f79660969b1b6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0b0d02345337b87eb1f42c69882f79660969b1b6","html_url":"https://github.com/Nethereum/Nethereum/commit/0b0d02345337b87eb1f42c69882f79660969b1b6","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0b0d02345337b87eb1f42c69882f79660969b1b6/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"ef74cf6d1dc85dcfb5540fae20fb7756760417a0","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/ef74cf6d1dc85dcfb5540fae20fb7756760417a0","html_url":"https://github.com/Nethereum/Nethereum/commit/ef74cf6d1dc85dcfb5540fae20fb7756760417a0"}]},{"sha":"c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","node_id":"C_kwDOAslKS9oAKGM0ZThlMDgzMzhmMWFjNDY2YWE5NmVlODlkMmRmMzk5ZDhlMmZmOGY","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T17:13:14Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T17:13:14Z"},"message":"Blazor page generator changes, adding page parameters, namespace and removing rendering","tree":{"sha":"95c7c4a68c5a6c55d4d1489daba303744aff16b6","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/95c7c4a68c5a6c55d4d1489daba303744aff16b6"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","html_url":"https://github.com/Nethereum/Nethereum/commit/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"0b0d02345337b87eb1f42c69882f79660969b1b6","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/0b0d02345337b87eb1f42c69882f79660969b1b6","html_url":"https://github.com/Nethereum/Nethereum/commit/0b0d02345337b87eb1f42c69882f79660969b1b6"}]},{"sha":"4e534aa42a907b3314adb34341d996756bd73e0a","node_id":"C_kwDOAslKS9oAKDRlNTM0YWE0MmE5MDdiMzMxNGFkYjM0MzQxZDk5Njc1NmJkNzNlMGE","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T17:14:06Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-23T17:14:06Z"},"message":"MudBlazorComponents removing authorisationlist from rendering","tree":{"sha":"88beb7cb67eab6df6b5f3ed87b77a37742d677f4","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/88beb7cb67eab6df6b5f3ed87b77a37742d677f4"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/4e534aa42a907b3314adb34341d996756bd73e0a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4e534aa42a907b3314adb34341d996756bd73e0a","html_url":"https://github.com/Nethereum/Nethereum/commit/4e534aa42a907b3314adb34341d996756bd73e0a","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4e534aa42a907b3314adb34341d996756bd73e0a/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f","html_url":"https://github.com/Nethereum/Nethereum/commit/c4e8e08338f1ac466aa96ee89d2df399d8e2ff8f"}]},{"sha":"de10865244b87d3ce9b6fe8c5ed64282e4affea8","node_id":"C_kwDOAslKS9oAKGRlMTA4NjUyNDRiODdkM2NlOWI2ZmU4YzVlZDY0MjgyZTRhZmZlYTg","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-27T10:43:45Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2025-05-27T10:43:45Z"},"message":"Merge pull request #1068 from SolidityNinja/feature/debug-tracers\n\ndebug_trace... endpoints improved","tree":{"sha":"8896508e4c6a0c1d761efa535e39f797ae2f42db","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/8896508e4c6a0c1d761efa535e39f797ae2f42db"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/de10865244b87d3ce9b6fe8c5ed64282e4affea8","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJoNZdhCRC1aQ7uu5UhlAAANo8QAEFd4SjE7pALZNkU42uTrjad\nVlcukr17rI9UViUJdcLkEUk1frPgLjisTKJicwH24ak72EB0Bxc7mamNTsz9XYHJ\nbooKbSvi6iNlRO5+6D9TruRXv8KyQjcWHF7m4S+jS2kB9+c0O2m+4CdW0/zSRqz5\n753M9+4+oJ+oG6VvBE2+Mub/m1WW3LZNvi949qIGkpXD2r05VBv/D0uaIlOKfZh4\nWuLBUwQTDloHN9OEeolgHriIav8HTTPvnOURWxWr7hnxpuX1l85FNDcIib8C8M0l\nD6B7ic8HdyY3HJaMSyqHKCaDCagWVwD0HuF+u2LVgr39B79TSGrICU5AIjIxfOMe\nILEEdm48wl1vbqwsOScLTFgAo2aZ35zuzQWoFdCDerlSV5C1TlUOvD8uH70sxCZc\nXjCmTWi30Z4xxs5hEbSPf/KAzMLhmrTuR1SzMJPZbQ6RpazjdHbv7X7Iv+Tp0BMB\nPDC30RTWvNfAJ26a06mAbQ9KxIPLnqs0HeUCeU70fRPknx3+g/flHmakohT3c9cc\n37uOgmrrAyCWKtwik+kaKnpIru6vNpeCzyvwmzN+sWKheLni0SdcdJm6WslWBC9D\nsq6t2E3ixRegb26EO8a2CokwUQudgEYPfSfUjD23mNmvclXiiawgUfUEFuiWxknZ\ndrRuenLSei5CsoWRMiVC\n=ux1e\n-----END PGP SIGNATURE-----\n","payload":"tree 8896508e4c6a0c1d761efa535e39f797ae2f42db\nparent 4e534aa42a907b3314adb34341d996756bd73e0a\nparent b54cde4534d614defa158af36ac5d3ed9d8538e1\nauthor Juan Blanco <juanfranblanco@hotmail.com> 1748342625 +0100\ncommitter GitHub <noreply@github.com> 1748342625 +0100\n\nMerge pull request #1068 from SolidityNinja/feature/debug-tracers\n\ndebug_trace... endpoints improved","verified_at":"2025-05-27T10:43:48Z"}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/de10865244b87d3ce9b6fe8c5ed64282e4affea8","html_url":"https://github.com/Nethereum/Nethereum/commit/de10865244b87d3ce9b6fe8c5ed64282e4affea8","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/de10865244b87d3ce9b6fe8c5ed64282e4affea8/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"4e534aa42a907b3314adb34341d996756bd73e0a","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/4e534aa42a907b3314adb34341d996756bd73e0a","html_url":"https://github.com/Nethereum/Nethereum/commit/4e534aa42a907b3314adb34341d996756bd73e0a"},{"sha":"b54cde4534d614defa158af36ac5d3ed9d8538e1","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/b54cde4534d614defa158af36ac5d3ed9d8538e1","html_url":"https://github.com/Nethereum/Nethereum/commit/b54cde4534d614defa158af36ac5d3ed9d8538e1"}]},{"sha":"1d263ad6341e51cb140798cf59e01d34898d7044","node_id":"C_kwDOAslKS9oAKDFkMjYzYWQ2MzQxZTUxY2IxNDA3OThjZjU5ZTAxZDM0ODk4ZDcwNDQ","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-27T15:04:24Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-27T15:04:24Z"},"message":"Adding new nugets and new version","tree":{"sha":"02148d6250b57a1c23dc9066965800d0180f4eb0","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/02148d6250b57a1c23dc9066965800d0180f4eb0"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/1d263ad6341e51cb140798cf59e01d34898d7044","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/1d263ad6341e51cb140798cf59e01d34898d7044","html_url":"https://github.com/Nethereum/Nethereum/commit/1d263ad6341e51cb140798cf59e01d34898d7044","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/1d263ad6341e51cb140798cf59e01d34898d7044/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"de10865244b87d3ce9b6fe8c5ed64282e4affea8","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/de10865244b87d3ce9b6fe8c5ed64282e4affea8","html_url":"https://github.com/Nethereum/Nethereum/commit/de10865244b87d3ce9b6fe8c5ed64282e4affea8"}]},{"sha":"aac2eab3252f31be505ce3c4b070a47ef04db47f","node_id":"C_kwDOAslKS9oAKGFhYzJlYWIzMjUyZjMxYmU1MDVjZTNjNGIwNzBhNDdlZjA0ZGI0N2Y","commit":{"author":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-28T15:09:34Z"},"committer":{"name":"Juan Blanco","email":"juanfranblanco@hotmail.com","date":"2025-05-28T15:09:34Z"},"message":"Upgrade version. FX updates (bouncy, remove projects) STJ project included required pragmas, Codegen nuget updates","tree":{"sha":"45ea29e20337cc49ae5e0cc5eb7fbdeb9cae02e7","url":"https://api.github.com/repos/Nethereum/Nethereum/git/trees/45ea29e20337cc49ae5e0cc5eb7fbdeb9cae02e7"},"url":"https://api.github.com/repos/Nethereum/Nethereum/git/commits/aac2eab3252f31be505ce3c4b070a47ef04db47f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null,"verified_at":null}},"url":"https://api.github.com/repos/Nethereum/Nethereum/commits/aac2eab3252f31be505ce3c4b070a47ef04db47f","html_url":"https://github.com/Nethereum/Nethereum/commit/aac2eab3252f31be505ce3c4b070a47ef04db47f","comments_url":"https://api.github.com/repos/Nethereum/Nethereum/commits/aac2eab3252f31be505ce3c4b070a47ef04db47f/comments","author":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"committer":{"login":"juanfranblanco","id":562371,"node_id":"MDQ6VXNlcjU2MjM3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/562371?v=4","gravatar_id":"","url":"https://api.github.com/users/juanfranblanco","html_url":"https://github.com/juanfranblanco","followers_url":"https://api.github.com/users/juanfranblanco/followers","following_url":"https://api.github.com/users/juanfranblanco/following{/other_user}","gists_url":"https://api.github.com/users/juanfranblanco/gists{/gist_id}","starred_url":"https://api.github.com/users/juanfranblanco/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/juanfranblanco/subscriptions","organizations_url":"https://api.github.com/users/juanfranblanco/orgs","repos_url":"https://api.github.com/users/juanfranblanco/repos","events_url":"https://api.github.com/users/juanfranblanco/events{/privacy}","received_events_url":"https://api.github.com/users/juanfranblanco/received_events","type":"User","user_view_type":"public","site_admin":false},"parents":[{"sha":"1d263ad6341e51cb140798cf59e01d34898d7044","url":"https://api.github.com/repos/Nethereum/Nethereum/commits/1d263ad6341e51cb140798cf59e01d34898d7044","html_url":"https://github.com/Nethereum/Nethereum/commit/1d263ad6341e51cb140798cf59e01d34898d7044"}]}],"files":[{"sha":"5bc4559efc337c5a714e43f5c851afdf809ff0d0","filename":"Nethereum.sln","status":"modified","additions":140,"deletions":0,"changes":140,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/Nethereum.sln","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/Nethereum.sln","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/Nethereum.sln?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -320,6 +320,14 @@ Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"ExampleProject.Wasm\", \"cons\n EndProject\n Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.Unity.EIP6963\", \"src\\Nethereum.Unity.EIP6963\\Nethereum.Unity.EIP6963.csproj\", \"{396AD31B-0230-8CDF-2506-0B5B9B3C38F1}\"\n EndProject\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.AccountAbstraction.SimpleAccount\", \"src\\Nethereum.AccountAbstraction.SimpleAccount\\Nethereum.AccountAbstraction.SimpleAccount.csproj\", \"{9C32EE62-5032-A0C7-DD6E-785E954B2D26}\"\n+EndProject\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.MudBlazorComponents\", \"src\\Nethereum.MudBlazorComponents\\Nethereum.MudBlazorComponents.csproj\", \"{B80F044A-F3C9-7C8C-C853-7DC26F01F235}\"\n+EndProject\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.AOTSigningTest\", \"consoletests\\Nethereum.AOTSigningTest\\Nethereum.AOTSigningTest.csproj\", \"{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}\"\n+EndProject\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.JsonRpc.SystemTextJsonRpcClient\", \"src\\Nethereum.JsonRpc.SystemTextJsonRpcClient\\Nethereum.JsonRpc.SystemTextJsonRpcClient.csproj\", \"{95D1833F-9D81-484C-982C-85D84B3C1049}\"\n+EndProject\n Global\n \tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n \t\tDebug|Any CPU = Debug|Any CPU\n@@ -3924,6 +3932,134 @@ Global\n \t\t{396AD31B-0230-8CDF-2506-0B5B9B3C38F1}.Release|x64.Build.0 = Release|Any CPU\n \t\t{396AD31B-0230-8CDF-2506-0B5B9B3C38F1}.Release|x86.ActiveCfg = Release|Any CPU\n \t\t{396AD31B-0230-8CDF-2506-0B5B9B3C38F1}.Release|x86.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|ARM.ActiveCfg = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|ARM.Build.0 = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|x64.ActiveCfg = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|x64.Build.0 = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|x86.ActiveCfg = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Debug|x86.Build.0 = Debug|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|Any CPU.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|ARM.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|ARM.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|x64.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|x64.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|x86.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportDebug|x86.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|Any CPU.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|ARM.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|ARM.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|x64.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|x64.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|x86.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.ExportRelease|x86.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|Any CPU.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|ARM.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|ARM.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|x64.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|x64.Build.0 = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|x86.ActiveCfg = Release|Any CPU\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26}.Release|x86.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|ARM.ActiveCfg = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|ARM.Build.0 = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|x64.ActiveCfg = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|x64.Build.0 = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|x86.ActiveCfg = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Debug|x86.Build.0 = Debug|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|Any CPU.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|ARM.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|ARM.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|x64.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|x64.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|x86.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportDebug|x86.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|Any CPU.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|ARM.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|ARM.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|x64.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|x64.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|x86.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.ExportRelease|x86.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|Any CPU.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|ARM.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|ARM.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|x64.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|x64.Build.0 = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|x86.ActiveCfg = Release|Any CPU\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235}.Release|x86.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|ARM.ActiveCfg = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|ARM.Build.0 = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|x64.ActiveCfg = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|x64.Build.0 = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|x86.ActiveCfg = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Debug|x86.Build.0 = Debug|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|Any CPU.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|ARM.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|ARM.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|x64.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|x64.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|x86.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportDebug|x86.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|Any CPU.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|ARM.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|ARM.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|x64.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|x64.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|x86.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.ExportRelease|x86.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|Any CPU.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|ARM.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|ARM.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|x64.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|x64.Build.0 = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|x86.ActiveCfg = Release|Any CPU\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6}.Release|x86.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|ARM.ActiveCfg = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|ARM.Build.0 = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|x64.ActiveCfg = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|x64.Build.0 = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|x86.ActiveCfg = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Debug|x86.Build.0 = Debug|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|Any CPU.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|ARM.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|ARM.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|x64.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|x64.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|x86.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportDebug|x86.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|Any CPU.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|ARM.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|ARM.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|x64.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|x64.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|x86.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.ExportRelease|x86.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|Any CPU.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|ARM.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|ARM.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|x64.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|x64.Build.0 = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|x86.ActiveCfg = Release|Any CPU\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049}.Release|x86.Build.0 = Release|Any CPU\n \tEndGlobalSection\n \tGlobalSection(SolutionProperties) = preSolution\n \t\tHideSolutionNode = FALSE\n@@ -4085,6 +4221,10 @@ Global\n \t\t{B76224EC-BC23-1A5E-C8FB-DD74732E3CED} = {B217ED72-2663-484E-AAD8-2C32013A2F2D}\n \t\t{D13D973D-3F3A-107F-CD76-8CAC764A9BEA} = {7125267C-FD3B-45CF-99C3-2A8BE11BBCC8}\n \t\t{396AD31B-0230-8CDF-2506-0B5B9B3C38F1} = {019335F4-59C6-4413-BC8E-E5332C1F35C6}\n+\t\t{9C32EE62-5032-A0C7-DD6E-785E954B2D26} = {02EA681E-C7D8-13C7-8484-4AC65E1B71E8}\n+\t\t{B80F044A-F3C9-7C8C-C853-7DC26F01F235} = {B217ED72-2663-484E-AAD8-2C32013A2F2D}\n+\t\t{81D4D45C-220F-457F-916E-EE9F0EB9FEB6} = {A635472A-99CA-4964-B320-536EF5C8BED7}\n+\t\t{95D1833F-9D81-484C-982C-85D84B3C1049} = {F7E94706-FF67-4766-BBBD-27E7CED957A3}\n \tEndGlobalSection\n \tGlobalSection(ExtensibilityGlobals) = postSolution\n \t\tSolutionGuid = {07A44726-8749-4A9A-8079-FA3C3213BDC1}"},{"sha":"2f92ef69b0542e09f3f7337f8e2eb84053fd3e13","filename":"buildConf/Frameworks.props","status":"modified","additions":18,"deletions":19,"changes":37,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FFrameworks.props","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FFrameworks.props","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/buildConf%2FFrameworks.props?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,51 +9,50 @@\n     <TargetUnityNet472AOT>false</TargetUnityNet472AOT>\n     <TargetUnityAOT>false</TargetUnityAOT>\n     <TargetUnityAOT Condition=\"'$(TargetUnityNet461AOT)' == 'true' Or '$(TargetUnityNet472AOT)' == 'true'\">true</TargetUnityAOT>\n-    <NetStandardImplicitPackageVersion Condition=\" '$(TargetFramework)' != 'netstandard1.1'\">1.6.1</NetStandardImplicitPackageVersion>\n-    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet35)' == 'true' \">netstandard1.1;netstandard2.0;net35;net451;net461;net5.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n-    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet35)' == 'false' \">netstandard1.1;netstandard2.0;net451;net461;net5.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n+    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet35)' == 'true' \">netstandard2.0;net35;net451;net461;net6.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n+    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet35)' == 'false' \">netstandard2.0;net451;net461;net6.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n     <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet461)' == 'true'\">net461</DefaultFrameworksUnitySupport>\n     <DefaultFrameworksUnitySupport Condition=\" '$(TargetNet472)' == 'true'\">net472</DefaultFrameworksUnitySupport>\n-    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNetCore)'== 'true'\">net5.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n+    <DefaultFrameworksUnitySupport Condition=\" '$(TargetNetCore)'== 'true'\">net6.0;net8.0;net9.0</DefaultFrameworksUnitySupport>\n     <DefaultFrameworksUnitySupport Condition=\" '$(TargetNetStandard)'== 'true'\">netstandard2.0</DefaultFrameworksUnitySupport>\n-    <DefaultFrameworks>netstandard1.1;net451;net461;netstandard2.0;net5.0;net8.0;net9.0</DefaultFrameworks>\n+    <DefaultFrameworks>net451;net461;netstandard2.0;net6.0;net8.0;net9.0</DefaultFrameworks>\n     <DefaultFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461</DefaultFrameworks>\n     <DefaultFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472</DefaultFrameworks>\n-    <DefaultFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net5.0;net8.0;net9.0</DefaultFrameworks>\n+    <DefaultFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net6.0;net8.0;net9.0</DefaultFrameworks>\n     <DefaultFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0</DefaultFrameworks>\n-    <UIFrameworks>netstandard2.0;net5.0;net6.0;net472;net8.0;net9.0</UIFrameworks>\n-    <UIFrameworksCore>net5.0;net6.0;net8.0;net9.0</UIFrameworksCore>\n+    <UIFrameworks>netstandard2.0;net6.0;net472;net8.0;net9.0</UIFrameworks>\n+    <UIFrameworksCore>net6.0;net8.0;net9.0</UIFrameworksCore>\n     <UIFrameworksBlazor>net6.0;net8.0;net9.0</UIFrameworksBlazor>\n-    <ENSFrameworks>net451;net461;netstandard2.0;net5.0;net8.0;net9.0</ENSFrameworks>\n+    <ENSFrameworks>net451;net461;netstandard2.0;net6.0;net8.0;net9.0</ENSFrameworks>\n     <ENSFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461</ENSFrameworks>\n     <ENSFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472</ENSFrameworks>\n-    <ENSFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net5.0;net8.0;net9.0</ENSFrameworks>\n+    <ENSFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net6.0;net8.0;net9.0</ENSFrameworks>\n     <ENSFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0</ENSFrameworks>\n \n-    <HdWalletFrameworks>netstandard1.1;netstandard2.0;net452;net461;</HdWalletFrameworks>\n+    <HdWalletFrameworks>netstandard2.0;net452;net461;</HdWalletFrameworks>\n     <HdWalletFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461;</HdWalletFrameworks>\n     <HdWalletFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472;</HdWalletFrameworks>\n     <HdWalletFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">netstandard2.0</HdWalletFrameworks>\n     <HdWalletFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0</HdWalletFrameworks>\n-    <ExternalSignerFrameworks>netstandard2.0;net461;net5.0;net8.0;net9.0</ExternalSignerFrameworks>\n+    <ExternalSignerFrameworks>netstandard2.0;net461;net6.0;net8.0;net9.0</ExternalSignerFrameworks>\n     <ExternalSignerFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461;</ExternalSignerFrameworks>\n     <ExternalSignerFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472;</ExternalSignerFrameworks>\n-    <ExternalSignerFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net5.0;net8.0;net9.0</ExternalSignerFrameworks>\n+    <ExternalSignerFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net6.0;net8.0;net9.0</ExternalSignerFrameworks>\n     <ExternalSignerFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0;</ExternalSignerFrameworks>\n     <UnityFrameworks>net461;net472;netstandard2.1</UnityFrameworks>\n     <UnityFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461;</UnityFrameworks>\n     <UnityFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472;</UnityFrameworks>\n     <UnityFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.1;</UnityFrameworks>\n-    <IpcWebSocketsFrameworks>net461;netstandard1.3;netstandard2.0;net5.0;net8.0;net9.0</IpcWebSocketsFrameworks>\n+    <IpcWebSocketsFrameworks>net461;netstandard2.0;net6.0;net8.0;net9.0</IpcWebSocketsFrameworks>\n     <IpcWebSocketsFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461;</IpcWebSocketsFrameworks>\n     <IpcWebSocketsFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472;</IpcWebSocketsFrameworks>\n-    <IpcWebSocketsFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net5.0;net8.0;net9.0</IpcWebSocketsFrameworks>\n+    <IpcWebSocketsFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net6.0;net8.0;net9.0</IpcWebSocketsFrameworks>\n     <IpcWebSocketsFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0;</IpcWebSocketsFrameworks>\n \n-    <ReactiveFrameworks>net461;netstandard2.0;net5.0;net8.0;net9.0</ReactiveFrameworks>\n+    <ReactiveFrameworks>net461;netstandard2.0;net6.0;net8.0;net9.0</ReactiveFrameworks>\n     <ReactiveFrameworks Condition=\" '$(TargetNet461)' == 'true'\">net461;</ReactiveFrameworks>\n     <ReactiveFrameworks Condition=\" '$(TargetNet472)' == 'true'\">net472;</ReactiveFrameworks>\n-    <ReactiveFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net5.0;net8.0;net9.0</ReactiveFrameworks>\n+    <ReactiveFrameworks Condition=\" '$(TargetNetCore)' == 'true'\">net6.0;net8.0;net9.0</ReactiveFrameworks>\n     <ReactiveFrameworks Condition=\" '$(TargetNetStandard)' == 'true'\">netstandard2.0;</ReactiveFrameworks>\n \n     <PublishRepositoryUrl>true</PublishRepositoryUrl>\n@@ -79,15 +78,15 @@\n     </Reference>\n   </ItemGroup>\n \n-  <PropertyGroup Condition=\" '$(TargetFramework)' == 'netcoreapp2.1' Or  '$(TargetFramework)' == 'netcoreapp3.1' Or  '$(TargetFramework)' == 'net5.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0' Or  '$(TargetFramework)' == 'netstandard1.1' Or '$(TargetFramework)' == 'net35' Or  '$(TargetFramework)' == 'netstandard2.0' \">\n+  <PropertyGroup Condition=\" '$(TargetFramework)' == 'netcoreapp2.1' Or  '$(TargetFramework)' == 'netcoreapp3.1' Or  '$(TargetFramework)' == 'net6.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0' Or  '$(TargetFramework)' == 'netstandard1.1' Or '$(TargetFramework)' == 'net35' Or  '$(TargetFramework)' == 'netstandard2.0' \">\n     <DefineConstants>$(DefineConstants);PCL</DefineConstants>\n   </PropertyGroup>\n \n   <ItemGroup Condition=\" '$(TargetFramework)' == 'net451' Or '$(TargetFramework)' == 'net452' Or '$(TargetFramework)' == 'net461' Or '$(TargetFramework)' == 'net472' \">\n     <Reference Include=\"System\" />\n     <Reference Include=\"System.Numerics\" />\n     <Reference Include=\"Microsoft.CSharp\" />\n-    <PackageReference Include=\"BouncyCastle\" Version=\"[1.8.2,2.0)\" />\n+ \n   </ItemGroup>\n \n <!--Note Bouncy Portable is not included here to enable Web3.Lite-->"},{"sha":"6e403983d56c92aafd90c8a0205cccc0caecc850","filename":"buildConf/Generic-CodeGen.props","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FGeneric-CodeGen.props","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FGeneric-CodeGen.props","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/buildConf%2FGeneric-CodeGen.props?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,7 @@\n    <RepositoryUrl>https://github.com/Nethereum/Nethereum</RepositoryUrl>\n    <Description>Code generation of Nethereum integration classes using the Solidity Abi and Bin</Description>\n    <Copyright>Juan Blanco</Copyright>\n-   <Version>4.29.0</Version>\n+   <Version>5.0.0</Version>\n    <Authors>Juan Blanco,Nethereum contributors</Authors> \n </PropertyGroup>\n <PropertyGroup>"},{"sha":"43597815d3d9173252de5fe50e77b673cfdf794e","filename":"buildConf/Version.props","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FVersion.props","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2FVersion.props","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/buildConf%2FVersion.props?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,7 +1,7 @@\n <Project>\n   <PropertyGroup>\n-    <VersionMajor>4</VersionMajor>\n-    <VersionMinor>29</VersionMinor>\n+    <VersionMajor>5</VersionMajor>\n+    <VersionMinor>0</VersionMinor>\n     <VersionPatch>0</VersionPatch>\n     <NonDevAssemblyVersion>$(VersionMajor).$(VersionMinor).0</NonDevAssemblyVersion>\n     <AssemblyVersion>$(NonDevAssemblyVersion)</AssemblyVersion>"},{"sha":"d5a910a1111a9885d6b29fec53b33f757b71c929","filename":"buildConf/net35.props","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2Fnet35.props","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/buildConf%2Fnet35.props","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/buildConf%2Fnet35.props?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -12,7 +12,6 @@\n     <Reference Include=\"System\" />\n     <Reference Include=\"netstandard\" />\n     <PackageReference Include=\"TaskParallelLibrary\" Version=\"1.0.2856\" />\n-    <PackageReference Include=\"BouncyCastle\" Version=\"1.8.2\" />\n     <Reference Include=\"Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\">\n       <SpecificVersion>False</SpecificVersion>\n       <HintPath>..\\..\\lib\\Newtonsoft.Json.dll</HintPath>"},{"sha":"bacc99523bda0a33d887a7f5b73dac0f05f08d69","filename":"consoletests/Nethereum.AOTSigningTest/Nethereum.AOTSigningTest.csproj","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/consoletests%2FNethereum.AOTSigningTest%2FNethereum.AOTSigningTest.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/consoletests%2FNethereum.AOTSigningTest%2FNethereum.AOTSigningTest.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/consoletests%2FNethereum.AOTSigningTest%2FNethereum.AOTSigningTest.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,25 @@\n+﻿<Project Sdk=\"Microsoft.NET.Sdk\">\n+\n+  <PropertyGroup>\n+\t  <OutputType>Exe</OutputType>\n+\t  <TargetFramework>net9.0</TargetFramework>\n+\t  <PublishAot>true</PublishAot>\n+\t  <SelfContained>true</SelfContained>\n+\t  <RuntimeIdentifier>win-x64</RuntimeIdentifier>\n+\t  <InvariantGlobalization>true</InvariantGlobalization>\n+\t  <PublishTrimmed>true</PublishTrimmed>\n+  </PropertyGroup>\n+\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\..\\src\\Nethereum.JsonRpc.SystemTextJsonRpcClient\\Nethereum.JsonRpc.SystemTextJsonRpcClient.csproj\" />\n+    <ProjectReference Include=\"..\\..\\src\\Nethereum.Web3\\Nethereum.Web3.csproj\" />\n+  </ItemGroup>\n+\n+  <ItemGroup>\n+    <TrimmerRootAssembly Include=\"Nethereum.Contracts\" />\n+    <TrimmerRootAssembly Include=\"Nethereum.ABI\" />\n+    <TrimmerRootAssembly Include=\"Nethereum.Hex\" />\n+    <TrimmerRootAssembly Include=\"Nethereum.AOTSigningTest\" />\n+  </ItemGroup>\n+  \n+  </Project>\n\\ No newline at end of file"},{"sha":"0fc62fe9573714f8e3bcc263f68e8419cfc2cfcd","filename":"consoletests/Nethereum.AOTSigningTest/Program.cs","status":"added","additions":730,"deletions":0,"changes":730,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/consoletests%2FNethereum.AOTSigningTest%2FProgram.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/consoletests%2FNethereum.AOTSigningTest%2FProgram.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/consoletests%2FNethereum.AOTSigningTest%2FProgram.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,730 @@\n+using System.Text.Json.Serialization;\n+using Nethereum.JsonRpc.Client.RpcMessages;\n+using System.Text.Json;\n+using System.Text.Json.Serialization.Metadata;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.RPC.Eth.DTOs;\n+using System.Threading.Tasks;\n+using System;\n+using System.Net.Http;\n+using System.Threading;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using System.Numerics;\n+using Nethereum.Contracts;\n+using Nethereum.Contracts.Standards.ENS;\n+using System.Collections.Generic;\n+using Nethereum.ABI.EIP712;\n+using Nethereum.Signer.EIP712;\n+using Nethereum.Signer;\n+using Nethereum.JsonRpc.SystemTextJsonRpcClient;\n+using NBitcoin.Secp256k1;\n+\n+\n+namespace Nethereum.AOTSigningTest\n+{\n+    internal class Program\n+    {\n+        static async Task Main(string[] args)\n+        {\n+            var client = new SimpleRpcClient(\"https://eth.drpc.org\");\n+            var web3 = new Web3.Web3(client);\n+            var balance = await web3\n+                .Eth\n+                .GetBalance.SendRequestAsync(\"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\");\n+            Console.WriteLine($\"Balance: {balance}\");\n+\n+            var block = await web3.Eth.Blocks.GetBlockWithTransactionsByNumber.SendRequestAsync(BlockParameter.CreateLatest());\n+            Console.WriteLine($\"Block Number: {block.Number}\");\n+            Console.WriteLine($\"Block Hash: {block.BlockHash}\");\n+            Console.WriteLine($\"Block Transactions: {block.Transactions.Length}\");\n+\n+            var tokenBalance = await web3.Eth.ERC20.GetContractService(\"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2\")\n+                                                               .BalanceOfQueryAsync(\"0x8ee7d9235e01e6b42345120b5d270bdb763624c7\");\n+            //Converting the lowest unit of 18 decimal places of the ERC20 smart contract and display the balance\n+            Console.WriteLine(Nethereum.Web3.Web3.Convert.FromWei(tokenBalance, 18));\n+\n+            var localClient = new RpcClient(\"http://localhost:8545\");\n+            var account = new Nethereum.Web3.Accounts.Account(\"0xb5b1870957d373ef0eeffecc6e4812c0fd08f554b37b233526acc331bf1544f7\");\n+            var web3Local = new Web3.Web3(account, localClient);\n+\n+            Nethereum.Signer.EthECKey.SignRecoverable = false;\n+\n+            var localBalance = await web3Local\n+                .Eth\n+                .GetBalance.SendRequestAsync(\"0x12890d2cce102216644c59daE5baed380d84830c\");\n+\n+            var ethSenderService = web3Local.Eth.GetEtherTransferService();\n+            var transactionHash = await ethSenderService.TransferEtherAsync(\"0x12890d2cce102216644c59daE5baed380d84830c\", 0.01m);\n+            Console.WriteLine($\"Transaction Hash: {transactionHash}\");\n+            try\n+            {\n+                var receipt = await web3Local.TransactionReceiptPolling.PollForReceiptAsync(transactionHash, CancellationToken.None);\n+                if (receipt != null)\n+                {\n+                    Console.WriteLine($\"Transaction Receipt: {receipt.TransactionHash}\");\n+                    Console.WriteLine($\"Block Number: {receipt.BlockNumber}\");\n+                    Console.WriteLine($\"Gas Used: {receipt.GasUsed}\");\n+                    Console.WriteLine($\"Status: {receipt.Status}\");\n+                }\n+                else\n+                {\n+                    Console.WriteLine(\"Transaction receipt not found.\");\n+                }\n+            }\n+            catch (Exception ex)\n+            {\n+                Console.WriteLine($\"Error: {ex.Message}\");\n+            }\n+\n+            //receipt decoding\n+            var txnReceipt = await web3.Eth.Transactions.GetTransactionReceipt.SendRequestAsync(\"0x654288d8536948f30131a769043754bb9af2f5164c6668414751bcfa75c7f4e0\");\n+\n+            if (txnReceipt == null)\n+            {\n+                Console.WriteLine(\"Transaction receipt not found.\");\n+                return;\n+            }\n+\n+            Console.WriteLine(\"Logs\");\n+\n+            foreach (var log in txnReceipt.Logs)\n+            {\n+                Console.WriteLine($\"Log Address: {log.Address}\");\n+                Console.WriteLine($\"Log Data: {log.Data}\");\n+                Console.WriteLine($\"Log Topics: {string.Join(\", \", log.Topics)}\");\n+            }\n+            var events = txnReceipt.DecodeAllEvents<TransferEventDTO>();\n+            Console.WriteLine(events[0].Event.From);\n+            Console.WriteLine(events[0].Event.To);\n+            Console.WriteLine(events[0].Event.Value);\n+\n+            await EventSampleEnd2End(account, web3Local);\n+\n+            await EnsSamples(web3);\n+            await EIP712Sample();\n+\n+            await ErrorSample(web3Local);\n+            await StructsJson(web3Local);\n+        }\n+\n+        public static async Task StructsJson(Web3.Web3 web3)\n+        {\n+\n+            Console.WriteLine(\"Structs Json Sample\");\n+            Nethereum.ABI.ABIDeserialisation.AbiDeserializationSettings.UseSystemTextJson = true;\n+            var abi =\n+                @\"[{'constant':true,'inputs':[{'name':'','type':'bytes32'},{'name':'','type':'uint256'}],'name':'documents','outputs':[{'name':'name','type':'string'},{'name':'description','type':'string'},{'name':'sender','type':'address'}],'payable':false,'stateMutability':'view','type':'function'},{'constant':false,'inputs':[{'name':'key','type':'bytes32'},{'name':'name','type':'string'},{'name':'description','type':'string'}],'name':'storeDocument','outputs':[{'name':'success','type':'bool'}],'payable':false,'stateMutability':'nonpayable','type':'function'}]\";\n+\n+            var smartContractByteCode =\n+                \"6060604052341561000f57600080fd5b6105408061001e6000396000f30060606040526004361061004b5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166379c17cc581146100505780638553139c14610189575b600080fd5b341561005b57600080fd5b610069600435602435610235565b60405173ffffffffffffffffffffffffffffffffffffffff821660408201526060808252845460026000196101006001841615020190911604908201819052819060208201906080830190879080156101035780601f106100d857610100808354040283529160200191610103565b820191906000526020600020905b8154815290600101906020018083116100e657829003601f168201915b50508381038252855460026000196101006001841615020190911604808252602090910190869080156101775780601f1061014c57610100808354040283529160200191610177565b820191906000526020600020905b81548152906001019060200180831161015a57829003601f168201915b50509550505050505060405180910390f35b341561019457600080fd5b610221600480359060446024803590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061028795505050505050565b604051901515815260200160405180910390f35b60006020528160005260406000208181548110151561025057fe5b60009182526020909120600390910201600281015490925060018301915073ffffffffffffffffffffffffffffffffffffffff1683565b6000610291610371565b60606040519081016040908152858252602080830186905273ffffffffffffffffffffffffffffffffffffffff33168284015260008881529081905220805491925090600181016102e2838261039f565b600092835260209092208391600302018151819080516103069291602001906103d0565b506020820151816001019080516103219291602001906103d0565b506040820151600291909101805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff9092169190911790555060019695505050505050565b60606040519081016040528061038561044e565b815260200161039261044e565b8152600060209091015290565b8154818355818115116103cb576003028160030283600052602060002091820191016103cb9190610460565b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061041157805160ff191683800117855561043e565b8280016001018555821561043e579182015b8281111561043e578251825591602001919060010190610423565b5061044a9291506104b3565b5090565b60206040519081016040526000815290565b6104b091905b8082111561044a57600061047a82826104cd565b6104886001830160006104cd565b5060028101805473ffffffffffffffffffffffffffffffffffffffff19169055600301610466565b90565b6104b091905b8082111561044a57600081556001016104b9565b50805460018160011615610100020316600290046000825580601f106104f35750610511565b601f01602090049060005260206000209081019061051191906104b3565b505600a165627a7a72305820049f1f3ad86cf097dd9c5de014d2e718b5b6b9a05b091d4daebcf60dd3e1213c0029\";\n+\n+\n+            var accountBalance = await web3.Eth.GetBalance.SendRequestAsync(web3.TransactionManager.Account.Address).ConfigureAwait(false);\n+\n+          \n+\n+            var receipt =\n+                await web3.Eth.DeployContract.SendRequestAndWaitForReceiptAsync(\n+                    abi,\n+                    smartContractByteCode,\n+                    web3.TransactionManager.Account.Address,\n+                    new HexBigInteger(900000)).ConfigureAwait(false);\n+\n+            var contractAddress = receipt.ContractAddress;\n+\n+            var contract = web3.Eth.GetContract(abi, contractAddress);\n+            var storeDocumentFunction = contract.GetFunction(\"storeDocument\");\n+\n+            var receipt1 = await storeDocumentFunction.SendTransactionAndWaitForReceiptAsync(web3.TransactionManager.Account.Address,\n+                new HexBigInteger(900000), null, null, \"k1\", \"doc1\", \"Document 1\").ConfigureAwait(false);\n+            \n+            var receipt2 = await storeDocumentFunction.SendTransactionAndWaitForReceiptAsync(web3.TransactionManager.Account.Address,\n+                new HexBigInteger(900000), null, null, \"k2\", \"doc2\", \"Document 2\").ConfigureAwait(false);\n+            \n+\n+            var documentsFunction = contract.GetFunction(\"documents\");\n+            var document1 = await documentsFunction.CallDeserializingToObjectAsync<Document>(\"k1\", 0).ConfigureAwait(false);\n+            var document2 = await documentsFunction.CallDeserializingToObjectAsync<Document>(\"k2\", 0).ConfigureAwait(false);\n+\n+           Console.WriteLine(document1.Name);\n+           Console.WriteLine(document1.Description);\n+\n+            Console.WriteLine(document1.Sender);\n+            \n+            Console.WriteLine(document2.Name);\n+            Console.WriteLine(document2.Description);\n+            Console.WriteLine(document2.Sender);\n+\n+        }\n+\n+        [FunctionOutput]\n+        public class Document\n+        {\n+            [Parameter(\"string\", \"name\", 1)] public string Name { get; set; }\n+\n+            [Parameter(\"string\", \"description\", 2)]\n+            public string Description { get; set; }\n+\n+            [Parameter(\"address\", \"sender\", 3)] public string Sender { get; set; }\n+        }\n+\n+        public static async Task ErrorSample(Web3.Web3 web3)\n+        {\n+            Console.WriteLine(\"Error Sample\");\n+            Nethereum.ABI.ABIDeserialisation.AbiDeserializationSettings.UseSystemTextJson = true;\n+            var errorThrowDeployment = new TestTokenDeployment();\n+\n+            var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<TestTokenDeployment>()\n+                .SendRequestAndWaitForReceiptAsync(errorThrowDeployment).ConfigureAwait(false);\n+            var contractAddress = transactionReceiptDeployment.ContractAddress;\n+\n+            var contract = web3.Eth.GetContract(\"[{'inputs':[{'internalType':'uint256','name':'available','type':'uint256'},{'internalType':'uint256','name':'required','type':'uint256'}],'name':'InsufficientBalance','type':'error'},{'inputs':[{'internalType':'address','name':'to','type':'address'},{'internalType':'uint256','name':'amount','type':'uint256'}],'name':'transfer','outputs':[],'stateMutability':'nonpayable','type':'function'}]\", contractAddress);\n+            var function = contract.GetFunction(\"transfer\");\n+\n+            try\n+            {\n+                //random return value as it is going to error\n+                await function.EstimateGasAsync(web3.TransactionManager.Account.Address, 100).ConfigureAwait(false);\n+\n+            }\n+            catch (SmartContractCustomErrorRevertException error)\n+            {\n+                Console.WriteLine(\"Is Custom Error\" + error.IsCustomErrorFor<InsufficientBalance>());\n+                var insufficientBalance = error.DecodeError<InsufficientBalance>();\n+                Console.WriteLine(insufficientBalance.Required);\n+                Console.WriteLine(insufficientBalance.Available);\n+\n+            }\n+            \n+           \n+        }\n+\n+        [Error(\"InsufficientBalance\")]\n+        public class InsufficientBalance\n+        {\n+            [Parameter(\"uint256\", \"available\", 1)]\n+            public virtual BigInteger Available { get; set; }\n+\n+            [Parameter(\"uint256\", \"required\", 1)]\n+            public virtual BigInteger Required { get; set; }\n+        }\n+\n+        public partial class TestTokenDeployment : ContractDeploymentMessage\n+        {\n+            public static string BYTECODE = \"608060405234801561001057600080fd5b5061019b806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a9059cbb14610030575b600080fd5b61004361003e3660046100ea565b610045565b005b3360009081526020819052604090205481111561009557336000908152602081905260409081902054905163cf47918160e01b815260048101919091526024810182905260440160405180910390fd5b33600090815260208190526040812080548392906100b4908490610138565b90915550506001600160a01b038216600090815260208190526040812080548392906100e1908490610120565b90915550505050565b600080604083850312156100fc578182fd5b82356001600160a01b0381168114610112578283fd5b946020939093013593505050565b600082198211156101335761013361014f565b500190565b60008282101561014a5761014a61014f565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220036d01bbac8615b9779f8355c03bd4da1057c57188f047db3a3190e81f894f7964736f6c63430008040033\";\n+\n+            public TestTokenDeployment() : base(BYTECODE) { }\n+            public TestTokenDeployment(string byteCode) : base(byteCode) { }\n+        }\n+\n+\n+        public static async Task EIP712Sample() {\n+            var signer = new Eip712TypedDataSigner();\n+\n+            //The mail typed definition, this provides the typed data schema used for this specific domain\n+            var typedData = GetMailTypedDefinition();\n+\n+            //The data we are going to sign (Primary type) mail\n+            var mail = new Mail\n+            {\n+                From = new Person\n+                {\n+                    Name = \"Cow\",\n+                    Wallets = new List<string> { \"0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826\", \"0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF\" }\n+                },\n+                To = new List<Person>\n+                {\n+                    new Person\n+                    {\n+                        Name = \"Bob\",\n+                        Wallets = new List<string> { \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\", \"0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57\", \"0xB0B0b0b0b0b0B000000000000000000000000000\" }\n+                    }\n+                },\n+                Contents = \"Hello, Bob!\"\n+            };\n+\n+            //This type data is specific to the chainId 1\n+            typedData.Domain.ChainId = 1;\n+\n+            var key = new EthECKey(\"94e001d6adf3a3275d5dd45971c2a5f6637d3e9c51f9693f2e678f649e164fa5\");\n+            Console.WriteLine(\"Signing address: \" + key.GetPublicAddress());\n+\n+            var signature = signer.SignTypedDataV4(mail, typedData, key);\n+\n+            Console.WriteLine(\"Signature: \" + signature);\n+\n+            var addressRecovered = signer.RecoverFromSignatureV4(mail, typedData, signature);\n+            var address = key.GetPublicAddress();\n+            Console.WriteLine(\"Recovered address from signature:\" + address);\n+        }\n+\n+        //GetMailTypedDefinition is the generic function that contains all the metadata required to sign this domain specific message\n+        //All the different types (Domain, Group, Mail, Person) are defined as classes in a similar way to Nethereum Function Messages\n+        //In the standard you need to provide the Domain, this can be extended with your own type,\n+        //The different types that are pare of the domain\n+        //and the PrimaryType which is the message entry point\n+        public static TypedData<Domain> GetMailTypedDefinition()\n+        {\n+            return new TypedData<Domain>\n+            {\n+                Domain = new Domain\n+                {\n+                    Name = \"Ether Mail\",\n+                    Version = \"1\",\n+                    ChainId = 1,\n+                    VerifyingContract = \"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC\"\n+                },\n+                Types = MemberDescriptionFactory.GetTypesMemberDescription(typeof(Domain), typeof(Group), typeof(Mail), typeof(Person)),\n+                PrimaryType = nameof(Mail),\n+            };\n+        }\n+\n+        //The domain type Mail is defined in a similar way to a Nethereum Function Message, with the attribute Struct(\"Mail\")\n+        //Parameters are the same, although when working with tuples we need to provide the name of the Tuple like \"Person\" or \"Person[]\" if it is an array\n+        [Struct(\"Mail\")]\n+        public class Mail\n+        {\n+            [Parameter(\"tuple\", \"from\", 1, \"Person\")]\n+            public Person From { get; set; }\n+\n+            [Parameter(\"tuple[]\", \"to\", 2, \"Person[]\")]\n+            public List<Person> To { get; set; }\n+\n+            [Parameter(\"string\", \"contents\", 3)]\n+            public string Contents { get; set; }\n+        }\n+\n+        [Struct(\"Person\")]\n+        public class Person\n+        {\n+            [Parameter(\"string\", \"name\", 1)]\n+            public string Name { get; set; }\n+\n+            [Parameter(\"address[]\", \"wallets\", 2)]\n+            public List<string> Wallets { get; set; }\n+        }\n+\n+        [Struct(\"Group\")]\n+        public class Group\n+        {\n+            [Parameter(\"string\", \"name\", 1)]\n+            public string Name { get; set; }\n+\n+            [Parameter(\"tuple[]\", \"members\", 2, \"Person[]\")]\n+            public List<Person> Members { get; set; }\n+        }\n+\n+\n+\n+        private static async Task EnsSamples(Web3.Web3 web3)\n+        {\n+            Console.WriteLine(\"ENS Samples\");\n+            Console.WriteLine(\"Resolve Address\");\n+            var ensService = web3.Eth.GetEnsService();\n+            var theAddress = await ensService.ResolveAddressAsync(\"nick.eth\");\n+            Console.WriteLine(theAddress);\n+\n+            Console.WriteLine(\"Resolve Url\");\n+            var url = await ensService.ResolveTextAsync(\"nethereum.eth\", TextDataKey.url);\n+            Console.WriteLine(url);\n+        }\n+\n+        private static async Task EventSampleEnd2End(Web3.Accounts.Account account, Web3.Web3 web3Local)\n+        {\n+            var deploymentMessage = new StandardTokenDeployment\n+            {\n+                TotalSupply = 100000\n+            };\n+\n+\n+            // Then we create a deployment handler using our contract deployment definition and simply deploy the\n+            // contract using the deployment message. We are auto estimating the gas, getting the latest gas price\n+            // and nonce so nothing else is set anything on the deployment message.\n+\n+            // Finally, we wait for the deployment transaction to be mined, and retrieve the contract address of\n+            // the new contract from the receipt.\n+\n+\n+            var deploymentHandler = web3Local.Eth.GetContractDeploymentHandler<StandardTokenDeployment>();\n+            var transactionReceipt = await deploymentHandler.SendRequestAndWaitForReceiptAsync(deploymentMessage);\n+            var contractAddress = transactionReceipt.ContractAddress;\n+            Console.WriteLine(\"contractAddress is: \" + contractAddress);\n+\n+            // ### Transfer\n+\n+            // Once we have deployed the contract, we can execute our first transfer transaction.\n+            // The transfer function will write to the log the transfer event.\n+\n+            // First we can create a TransactionHandler using the TrasferFunction definition and a\n+            // TransferFunction message including the “receiverAddress” and the amount of tokens we want to send.\n+\n+            // Finally do the transaction transfer and wait for the receipt to be “mined”\n+            // and included in the blockchain.\n+\n+\n+            var receiverAddress = \"0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe\";\n+            var transferHandler = web3Local.Eth.GetContractTransactionHandler<TransferFunction>();\n+            var transfer = new TransferFunction()\n+            {\n+                To = receiverAddress,\n+                TokenAmount = 100\n+            };\n+            var transactionReceipt2 = await transferHandler.SendRequestAndWaitForReceiptAsync(contractAddress, transfer);\n+\n+\n+            // ## Decoding the Event from the TransactionReceipt\n+\n+            // Event logs are part of the TransactionReceipts, so using the Transaction receipt from the previous\n+            // transfer we can decode the TransferEvent using the extension method\n+            // “DecodeAllEvents<TransferEventDTO>()”.\n+\n+            // Note that this method returns an array of Decoded Transfer Events as opposed to a single value,\n+            // because the receipt can include more than one event of the same signature.\n+\n+\n+            var transferEventOutput = transactionReceipt2.DecodeAllEvents<TransferEventDTO>();\n+\n+\n+            // ## Contract Filters and Event Logs\n+\n+            // Another way to access the event logs of a smart contract is to either get all changes of the logs\n+            // (providing a filter message) or create filters and retrieve changes which apply to our filter message\n+            // periodically.                                  \\\n+            // \\\n+            // To access the logs, first of all, we need to create a transfer event handler for our contract address,\n+            // and Evend definition.(TransferEventDTO).\n+\n+\n+            var transferEventHandler = web3Local.Eth.GetEvent<TransferEventDTO>(contractAddress);\n+\n+\n+            // Using the event handler, we can create a filter message for our transfer event using the default values.\n+\n+            // The default values for BlockParameters are Earliest and Latest, so when we retrieve the logs\n+            // we will get all the transfer events from the first block to the latest block of this contract.\n+\n+\n+            var filterAllTransferEventsForContract = transferEventHandler.CreateFilterInput();\n+\n+\n+            // Once we have created the message we can retrieve all the logs using the event and GetAllChanges.\n+            // In this scenario, because we have made only one transfer, we will have only one Transfer Event.\n+\n+\n+            var allTransferEventsForContract = await transferEventHandler.GetAllChangesAsync(filterAllTransferEventsForContract);\n+\n+            Console.WriteLine(\"Transfer event TransactionHash : \" + allTransferEventsForContract[0].Log.TransactionHash);\n+\n+            // If we now make another Transfer to a different address\n+\n+\n+            var receiverAddress2 = \"0x3e0B295669a9FD93d5F28D9Ec85E40f4cb697BAe\";\n+            var transfer2 = new TransferFunction()\n+            {\n+                To = receiverAddress2,\n+                TokenAmount = 1000\n+            };\n+            var transactionReceipt3 = await transferHandler.SendRequestAndWaitForReceiptAsync(contractAddress, transfer2);\n+\n+\n+            // Using the same filter input message and making another GetAllChanges call, we will now get\n+            // the two Transfer Event logs.\n+\n+\n+            var allTransferEventsForContract2 =\n+                await transferEventHandler.GetAllChangesAsync(filterAllTransferEventsForContract);\n+\n+            Console.WriteLine(\"Transfer events for Contract2\");\n+            for (var i = 0; i < 2; i++)\n+                Console.WriteLine(\"Transfer event number : \" + i + \" - TransactionHash : \" +\n+                                  allTransferEventsForContract2[i].Log.TransactionHash);\n+\n+\n+            for (var i = 0; i < 2; i++)\n+            {\n+                Console.WriteLine(\"Transfer event number : \" + i + \" - TransactionHash : \" +\n+                                  allTransferEventsForContract2[i].Log.TransactionHash);\n+                Console.WriteLine(\"From: \" + allTransferEventsForContract2[i].Event.From);\n+                Console.WriteLine(\"To: \" + allTransferEventsForContract2[i].Event.To);\n+                Console.WriteLine(\"Value: \" + allTransferEventsForContract2[i].Event.Value);\n+            }\n+\n+\n+            // Filter messages can limit the results (similar to block ranges) to the indexed parameters,\n+            // for example we can create a filter for only our sender address AND the receiver address.\n+            // As a reminder our Event has as indexed parameters the “\\_from” address\n+            // and “\\_to” address.\n+\n+\n+            var filterTransferEventsForContractReceiverAddress2 =\n+                transferEventHandler.CreateFilterInput(account.Address, receiverAddress2);\n+            var transferEventsForContractReceiverAddress2 =\n+                await transferEventHandler.GetAllChangesAsync(filterTransferEventsForContractReceiverAddress2);\n+\n+            Console.WriteLine(\"Transfer events for ContractReceiverAddress2 GetAllChanges Filtered From Sender\");\n+            foreach (var transferEvent in transferEventsForContractReceiverAddress2)\n+            {\n+                Console.WriteLine(\"Transfer event TransactionHash : \" + transferEvent.Log.TransactionHash);\n+                Console.WriteLine(\"From: \" + transferEvent.Event.From);\n+                Console.WriteLine(\"To: \" + transferEvent.Event.To);\n+                Console.WriteLine(\"Value: \" + transferEvent.Event.Value);\n+            }\n+\n+\n+            // The order the filter values is based on the event parameters order, if we want to include all the transfers to the “receiverAddress2”, the account address from will need to be set to null to be ignored.\n+\n+            // Note: We are using the array format to allow for null input of the first parameter.\n+\n+\n+            var filterTransferEventsForContractAllReceiverAddress2 =\n+                transferEventHandler.CreateFilterInput(null, new[] { receiverAddress2 });\n+            var transferEventsForContractAllReceiverAddress2 =\n+                await transferEventHandler.GetAllChangesAsync(filterTransferEventsForContractAllReceiverAddress2);\n+\n+\n+\n+            Console.WriteLine(\"Transfer events for ContractReceiverAddress2 GetAllChanges Filtered Recipient\");\n+            foreach (var transferEvent in transferEventsForContractReceiverAddress2)\n+            {\n+                Console.WriteLine(\"Transfer event TransactionHash : \" + transferEvent.Log.TransactionHash);\n+                Console.WriteLine(\"From: \" + transferEvent.Event.From);\n+                Console.WriteLine(\"To: \" + transferEvent.Event.To);\n+                Console.WriteLine(\"Value: \" + transferEvent.Event.Value);\n+            }\n+\n+            // Another scenario is when you want to include multiple indexed values, for example transfers for\n+            // “receiverAddress1” OR “receiverAddress2”.\n+            // Then you will need to use an array of the values you are interested.\n+\n+\n+            var filterTransferEventsForContractAllReceiverAddresses =\n+                transferEventHandler.CreateFilterInput(null, new[] { receiverAddress2, receiverAddress });\n+            var transferEventsForContractAllReceiverAddresses =\n+                await transferEventHandler.GetAllChangesAsync(filterTransferEventsForContractAllReceiverAddresses);\n+\n+            Console.WriteLine(\"Transfer events for ContractReceiverAddress2 GetAllChanges Filtered From Or Recipient\");\n+            foreach (var transferEvent in transferEventsForContractReceiverAddress2)\n+            {\n+                Console.WriteLine(\"Transfer event TransactionHash : \" + transferEvent.Log.TransactionHash);\n+                Console.WriteLine(\"From: \" + transferEvent.Event.From);\n+                Console.WriteLine(\"To: \" + transferEvent.Event.To);\n+                Console.WriteLine(\"Value: \" + transferEvent.Event.Value);\n+            }\n+\n+            // ### Creating filters to retrieve periodic changes\n+\n+            // Another option is to create filters that return only the changes occurred since we got the previous results.\n+            // This eliminates the need of tracking the last block the events were checked and delegate this\n+            // to the Ethereum client.\n+\n+            // Using the same filter message we created before we can create the filter and get the filterId.\n+\n+\n+            var filterIdTransferEventsForContractAllReceiverAddress2 =\n+                await transferEventHandler.CreateFilterAsync(filterTransferEventsForContractAllReceiverAddress2);\n+\n+\n+            // One thing to note, if  try to get the filter changes now, we will not get any results because\n+            // the filter only returns the changes since creation.\n+\n+\n+            var result = await transferEventHandler.GetFilterChangesAsync(filterIdTransferEventsForContractAllReceiverAddress2);\n+\n+\n+            // But, if we make another transfer using the same values\n+\n+\n+            await transferHandler.SendRequestAndWaitForReceiptAsync(contractAddress, transfer2);\n+\n+\n+            // and execute get filter changes using the same filter id, we will get the event for the previous transfer.\n+\n+\n+            var result2 = await transferEventHandler.GetFilterChangesAsync(filterIdTransferEventsForContractAllReceiverAddress2);\n+            Console.WriteLine(\"result2/TransactionHash: \" + result2[0].Log.TransactionHash);\n+\n+\n+            // Executing the same again will return no results because no new transfers have occurred\n+            // since the last execution of GetFilterChanges.\n+\n+\n+            var result3 = await transferEventHandler.GetFilterChangesAsync(filterIdTransferEventsForContractAllReceiverAddress2);\n+            Console.WriteLine(\"result3/Transaction Count: \" + result3.Count);\n+\n+            // ## Events for all Contracts\n+\n+            // Different contracts can have and raise/log the same event with the same signature,\n+            // a simple example is the multiple standard token ERC20 smart contracts that are part of Ethereum.\n+            // There might be scenarios you want to capture all the Events for different contracts using a specific filter,\n+            // for example all the transfers to an address.\n+\n+            // In Nethereum creating an Event (handler) without a contract address allows to create filters\n+            // which are not attached to a specific contract.\n+\n+\n+            var transferEventHandlerAnyContract = web3Local.Eth.GetEvent<TransferEventDTO>();\n+\n+\n+            // There is already a contract deployed in the chain, from the previous sample,\n+            // so to demonstrate the access to events of multiple contracts we can deploy another standard token contract.\n+\n+\n+            var transactionReceiptNewContract =\n+                await deploymentHandler.SendRequestAndWaitForReceiptAsync(deploymentMessage);\n+            var contractAddress2 = transactionReceiptNewContract.ContractAddress;\n+\n+\n+            // and make another transfer using this new contract and the same receiver address.\n+\n+\n+            await transferHandler.SendRequestAndWaitForReceiptAsync(contractAddress2, transfer);\n+\n+\n+            // Creating a default filter input, and getting all changes, will retrieve all the transfer events\n+            // for all contracts.\n+\n+\n+            var filterAllTransferEventsForAllContracts = transferEventHandlerAnyContract.CreateFilterInput();\n+            var allTransferEventsForContract3 =\n+                await transferEventHandlerAnyContract.GetAllChangesAsync(filterAllTransferEventsForAllContracts);\n+\n+            Console.WriteLine(\"Transfer events for All Contracts\");\n+\n+            foreach (var transferEvent in allTransferEventsForContract3)\n+            {\n+                Console.WriteLine(\"Transfer event TransactionHash : \" + transferEvent.Log.TransactionHash);\n+                Console.WriteLine(\"From: \" + transferEvent.Event.From);\n+                Console.WriteLine(\"To: \" + transferEvent.Event.To);\n+                Console.WriteLine(\"Value: \" + transferEvent.Event.Value);\n+            }\n+\n+\n+            // If we want to retrieve only all the transfers to the “receiverAddress”,\n+            // we can create the same filter as before ,including only the second indexed parameter (“to”). This will return the Transfers only to this address for both contracts.\n+\n+\n+            var filterTransferEventsForAllContractsReceiverAddress2 =\n+                transferEventHandlerAnyContract.CreateFilterInput(null, new[] { receiverAddress });\n+            var result4 =\n+                await transferEventHandlerAnyContract.GetAllChangesAsync(filterTransferEventsForAllContractsReceiverAddress2);\n+\n+\n+            for (var i = 0; i < 2; i++)\n+                Console.WriteLine(\"Transfer event number : \" + i + \" - TransactionHash : \" +\n+                                  result4[i].Log.TransactionHash);\n+\n+\n+        }\n+    }\n+\n+    public class StandardTokenDeployment : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE =\n+            \"0x60606040526040516020806106f5833981016040528080519060200190919050505b80600160005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550806000600050819055505b506106868061006f6000396000f360606040523615610074576000357c010000000000000000000000000000000000000000000000000000000090048063095ea7b31461008157806318160ddd146100b657806323b872dd146100d957806370a0823114610117578063a9059cbb14610143578063dd62ed3e1461017857610074565b61007f5b610002565b565b005b6100a060048080359060200190919080359060200190919050506101ad565b6040518082815260200191505060405180910390f35b6100c36004805050610674565b6040518082815260200191505060405180910390f35b6101016004808035906020019091908035906020019091908035906020019091905050610281565b6040518082815260200191505060405180910390f35b61012d600480803590602001909190505061048d565b6040518082815260200191505060405180910390f35b61016260048080359060200190919080359060200190919050506104cb565b6040518082815260200191505060405180910390f35b610197600480803590602001909190803590602001909190505061060b565b6040518082815260200191505060405180910390f35b600081600260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905061027b565b92915050565b600081600160005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541015801561031b575081600260005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505410155b80156103275750600082115b1561047c5781600160005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828282505401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a381600160005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054039250508190555081600260005060008673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828282505403925050819055506001905061048656610485565b60009050610486565b5b9392505050565b6000600160005060008373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505490506104c6565b919050565b600081600160005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541015801561050c5750600082115b156105fb5781600160005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282825054039250508190555081600160005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828282505401925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905061060556610604565b60009050610605565b5b92915050565b6000600260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005060008373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054905061066e565b92915050565b60006000600050549050610683565b9056\";\n+\n+        public StandardTokenDeployment() : base(BYTECODE)\n+        {\n+        }\n+\n+        [Parameter(\"uint256\", \"totalSupply\")]\n+        public BigInteger TotalSupply { get; set; }\n+    }\n+\n+    //*** FUNCTION MESSAGES **** ///\n+\n+    // We can call the functions of smart contract to query the state of a smart contract or do any computation, \n+    // which will not affect the state of the blockchain.\n+\n+    // To do so,  we will need to create a class which inherits from \"FunctionMessage\". \n+    // First we will decorate the class with a \"Function\" attribute, including the name and return type.\n+    // Each parameter of the function will be a property of the class, each of them decorated with the \"Parameter\" attribute, \n+    // including the smart contract’s parameter name, type and parameter order.\n+    // For the ERC20 smart contract, the \"balanceOf\" function definition, \n+    // provides the query interface to get the token balance of a given address. \n+    // As we can see this function includes only one parameter \"\\_owner\", of the type \"address\".\n+\n+\n+    [Function(\"balanceOf\", \"uint256\")]\n+    public class BalanceOfFunction : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"_owner\", 1)]\n+        public string Owner { get; set; }\n+    }\n+\n+\n+    // Another type of smart contract function will be a transaction \n+    // that will change the state of the smart contract (or smart contracts).\n+    // For example The \"transfer\" function definition for the ERC20 smart contract, \n+    // includes the parameters “\\_to”, which is an address parameter as a string, and the “\\_value” \n+    // or TokenAmount we want to transfer.\n+\n+\n+    // In a similar way to the \"balanceOf\" function, all the parameters include the solidity type, \n+    // the contract’s parameter name and parameter order.\n+\n+\n+    // Note: When working with functions, it is very important to have the parameters types and function name correct \n+    //as all of these make the signature of the function.\n+\n+    [Function(\"transfer\", \"bool\")]\n+    public class TransferFunction : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"_to\", 1)]\n+        public string To { get; set; }\n+\n+        [Parameter(\"uint256\", \"_value\", 2)]\n+        public BigInteger TokenAmount { get; set; }\n+    }\n+\n+    // Finally, smart contracts also have events. Events defined in smart contracts write in the blockchain log, \n+    // providing a way to retrieve further information when a smart contract interaction occurs.\n+    // To create an Event definition, we need to create a class that inherits from IEventDTO, decorated with the Event attribute.\n+    // The Transfer Event is similar to a Function: it  also includes parameters with name, order and type. \n+    // But also a boolean value indicating if the parameter is indexed or not.\n+    // Indexed parameters will allow us later on to query the blockchain for those values.\n+\n+\n+    [Event(\"Transfer\")]\n+    public class TransferEventDTO : IEventDTO\n+    {\n+        [Parameter(\"address\", \"_from\", 1, true)]\n+        public string From { get; set; }\n+\n+        [Parameter(\"address\", \"_to\", 2, true)]\n+        public string To { get; set; }\n+\n+        [Parameter(\"uint256\", \"_value\", 3, false)]\n+        public BigInteger Value { get; set; }\n+    }\n+\n+    // ### Multiple return types or complex objects\n+    // Functions of smart contracts can return one or multiple values in a single call. To decode the returned values, we use a FunctionOutputDTO.\n+    // Function outputs are classes which are decorated with a FunctionOutput attribute and implement the interface IFunctionOutputDTO.\n+    // An example of this is the following implementation that can be used to return the single value of the Balance on the ERC20 smart contract.\n+\n+    [FunctionOutput]\n+    public class BalanceOfOutputDTO : IFunctionOutputDTO\n+    {\n+        [Parameter(\"uint256\", \"balance\", 1)]\n+        public BigInteger Balance { get; set; }\n+    }\n+\n+\n+    // If we were going to return multiple values we could have something like:\n+\n+    [FunctionOutput]\n+    public class BalanceOfOutputMultipleDTO : IFunctionOutputDTO\n+    {\n+        [Parameter(\"uint256\", \"balance1\", 1)]\n+        public BigInteger Balance1 { get; set; }\n+\n+        [Parameter(\"uint256\", \"balance2\", 2)]\n+        public BigInteger Balance2 { get; set; }\n+\n+        [Parameter(\"uint256\", \"balance3\", 3)]\n+        public BigInteger Balance3 { get; set; }\n+    }\n+\n+\n+   \n+}"},{"sha":"0dcdc1adfa9c33e291be1e1f6a929eb835e777a2","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator.Console.sln","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console.sln","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console.sln","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console.sln?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,31 @@\n+﻿\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio Version 17\n+VisualStudioVersion = 17.9.34321.82\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"Nethereum.ABI.SourceGenerator.Console\", \"Nethereum.ABI.SourceGenerator.Console\\Nethereum.ABI.SourceGenerator.Console.csproj\", \"{9E0C4F36-5425-44E8-A55F-8968B93F4CD2}\"\n+EndProject\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"Nethereum.ABI.SourceGenerator\", \"Nethereum.ABI.SourceGenerator\\Nethereum.ABI.SourceGenerator.csproj\", \"{529D6FF4-1078-486D-AC4A-E844F2F243DD}\"\n+EndProject\n+Global\n+\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\n+\t\tDebug|Any CPU = Debug|Any CPU\n+\t\tRelease|Any CPU = Release|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\n+\t\t{9E0C4F36-5425-44E8-A55F-8968B93F4CD2}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{9E0C4F36-5425-44E8-A55F-8968B93F4CD2}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{9E0C4F36-5425-44E8-A55F-8968B93F4CD2}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{9E0C4F36-5425-44E8-A55F-8968B93F4CD2}.Release|Any CPU.Build.0 = Release|Any CPU\n+\t\t{529D6FF4-1078-486D-AC4A-E844F2F243DD}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+\t\t{529D6FF4-1078-486D-AC4A-E844F2F243DD}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+\t\t{529D6FF4-1078-486D-AC4A-E844F2F243DD}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+\t\t{529D6FF4-1078-486D-AC4A-E844F2F243DD}.Release|Any CPU.Build.0 = Release|Any CPU\n+\tEndGlobalSection\n+\tGlobalSection(SolutionProperties) = preSolution\n+\t\tHideSolutionNode = FALSE\n+\tEndGlobalSection\n+\tGlobalSection(ExtensibilityGlobals) = postSolution\n+\t\tSolutionGuid = {C26DCD7A-CC8F-4B9B-8552-FE0F3C02181E}\n+\tEndGlobalSection\n+EndGlobal"},{"sha":"b572db38724d5a023ea0695ca8bba670fce208c7","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator.Console/Nethereum.ABI.SourceGenerator.Console.csproj","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FNethereum.ABI.SourceGenerator.Console.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FNethereum.ABI.SourceGenerator.Console.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FNethereum.ABI.SourceGenerator.Console.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,21 @@\n+﻿<Project Sdk=\"Microsoft.NET.Sdk\">\n+\n+  <PropertyGroup>\n+    <OutputType>Exe</OutputType>\n+    <TargetFramework>net8.0</TargetFramework>\n+\t\n+\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n+  </PropertyGroup>\n+\n+  <ItemGroup>\n+    <PackageReference Include=\"Nethereum.ABI\" Version=\"4.29.0\" />\n+\t <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"4.13.0\" PrivateAssets=\"all\" />\n+\t <PackageReference Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.12.0-beta1.25218.8\" PrivateAssets=\"all\" />\n+\t <PackageReference Include=\"Nethereum.Contracts\" Version=\"4.29.0\" />\n+  </ItemGroup>\n+\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\Nethereum.ABI.SourceGenerator\\Nethereum.ABI.SourceGenerator.csproj\" OutputItemType=\"Analyzer\" ReferenceOutputAssembly=\"false\" />\n+  </ItemGroup>\n+\n+</Project>"},{"sha":"2e588d8a92d098d3be85b8006fa998dff7ff4c31","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator.Console/Program.cs","status":"added","additions":335,"deletions":0,"changes":335,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FProgram.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FProgram.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator.Console%2FProgram.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,335 @@\n+﻿using Microsoft.CodeAnalysis;\n+using Microsoft.CodeAnalysis.CSharp.Syntax;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.ABI.Model;\n+using Nethereum.Contracts;\n+using System.Collections.Generic;\n+using System.Numerics;\n+\n+namespace Nethereum.ABI.Generator.Console\n+{\n+\n+    internal class Program\n+    {\n+        static void Main(string[] args)\n+        {\n+            var function = new OwnerOfFunction();\n+\n+            function.SetValue(\"tokenId\", new BigInteger(1));\n+            var functionAbi = function.GetFunctionAbi();\n+      \n+            var functionAbi2 = ABITypedRegistry.GetFunctionABI<OwnerOfFunction>();\n+            var valid = functionAbi.HasTheSameSignatureValues(functionAbi2);\n+            \n+            var renounce = new RenounceOwnershipFunction();\n+            var renounceAbi = renounce.GetFunctionAbi();\n+           \n+            var renounceAbi2 = ABITypedRegistry.GetFunctionABI<RenounceOwnershipFunction>();\n+            System.Console.WriteLine(renounceAbi2.Sha3Signature.ToLowerInvariant() == renounceAbi.Sha3Signature.ToLowerInvariant());\n+\n+            System.Console.WriteLine(functionAbi.Sha3Signature);\n+            System.Console.WriteLine(functionAbi2.Sha3Signature);   \n+            System.Console.WriteLine(functionAbi.Sha3Signature.ToLowerInvariant() == functionAbi2.Sha3Signature.ToLowerInvariant());  \n+            \n+            var transformation = new Transformation();\n+            \n+            //functionAbi.InputParameters.Add(new Parameter(\"uint256\", \"tokenId\", 1));\n+            var parameter = new Parameter(\"uint256\", \"tokenId\", 1);\n+\n+            var setTransformation = new SetTransformationFunction();\n+            setTransformation.NewTransformation = new Transformation();\n+            setTransformation.NewTransformation.SetValue(\"base\", new BigInteger(1));\n+            System.Console.WriteLine(setTransformation.NewTransformation.Base);\n+            System.Console.WriteLine(setTransformation.NewTransformation.GetValue(\"base\"));\n+\n+            var setTransformationAbi = setTransformation.GetFunctionAbi();\n+            var setTransformationAbi2 = ABITypedRegistry.GetFunctionABI<SetTransformationFunction>();\n+            System.Console.WriteLine(setTransformationAbi.Sha3Signature.ToLowerInvariant() == setTransformationAbi2.Sha3Signature.ToLowerInvariant());\n+\n+            var setTransformations = new SetTransformationsFunction();\n+            var setTransformationsAbi = setTransformations.GetFunctionAbi();\n+            var setTransformationsAbi2 = ABITypedRegistry.GetFunctionABI<SetTransformationsFunction>();\n+            System.Console.WriteLine(setTransformationsAbi.Sha3Signature.ToLowerInvariant() == setTransformationsAbi2.Sha3Signature.ToLowerInvariant());\n+        }\n+    }\n+\n+    // The owner function message definition\n+    [Function(\"ownerOf\", \"address\")]\n+    public partial class OwnerOfFunction : FunctionMessage\n+    {\n+        [Parameter(\"uint256\", \"tokenId\", 1)]\n+        public BigInteger TokenId { get; set; }\n+    }\n+\n+    public interface IGetFunctionAbi\n+    {\n+        FunctionABI GetFunctionAbi();\n+        void SetValue(string parameterName, object value);\n+        object GetValue(string parameterName);\n+    }\n+\n+    public interface IGetStructAbi\n+    {\n+        List<Parameter> GetParameters();\n+        void SetValue(string parameterName, object value);\n+        object GetValue(string parameterName);\n+    }\n+\n+    public partial class TransformationsDeployment : TransformationsDeploymentBase\n+    {\n+        public TransformationsDeployment() : base(BYTECODE) { }\n+        public TransformationsDeployment(string byteCode) : base(byteCode) { }\n+    }\n+\n+    public class TransformationsDeploymentBase : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE = \"0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a0d8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e6578063c468ba9414610101578063e375410c14610114578063f2fde38b146101f157600080fd5b80634113d3ea1461008d57806359577ca0146100a2578063715018a6146100cb57806381d9e0cf146100d3575b600080fd5b6100a061009b366004610801565b610204565b005b6100b56100b036600461081a565b610536565b6040516100c2919061083c565b60405180910390f35b6100a0610655565b6100a06100e13660046108d2565b610669565b6000546040516001600160a01b0390911681526020016100c2565b6100a061010f366004610902565b610693565b61019261012236600461081a565b60016020818152600093845260408085209091529183529120805491810154600282015460038301546004840154600585015460068601546007870154600888015460099098015496979596949593949293919290919060ff80821691610100810482169162010000909104168c565b604080519c8d5260208d019b909b52998b019890985260608a0196909652608089019490945260a088019290925260c087015260e0860152610100850152151561012084015215156101408301521515610160820152610180016100c2565b6100a06101ff3660046108d2565b6106de565b61020c610757565b8060c001358160e001351180610224575060e0810135155b61029b5760405162461bcd60e51b815260206004820152603860248201527f5472616e73666f726d6174696f6e733a2074696d656f7574206d75737420626560448201527f2067726561746572207468616e20756e6c6f636b54696d65000000000000000060648201526084015b60405180910390fd5b6102ad6101a082016101808301610978565b15806102bb575060c0810135155b61032d5760405162461bcd60e51b815260206004820152603b60248201527f5472616e73666f726d6174696f6e733a20776174657220636f6c6c656374696f60448201527f6e206d757374206861766520756e6c6f636b54696d65206f66203000000000006064820152608401610292565b61033f6101a082016101808301610978565b8015610358575061035861018082016101608301610978565b156103c45760405162461bcd60e51b815260206004820152603660248201527f5472616e73666f726d6174696f6e733a20776174657220636f6c6c656374696f6044820152756e206d757374206e6f7420626520612072656369706560501b6064820152608401610292565b6040518061018001604052808260400135815260200182608001358152602001826060013581526020018260a0013581526020018260c0013581526020018260e001358152602001826101000135815260200182610120013581526020018261014001358152602001826101600160208101906104419190610978565b1515815260200161045a6101a084016101808501610978565b151581526020016104736101c084016101a08501610978565b151590528135600090815260016020818152604080842095820135845294815291849020835181559183015190820155918101516002830155606081015160038301556080810151600483015560a0810151600583015560c0810151600683015560e0810151600783015561010080820151600884015561012082015160099093018054610140840151610160909401511515620100000262ff00001994151590930261ff00199515159590951661ffff19909116179390931791909116179055565b6105a06040518061018001604052806000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581526020016000151581525090565b506000918252600160208181526040808520938552928152928290208251610180810184528154815291810154938201939093526002830154918101919091526003820154606082015260048201546080820152600582015460a0820152600682015460c0820152600782015460e082015260088201546101008083019190915260099092015460ff808216151561012084015292810483161515610140830152620100009004909116151561016082015290565b61065d610757565b61066760006107b1565b565b610671610757565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b61069b610757565b60005b818110156106d9576106c78383838181106106bb576106bb61099a565b90506101c00201610204565b806106d1816109b0565b91505061069e565b505050565b6106e6610757565b6001600160a01b03811661074b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610292565b610754816107b1565b50565b6000546001600160a01b031633146106675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610292565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006101c0828403121561081457600080fd5b50919050565b6000806040838503121561082d57600080fd5b50508035926020909101359150565b600061018082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516108af8285018215159052565b505061014083810151151590830152610160928301511515929091019190915290565b6000602082840312156108e457600080fd5b81356001600160a01b03811681146108fb57600080fd5b9392505050565b6000806020838503121561091557600080fd5b823567ffffffffffffffff8082111561092d57600080fd5b818501915085601f83011261094157600080fd5b81358181111561095057600080fd5b8660206101c08302850101111561096657600080fd5b60209290920196919550909350505050565b60006020828403121561098a57600080fd5b813580151581146108fb57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016109d057634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220986c8a5488e21dced45a766503f64e181afc7c05c7aa6d2e5c9d3e7300ea5ceb64736f6c634300080d0033\";\n+        public TransformationsDeploymentBase() : base(BYTECODE) { }\n+        public TransformationsDeploymentBase(string byteCode) : base(byteCode) { }\n+\n+    }\n+    public partial class Transformation : TransformationBase { }\n+\n+    [Struct(\"Transformation\")]\n+    public partial class TransformationBase\n+    {\n+        [Parameter(\"uint256\", \"base\", 1)]\n+        public virtual BigInteger Base { get; set; }\n+        [Parameter(\"uint256\", \"input\", 2)]\n+        public virtual BigInteger Input { get; set; }\n+        [Parameter(\"uint256\", \"next\", 3)]\n+        public virtual BigInteger Next { get; set; }\n+        [Parameter(\"uint256\", \"inputNext\", 4)]\n+        public virtual BigInteger InputNext { get; set; }\n+        [Parameter(\"uint256\", \"yield\", 5)]\n+        public virtual BigInteger Yield { get; set; }\n+        [Parameter(\"uint256\", \"yieldQuantity\", 6)]\n+        public virtual BigInteger YieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"unlockTime\", 7)]\n+        public virtual BigInteger UnlockTime { get; set; }\n+        [Parameter(\"uint256\", \"timeout\", 8)]\n+        public virtual BigInteger Timeout { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYield\", 9)]\n+        public virtual BigInteger TimeoutYield { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYieldQuantity\", 10)]\n+        public virtual BigInteger TimeoutYieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"timeoutNext\", 11)]\n+        public virtual BigInteger TimeoutNext { get; set; }\n+        [Parameter(\"bool\", \"isRecipe\", 12)]\n+        public virtual bool IsRecipe { get; set; }\n+        [Parameter(\"bool\", \"isWaterCollection\", 13)]\n+        public virtual bool IsWaterCollection { get; set; }\n+        [Parameter(\"bool\", \"exists\", 14)]\n+        public virtual bool Exists { get; set; }\n+    }\n+\n+    public partial class GetTransformationFunction : GetTransformationFunctionBase { }\n+\n+    [Function(\"getTransformation\", typeof(GetTransformationOutputDTO))]\n+    public partial class GetTransformationFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"uint256\", \"base\", 1)]\n+        public virtual BigInteger Base { get; set; }\n+        [Parameter(\"uint256\", \"input\", 2)]\n+        public virtual BigInteger Input { get; set; }\n+    }\n+\n+    public partial class TransformationConfig : TransformationConfigBase { }\n+\n+    public class TransformationConfigBase\n+    {\n+        [Parameter(\"uint256\", \"next\", 1)]\n+        public virtual BigInteger Next { get; set; }\n+        [Parameter(\"uint256\", \"yield\", 2)]\n+        public virtual BigInteger Yield { get; set; }\n+        [Parameter(\"uint256\", \"inputNext\", 3)]\n+        public virtual BigInteger InputNext { get; set; }\n+        [Parameter(\"uint256\", \"yieldQuantity\", 4)]\n+        public virtual BigInteger YieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"unlockTime\", 5)]\n+        public virtual BigInteger UnlockTime { get; set; }\n+        [Parameter(\"uint256\", \"timeout\", 6)]\n+        public virtual BigInteger Timeout { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYield\", 7)]\n+        public virtual BigInteger TimeoutYield { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYieldQuantity\", 8)]\n+        public virtual BigInteger TimeoutYieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"timeoutNext\", 9)]\n+        public virtual BigInteger TimeoutNext { get; set; }\n+        [Parameter(\"bool\", \"isRecipe\", 10)]\n+        public virtual bool IsRecipe { get; set; }\n+        [Parameter(\"bool\", \"isWaterCollection\", 11)]\n+        public virtual bool IsWaterCollection { get; set; }\n+        [Parameter(\"bool\", \"exists\", 12)]\n+        public virtual bool Exists { get; set; }\n+    }\n+\n+    public partial class OwnerFunction : OwnerFunctionBase { }\n+\n+    [Function(\"owner\", \"address\")]\n+    public partial class OwnerFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class RenounceOwnershipFunction : RenounceOwnershipFunctionBase { }\n+\n+    [Function(\"renounceOwnership\")]\n+    public partial class RenounceOwnershipFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class SetLandFunction : SetLandFunctionBase { }\n+\n+    [Function(\"setLand\")]\n+    public partial class SetLandFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"_land\", 1)]\n+        public virtual string Land { get; set; }\n+    }\n+\n+    public partial class SetTransformationFunction : SetTransformationFunctionBase { }\n+\n+    [Function(\"setTransformation\")]\n+    public partial class SetTransformationFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple\", \"newTransformation\", 1)]\n+        public virtual Transformation NewTransformation { get; set; }\n+    }\n+\n+    public partial class SetTransformationsFunction : SetTransformationsFunctionBase { }\n+\n+    [Function(\"setTransformations\")]\n+    public partial class SetTransformationsFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple[]\", \"newTransformations\", 1)]\n+        public virtual List<Transformation> NewTransformations { get; set; }\n+    }\n+\n+    public partial class TransferOwnershipFunction : TransferOwnershipFunctionBase { }\n+\n+    [Function(\"transferOwnership\")]\n+    public partial class TransferOwnershipFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"newOwner\", 1)]\n+        public virtual string NewOwner { get; set; }\n+    }\n+\n+    public partial class TransformationsFunction : TransformationsFunctionBase { }\n+\n+    [Function(\"transformations\", typeof(TransformationsOutputDTO))]\n+    public partial class TransformationsFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+        [Parameter(\"uint256\", \"\", 2)]\n+        public virtual BigInteger ReturnValue2 { get; set; }\n+    }\n+\n+    public partial class OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase { }\n+\n+    [Event(\"OwnershipTransferred\")]\n+    public class OwnershipTransferredEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"previousOwner\", 1, true)]\n+        public virtual string PreviousOwner { get; set; }\n+        [Parameter(\"address\", \"newOwner\", 2, true)]\n+        public virtual string NewOwner { get; set; }\n+    }\n+\n+    public partial class TransformationIncompatibleError : TransformationIncompatibleErrorBase { }\n+\n+    [Error(\"TransformationIncompatible\")]\n+    public class TransformationIncompatibleErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"base\", 1)]\n+        public virtual BigInteger Base { get; set; }\n+        [Parameter(\"uint256\", \"input\", 2)]\n+        public virtual BigInteger Input { get; set; }\n+    }\n+\n+    public partial class NotUnlockedYetError : NotUnlockedYetErrorBase { }\n+\n+    [Error(\"notUnlockedYet\")]\n+    public class NotUnlockedYetErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"timeNow\", 1)]\n+        public virtual BigInteger TimeNow { get; set; }\n+        [Parameter(\"uint256\", \"unlockTime\", 2)]\n+        public virtual BigInteger UnlockTime { get; set; }\n+        [Parameter(\"uint256\", \"x\", 3)]\n+        public virtual BigInteger X { get; set; }\n+        [Parameter(\"uint256\", \"y\", 4)]\n+        public virtual BigInteger Y { get; set; }\n+    }\n+\n+    public partial class GetTransformationOutputDTO : GetTransformationOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetTransformationOutputDTOBase : IFunctionOutputDTO\n+    {\n+        [Parameter(\"tuple\", \"transformation\", 1)]\n+        public virtual TransformationConfig Transformation { get; set; }\n+    }\n+\n+    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class OwnerOutputDTOBase : IFunctionOutputDTO\n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+    public partial class TransformationsOutputDTO : TransformationsOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class TransformationsOutputDTOBase : IFunctionOutputDTO\n+    {\n+        [Parameter(\"uint256\", \"next\", 1)]\n+        public virtual BigInteger Next { get; set; }\n+        [Parameter(\"uint256\", \"yield\", 2)]\n+        public virtual BigInteger Yield { get; set; }\n+        [Parameter(\"uint256\", \"inputNext\", 3)]\n+        public virtual BigInteger InputNext { get; set; }\n+        [Parameter(\"uint256\", \"yieldQuantity\", 4)]\n+        public virtual BigInteger YieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"unlockTime\", 5)]\n+        public virtual BigInteger UnlockTime { get; set; }\n+        [Parameter(\"uint256\", \"timeout\", 6)]\n+        public virtual BigInteger Timeout { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYield\", 7)]\n+        public virtual BigInteger TimeoutYield { get; set; }\n+        [Parameter(\"uint256\", \"timeoutYieldQuantity\", 8)]\n+        public virtual BigInteger TimeoutYieldQuantity { get; set; }\n+        [Parameter(\"uint256\", \"timeoutNext\", 9)]\n+        public virtual BigInteger TimeoutNext { get; set; }\n+        [Parameter(\"bool\", \"isRecipe\", 10)]\n+        public virtual bool IsRecipe { get; set; }\n+        [Parameter(\"bool\", \"isWaterCollection\", 11)]\n+        public virtual bool IsWaterCollection { get; set; }\n+        [Parameter(\"bool\", \"exists\", 12)]\n+        public virtual bool Exists { get; set; }\n+    }\n+\n+\n+}\n+\n+\n+\n+\n+\n+\n+\n+"},{"sha":"5f9539c9abd3b28527e5157ccadafa3ff77fef74","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator/FunctionAbiGenerator.cs","status":"added","additions":227,"deletions":0,"changes":227,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FFunctionAbiGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FFunctionAbiGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FFunctionAbiGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,227 @@\n+﻿namespace Nethereum.ABI.Generator\n+{\n+    using Microsoft.CodeAnalysis;\n+    using Microsoft.CodeAnalysis.CSharp.Syntax;\n+    using Microsoft.CodeAnalysis.Text;\n+    using Nethereum.ABI.Decoders;\n+    using System.Data;\n+    using System;\n+    using System.Linq;\n+    using System.Text;\n+    using System.Reflection;\n+\n+\n+    [Generator]\n+    public class FunctionAbiGenerator : IIncrementalGenerator\n+    {\n+        public void Initialize(IncrementalGeneratorInitializationContext context)\n+        {\n+            var classDeclarations = context.SyntaxProvider\n+                .CreateSyntaxProvider(\n+                    static (node, _) => node is ClassDeclarationSyntax { AttributeLists.Count: > 0 },\n+                    static (ctx, _) => ctx.Node as ClassDeclarationSyntax)\n+                .Where(static m => m is not null);\n+\n+            var classDeclarationWithModel = classDeclarations\n+                .Combine(context.CompilationProvider)\n+                .Select((pair, cancellationToken) => (classDeclaration: pair.Left, model: pair.Right.GetSemanticModel(pair.Left.SyntaxTree)));\n+\n+            context.RegisterSourceOutput(classDeclarationWithModel, static (spc, pair) => Execute(spc, pair));\n+        }\n+\n+        private static void Execute(SourceProductionContext context, (ClassDeclarationSyntax classDeclaration, SemanticModel model) pair)\n+        {\n+            var (classDeclaration, model) = pair;\n+            var classSymbol = model.GetDeclaredSymbol(classDeclaration) as INamedTypeSymbol;\n+            if (classSymbol == null || !classSymbol.GetAttributes().Any(attr => attr.AttributeClass?.Name == \"FunctionAttribute\")) return;\n+\n+            var sb = new StringBuilder();\n+            string className = classSymbol.Name;\n+\n+            string namespaceName = classSymbol.ContainingNamespace.IsGlobalNamespace ? \"\" : $\"namespace {classSymbol.ContainingNamespace.ToDisplayString()}\\n{{\";\n+            var functionAttr = classSymbol.GetAttributes().FirstOrDefault(attr => attr.AttributeClass?.Name == \"FunctionAttribute\");\n+            var functionName = functionAttr.ConstructorArguments[0].Value?.ToString();\n+\n+            var baseType = classSymbol.BaseType;\n+            bool baseImplementsInterface = false;\n+\n+            while (baseType != null)\n+            {\n+                if (baseType.AllInterfaces.Any(i => i.Name == \"IGetFunctionAbi\"))\n+                {\n+                    baseImplementsInterface = true;\n+                    break;\n+                }\n+                baseType = baseType.BaseType;\n+            }\n+\n+            string methodName = \"GetFunctionAbi\";\n+            string staticMethodName = $\"Get{className}Abi\";\n+            string staticVariableName = $\"_functionAbi{className}\";\n+            string methodObjectSignature = baseImplementsInterface ? $\"public override FunctionABI {methodName}()\" : $\"public virtual FunctionABI {methodName}()\";\n+            string methodStaticSignature =  $\"public static FunctionABI {staticMethodName}()\";\n+\n+\n+            sb.AppendLine($\"{namespaceName}\");\n+                sb.AppendLine(\"using Nethereum.ABI.FunctionEncoding.Attributes;\");\n+                sb.AppendLine(\"using Nethereum.ABI.Model;\");\n+                sb.AppendLine(\"using System.Collections.Generic;\");\n+            //\n+            sb.AppendLine($\"public partial class {className} : IGetFunctionAbi\");\n+                    sb.AppendLine(\"{\");\n+                    sb.AppendLine($\"    private static FunctionABI {staticVariableName};\");\n+                    sb.AppendLine($\"    {methodObjectSignature}\");\n+                    sb.AppendLine(\"     {\");\n+                    sb.AppendLine($\"        return {staticMethodName}();\");\n+                    sb.AppendLine(\"     }\");\n+                    sb.AppendLine(\"     \");\n+                    sb.AppendLine($\"    {methodStaticSignature}\");\n+                    sb.AppendLine(\"    {\");\n+                    sb.AppendLine($\"       if ({staticVariableName} == null)\");\n+                    sb.AppendLine(\"        {\");\n+                    sb.AppendLine(\"            // Initialize FunctionABI\");\n+                    sb.AppendLine($\"            {staticVariableName} = new FunctionABI(\\\"{functionName}\\\", false);;\");\n+                    sb.AppendLine(\"            // Add parameters to FunctionABI\");\n+                    sb.AppendLine($\"        var parameters = new List<Parameter>();\");\n+                                            foreach (var member in classSymbol.GetMembers())\n+                                            {\n+                                                if (member is IPropertySymbol propertySymbol)\n+                                                {\n+                                                    GenerateParameterCreation(sb, propertySymbol);\n+                                                }\n+                                            }\n+                    sb.AppendLine($\"        {staticVariableName}.InputParameters = parameters.ToArray();\");\n+                    sb.AppendLine(\"        }\");\n+                    sb.AppendLine($\"        return {staticVariableName};\");\n+                    sb.AppendLine(\"    }\");\n+                   \n+            sb.AppendLine(\"    public void SetValue(string parameterName, object value)\");\n+            sb.AppendLine(\"    {\");\n+            foreach (var member in classSymbol.GetMembers().OfType<IPropertySymbol>())\n+            {\n+                GenerateSetValue(sb, member); // SetValue logic\n+            }\n+            sb.AppendLine(\"    }\");\n+\n+            // Generate GetValue method\n+            sb.AppendLine(\"    public object GetValue(string parameterName)\");\n+            sb.AppendLine(\"    {\");\n+            foreach (var member in classSymbol.GetMembers().OfType<IPropertySymbol>())\n+            {\n+                GenerateGetValue(sb, member); // GetValue logic\n+            }\n+            sb.AppendLine(\"        return null;\"); // Default return if no matching property\n+            sb.AppendLine(\"    }\");\n+\n+            // Class footer\n+            sb.AppendLine(\"}\");\n+            sb.AppendLine(\"}\");\n+            var value = sb.ToString();\n+           \n+            context.AddSource($\"{className}_FunctionAbi.g.cs\", SourceText.From(sb.ToString(), Encoding.UTF8));\n+        }\n+\n+        private static void GenerateSetValue(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : propertySymbol.Name;\n+\n+                // Generate code for SetValue\n+                sb.AppendLine($\"    if (parameterName == \\\"{parameterName}\\\")\");\n+                sb.AppendLine($\"    {{\");\n+                sb.AppendLine($\"        this.{propertySymbol.Name} = ({propertySymbol.Type})value;\");\n+                sb.AppendLine($\"        return;\");\n+                sb.AppendLine($\"    }}\");\n+\n+               \n+            }\n+        }\n+\n+        private static void GenerateGetValue(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : propertySymbol.Name;\n+\n+                // Generate code for GetValue\n+                sb.AppendLine($\"    if (parameterName == \\\"{parameterName}\\\")\");\n+                sb.AppendLine($\"    {{\");\n+                sb.AppendLine($\"        return this.{propertySymbol.Name};\");\n+                sb.AppendLine($\"    }}\");\n+            }\n+        }\n+\n+        private static void GenerateParameterCreation(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+           \n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+            \n+          \n+            // Extract ParameterAttribute info\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterType = parameterAttr.ConstructorArguments[0].Value?.ToString();\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : null;\n+                var parameterOrder = parameterAttr.ConstructorArguments.Length > 2 ? parameterAttr.ConstructorArguments[2].Value.ToString() : \"1\";\n+                sb.AppendLine($\"        var param_{propertySymbol.Name.ToLower()} = new Parameter(\\\"{parameterType}\\\", \\\"{parameterName}\\\", {parameterOrder})\" +\n+                                             $\"{{DecodedType = typeof({propertySymbol.Type})}};\");\n+\n+                if (parameterType == \"tuple\")\n+                {\n+                    sb.AppendLine($\"       if(param_{propertySymbol.Name.ToLower()}.ABIType is TupleType abiTupleType)\");\n+                    sb.AppendLine(\"        {\");\n+                    sb.AppendLine($\"            abiTupleType.SetComponents(new {propertySymbol.Type}().GetParameters().ToArray());\");\n+                    sb.AppendLine(\"        }\");\n+                }\n+\n+                if (parameterType.IndexOf(\"[\") > -1)\n+                {\n+                    var elementType = GetInnermostElementType(propertySymbol.Type);\n+                    sb.AppendLine($\"       if(param_{propertySymbol.Name.ToLower()}.ABIType is ArrayType abiArrayType)\");\n+                    sb.AppendLine(\"        {\");\n+                    //convert this to sb.string each statement\n+                    sb.AppendLine(\"         while (abiArrayType != null)\");\n+                    sb.AppendLine(\"         {\");\n+\n+                    sb.AppendLine(\"             if (abiArrayType.ElementType is TupleType arrayTupleType)\");\n+                    sb.AppendLine(\"             {\");\n+                    sb.AppendLine($\"              arrayTupleType.SetComponents(new {elementType}().GetParameters().ToArray());\");\n+                    sb.AppendLine(\"              abiArrayType = null;\");\n+                    sb.AppendLine(\"              }\");\n+                    sb.AppendLine(\"              else\");\n+                    sb.AppendLine(\"              {\");\n+                    sb.AppendLine(\"               abiArrayType = abiArrayType.ElementType as ArrayType;\");\n+                    sb.AppendLine(\"              }\");\n+                    sb.AppendLine(\"         }\");\n+                    sb.AppendLine(\"        }\");\n+                    \n+                }\n+                sb.AppendLine($\"        parameters.Add(param_{propertySymbol.Name.ToLower()});\");\n+                    \n+            }\n+          \n+\n+\n+        }\n+\n+        private static string GetInnermostElementType(ITypeSymbol typeSymbol)\n+        {\n+            if (typeSymbol is INamedTypeSymbol namedTypeSymbol && namedTypeSymbol.IsGenericType)\n+            {\n+                // Get the first type argument\n+                var typeArgument = namedTypeSymbol.TypeArguments[0];\n+\n+                // Recursively call this method to handle nested generic types\n+                return GetInnermostElementType(typeArgument);\n+            }\n+\n+            // When a non-generic type is reached, return its name\n+            return typeSymbol.ToString(); // or typeSymbol.ToString() for the fully qualified name\n+        }\n+    }\n+}"},{"sha":"d47319af981ad2859ab9ab49ad6a58d308a5e6fd","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator/Nethereum.ABI.SourceGenerator.csproj","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FNethereum.ABI.SourceGenerator.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FNethereum.ABI.SourceGenerator.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FNethereum.ABI.SourceGenerator.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,32 @@\n+﻿<Project Sdk=\"Microsoft.NET.Sdk\">\n+\n+  <PropertyGroup>\n+    <TargetFramework>netstandard2.0</TargetFramework>\n+\t  <LangVersion>preview</LangVersion>\n+\t  <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>\n+\t  <IsRoslynComponent>true</IsRoslynComponent>\n+  </PropertyGroup>\n+\n+\t<ItemGroup>\n+\t\t<PackageReference Include=\"Nethereum.ABI\" Version=\"4.18.0\" GeneratePathProperty=\"true\" PrivateAssets=\"all\" />\n+\t\t<PackageReference Include=\"Microsoft.CodeAnalysis.CSharp\" Version=\"4.8.0\" PrivateAssets=\"all\" />\n+\t\t<PackageReference Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.3.4\" PrivateAssets=\"all\" />\n+\t\t<PackageReference Include=\"Nethereum.Contracts\" Version=\"4.18.0\" GeneratePathProperty=\"true\" PrivateAssets=\"all\" />\n+\t\t<PackageReference Include=\"Nethereum.Util\" Version=\"4.18.0\" GeneratePathProperty=\"true\" PrivateAssets=\"all\" />\n+\n+\t</ItemGroup>\n+\n+\t<PropertyGroup>\n+\t\t<GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>\n+\t</PropertyGroup>\n+\n+\t<Target Name=\"GetDependencyTargetPaths\">\n+\t\t<ItemGroup>\n+\t\t\t<TargetPathWithTargetPlatformMoniker Include=\"$(PKGNethereum_ABI)\\lib\\netstandard2.0\\Nethereum.ABI.dll\" IncludeRuntimeDependency=\"false\" />\n+\t\t\t<TargetPathWithTargetPlatformMoniker Include=\"$(PKGNethereum_Contracts)\\lib\\netstandard2.0\\Nethereum.Contracts.dll\" IncludeRuntimeDependency=\"false\" />\n+\t\t\t<TargetPathWithTargetPlatformMoniker Include=\"$(PKGNethereum_Util)\\lib\\netstandard2.0\\Nethereum.Util.dll\" IncludeRuntimeDependency=\"false\" />\n+\t\t\t\n+\t\t</ItemGroup>\n+\t</Target>\n+\n+</Project>"},{"sha":"7466fc5215b0e623c5254cc143b2cb48a0d935ad","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator/Properties/launchSettings.json","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FProperties%2FlaunchSettings.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FProperties%2FlaunchSettings.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FProperties%2FlaunchSettings.json?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,8 @@\n+{\n+  \"profiles\": {\n+    \"Profile 1\": {\n+      \"commandName\": \"DebugRoslynComponent\",\n+      \"targetProject\": \"..\\\\Nethereum.ABI.Generator.Console\\\\Nethereum.ABI.Generator.Console.csproj\"\n+    }\n+  }\n+}\n\\ No newline at end of file"},{"sha":"2c9a72d08fc7a7f9d79b8c580889d306da0c65e9","filename":"experiments/SourceGenerators/Nethereum.ABI.SourceGenerator/StructAbiGenerator.cs","status":"added","additions":196,"deletions":0,"changes":196,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FStructAbiGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FStructAbiGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/experiments%2FSourceGenerators%2FNethereum.ABI.SourceGenerator%2FStructAbiGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,196 @@\n+﻿using Microsoft.CodeAnalysis;\n+using System.Linq;\n+\n+namespace Nethereum.ABI.Generator\n+{\n+    using Microsoft.CodeAnalysis;\n+    using Microsoft.CodeAnalysis.CSharp.Syntax;\n+    using Microsoft.CodeAnalysis.Text;\n+    using System.Text;\n+\n+    [Generator]\n+    public class StructAbiGenerator : IIncrementalGenerator\n+    {\n+        public void Initialize(IncrementalGeneratorInitializationContext context)\n+        {\n+            var classDeclarations = context.SyntaxProvider\n+                .CreateSyntaxProvider(\n+                    static (node, _) => node is ClassDeclarationSyntax { AttributeLists.Count: > 0 },\n+                    static (ctx, _) => ctx.Node as ClassDeclarationSyntax)\n+                .Where(static m => m is not null);\n+\n+            var classDeclarationWithModel = classDeclarations\n+                .Combine(context.CompilationProvider)\n+                .Select((pair, cancellationToken) => (classDeclaration: pair.Left, model: pair.Right.GetSemanticModel(pair.Left.SyntaxTree)));\n+\n+            context.RegisterSourceOutput(classDeclarationWithModel, static (spc, pair) => Execute(spc, pair));\n+        }\n+\n+        private static void Execute(SourceProductionContext context, (ClassDeclarationSyntax classDeclaration, SemanticModel model) pair)\n+        {\n+            var (classDeclaration, model) = pair;\n+            var classSymbol = model.GetDeclaredSymbol(classDeclaration) as INamedTypeSymbol;\n+            if (classSymbol == null || !classSymbol.GetAttributes().Any(attr => attr.AttributeClass?.Name == \"StructAttribute\")) return;\n+\n+            var sb = new StringBuilder();\n+            string className = classSymbol.Name;\n+\n+            string namespaceName = classSymbol.ContainingNamespace.IsGlobalNamespace ? \"\" : $\"namespace {classSymbol.ContainingNamespace.ToDisplayString()}\\n{{\";\n+            var functionAttr = classSymbol.GetAttributes().FirstOrDefault(attr => attr.AttributeClass?.Name == \"StructAttribute\");\n+            var functionName = functionAttr.ConstructorArguments[0].Value?.ToString();\n+\n+\n+\n+            sb.AppendLine($\"{namespaceName}\");\n+            sb.AppendLine(\"using Nethereum.ABI.FunctionEncoding.Attributes;\");\n+            sb.AppendLine(\"using Nethereum.ABI.Model;\");\n+            sb.AppendLine(\"using System.Collections.Generic;\");\n+            //\n+            sb.AppendLine($\"public partial class {className} : IGetStructAbi\");\n+            sb.AppendLine(\"{\");\n+            sb.AppendLine(\"    private static List<Parameter> _parameters;\");\n+            sb.AppendLine(\"    public List<Parameter> GetParameters()\");\n+            sb.AppendLine(\"    {\");\n+            sb.AppendLine(\"        if (_parameters == null)\");\n+            sb.AppendLine(\"        {\");\n+            sb.AppendLine(\"           \");\n+            sb.AppendLine($\"         _parameters = new List<Parameter>();\");\n+            foreach (var member in classSymbol.GetMembers())\n+            {\n+                if (member is IPropertySymbol propertySymbol)\n+                {\n+                    GenerateParameterCreation(sb, propertySymbol);\n+                }\n+            }\n+            sb.AppendLine(\"        }\");\n+            sb.AppendLine(\"        return _parameters;\");\n+            sb.AppendLine(\"    }\");\n+\n+            sb.AppendLine(\"    public void SetValue(string parameterName, object value)\");\n+            sb.AppendLine(\"    {\");\n+            foreach (var member in classSymbol.GetMembers().OfType<IPropertySymbol>())\n+            {\n+                GenerateSetValue(sb, member); // SetValue logic\n+            }\n+            sb.AppendLine(\"    }\");\n+\n+            // Generate GetValue method\n+            sb.AppendLine(\"    public object GetValue(string parameterName)\");\n+            sb.AppendLine(\"    {\");\n+            foreach (var member in classSymbol.GetMembers().OfType<IPropertySymbol>())\n+            {\n+                GenerateGetValue(sb, member); // GetValue logic\n+            }\n+            sb.AppendLine(\"        return null;\"); // Default return if no matching property\n+            sb.AppendLine(\"    }\");\n+\n+            // Class footer\n+            sb.AppendLine(\"}\");\n+            sb.AppendLine(\"}\");\n+            var value = sb.ToString();\n+\n+            context.AddSource($\"{className}_StructAbi.g.cs\", SourceText.From(sb.ToString(), Encoding.UTF8));\n+        }\n+\n+        private static void GenerateSetValue(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : propertySymbol.Name;\n+\n+                // Generate code for SetValue\n+                sb.AppendLine($\"    if (parameterName == \\\"{parameterName}\\\")\");\n+                sb.AppendLine($\"    {{\");\n+                sb.AppendLine($\"        this.{propertySymbol.Name} = ({propertySymbol.Type})value;\");\n+                sb.AppendLine($\"        return;\");\n+                sb.AppendLine($\"    }}\");\n+\n+\n+            }\n+        }\n+\n+        private static void GenerateGetValue(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : propertySymbol.Name;\n+\n+                // Generate code for GetValue\n+                sb.AppendLine($\"    if (parameterName == \\\"{parameterName}\\\")\");\n+                sb.AppendLine($\"    {{\");\n+                sb.AppendLine($\"        return this.{propertySymbol.Name};\");\n+                sb.AppendLine($\"    }}\");\n+            }\n+        }\n+\n+        private static void GenerateParameterCreation(StringBuilder sb, IPropertySymbol propertySymbol)\n+        {\n+\n+            var parameterAttrs = propertySymbol.GetAttributes().Where(attr => attr.AttributeClass?.Name == \"ParameterAttribute\");\n+\n+\n+            // Extract ParameterAttribute info\n+            foreach (var parameterAttr in parameterAttrs)\n+            {\n+                var parameterType = parameterAttr.ConstructorArguments[0].Value?.ToString();\n+                var parameterName = parameterAttr.ConstructorArguments.Length > 1 ? parameterAttr.ConstructorArguments[1].Value?.ToString() : null;\n+                var parameterOrder = parameterAttr.ConstructorArguments.Length > 2 ? parameterAttr.ConstructorArguments[2].Value.ToString() : \"1\";\n+                sb.AppendLine($\"        var param_{propertySymbol.Name.ToLower()} = new Parameter(\\\"{parameterType}\\\", \\\"{parameterName}\\\", {parameterOrder})\" +\n+                                             $\"{{DecodedType = typeof({propertySymbol.Type})}};\");\n+\n+                if (parameterType == \"tuple\")\n+                {\n+                    sb.AppendLine($\"       if(param_{propertySymbol.Name.ToLower()}.ABIType is TupleType abiTupleType)\");\n+                    sb.AppendLine(\"        {\");\n+                    sb.AppendLine($\"            abiTupleType.SetComponents(new {propertySymbol.Type}().GetParameters().ToArray());\");\n+                    sb.AppendLine(\"        }\");\n+                }\n+\n+                if (parameterType.IndexOf(\"[\") > -1)\n+                {\n+                    var elementType = GetInnermostElementType(propertySymbol.Type);\n+                    sb.AppendLine($\"       if(param_{propertySymbol.Name.ToLower()}.ABIType is ArrayType abiArrayType)\");\n+                    sb.AppendLine(\"        {\");\n+                    //convert this to sb.string each statement\n+                    sb.AppendLine(\"         while (abiArrayType != null)\");\n+                    sb.AppendLine(\"         {\");\n+\n+                    sb.AppendLine(\"             if (abiArrayType.ElementType is TupleType arrayTupleType)\");\n+                    sb.AppendLine(\"             {\");\n+                    sb.AppendLine($\"              arrayTupleType.SetComponents(new {elementType}().GetParameters().ToArray());\");\n+                    sb.AppendLine(\"              abiArrayType = null;\");\n+                    sb.AppendLine(\"              }\");\n+                    sb.AppendLine(\"              else\");\n+                    sb.AppendLine(\"              {\");\n+                    sb.AppendLine(\"               abiArrayType = abiArrayType.ElementType as ArrayType;\");\n+                    sb.AppendLine(\"              }\");\n+                    sb.AppendLine(\"         }\");\n+                    sb.AppendLine(\"        }\");\n+\n+                }\n+                sb.AppendLine($\"        _parameters.Add(param_{propertySymbol.Name.ToLower()});\");\n+\n+            }\n+\n+        }\n+\n+        private static string GetInnermostElementType(ITypeSymbol typeSymbol)\n+        {\n+            if (typeSymbol is INamedTypeSymbol namedTypeSymbol && namedTypeSymbol.IsGenericType)\n+            {\n+                // Get the first type argument\n+                var typeArgument = namedTypeSymbol.TypeArguments[0];\n+\n+                // Recursively call this method to handle nested generic types\n+                return GetInnermostElementType(typeArgument);\n+            }\n+\n+            // When a non-generic type is reached, return its name\n+            return typeSymbol.ToString(); // or typeSymbol.ToString() for the fully qualified name\n+        }\n+    }\n+}"},{"sha":"7919da317207a93d428993b166433d51df29870b","filename":"funding.json","status":"added","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/funding.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/funding.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/funding.json?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,5 @@\n+{\n+  \"opRetro\": {\n+    \"projectId\": \"0x4a5e771af86cf1938056b43cddbf0018dca1376d578f631f7449fe10ac4958ed\"\n+  }\n+}"},{"sha":"3166f142df8418d4e2432b5ecf3f2ab44923f6a1","filename":"generators/Nethereum.Autogen.ContractApi/nuget/Nethereum.Autogen.ContractApi.nuspec","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.nuspec","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.nuspec","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.nuspec?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -2,7 +2,7 @@\n <package>\n   <metadata>\n     <id>Nethereum.Autogen.ContractApi</id>\n-    <version>4.29.0</version>\n+    <version>5.0.0</version>\n     <authors>Juan Blanco, Dave Whiffin</authors>\n     <owners>Juan Blanco</owners>\n     <requireLicenseAcceptance>false</requireLicenseAcceptance>"},{"sha":"7696c1c37d2f1d40ab65691f9f9a286b3e7038fc","filename":"generators/Nethereum.Autogen.ContractApi/nuget/Nethereum.Autogen.ContractApi.targets","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.targets","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.targets","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Autogen.ContractApi%2Fnuget%2FNethereum.Autogen.ContractApi.targets?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,7 +5,7 @@\n   </PropertyGroup>\n   \n    <PropertyGroup>\n-    <NugetVersion>4.29.0</NugetVersion>\n+    <NugetVersion>5.0.0</NugetVersion>\n   </PropertyGroup> \n \n   <Target Name=\"PreBuild\" BeforeTargets=\"PreBuildEvent\">"},{"sha":"5ecb46fcd3fda90e35f53bbeec6b3910b7d7ac0c","filename":"generators/Nethereum.Generator.Console/Configuration/ABIConfiguration.cs","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generator.Console%2FConfiguration%2FABIConfiguration.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generator.Console%2FConfiguration%2FABIConfiguration.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generator.Console%2FConfiguration%2FABIConfiguration.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -28,6 +28,8 @@ public class ABIConfiguration\n \n         public string BaseOutputPath { get; set; }\n \n+        \n+\n         public CodeGenLanguage CodeGenLanguage { get; set; }\n \n         public ContractProjectGenerator CreateGenerator(string defaultNamespace, string projectFolder)\n@@ -46,6 +48,8 @@ public ContractProjectGenerator CreateGenerator(string defaultNamespace, string\n                 ServiceNamespace ?? $\"{ContractName}.Service\",\n                 CQSNamespace ?? $\"{ContractName}.ContractDefinition\",\n                 DTONamespace ?? $\"{ContractName}.ContractDefinition\",\n+                null,\n+                null,\n                 BaseOutputPath ?? projectFolder,\n                 Path.DirectorySeparatorChar.ToString(),\n                 CodeGenLanguage"},{"sha":"e8688d165fcf87dab11ce9d90f735c144f4c4447","filename":"generators/Nethereum.Generator.Console/Models/ProjectGenerator.cs","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generator.Console%2FModels%2FProjectGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generator.Console%2FModels%2FProjectGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generator.Console%2FModels%2FProjectGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -27,6 +27,8 @@ public IEnumerable<ContractProjectGenerator> GetProjectGenerators()\n                     $\"{contract.ContractName}\",\n                     $\"{contract.ContractName}.ContractDefinition\",\n                     $\"{contract.ContractName}.ContractDefinition\",\n+                    null,\n+                    null,\n                     OutputFolder,\n                     Path.DirectorySeparatorChar.ToString(),\n                     Language"},{"sha":"28613cec78d072e7688904b7834221c6a94e93eb","filename":"generators/Nethereum.Generators.DuoCode/Nethereum.Generators.DuoCode.csproj","status":"modified","additions":544,"deletions":392,"changes":936,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2FNethereum.Generators.DuoCode.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2FNethereum.Generators.DuoCode.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.DuoCode%2FNethereum.Generators.DuoCode.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,4 +1,4 @@\n-﻿<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n <Project ToolsVersion=\"14.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n   <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\n   <PropertyGroup>\n@@ -34,394 +34,546 @@\n     <WarningLevel>4</WarningLevel>\n   </PropertyGroup>\n   <PropertyGroup Condition=\"'$(Configuration)' == 'Debug'\">\n-    <DuoCodeDtsMode>es6</DuoCodeDtsMode>\n-    <DuoCodeModuleKind>commonjs</DuoCodeModuleKind>\n-  </PropertyGroup>\n+   <DuoCodeDtsMode>es6</DuoCodeDtsMode>\n+   <DuoCodeModuleKind>commonjs</DuoCodeModuleKind>\n+   </PropertyGroup>\n   <ItemGroup>\n-    <Compile Include=\"..\\Nethereum.Generators\\ContractProjectGenerator.cs\">\n-      <Link>\\ContractProjectGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudTablesGenerator.cs\">\n-      <Link>\\MudTablesGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\NetStandardLibraryGenerator.cs\">\n-      <Link>\\NetStandardLibraryGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\FunctionABIModel.cs\">\n-      <Link>\\ABI\\GeneratorModel\\FunctionABIModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\ParameterABIModel.cs\">\n-      <Link>\\ABI\\GeneratorModel\\ParameterABIModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\ParameterABIModelTypeMap.cs\">\n-      <Link>\\ABI\\GeneratorModel\\ParameterABIModelTypeMap.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ConstructorABI.cs\">\n-      <Link>\\ABI\\Model\\ConstructorABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ContractABI.cs\">\n-      <Link>\\ABI\\Model\\ContractABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ErrorABI.cs\">\n-      <Link>\\ABI\\Model\\ErrorABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\EventABI.cs\">\n-      <Link>\\ABI\\Model\\EventABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\FunctionABI.cs\">\n-      <Link>\\ABI\\Model\\FunctionABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\FunctionEventOverloadTypeNameBuilder.cs\">\n-      <Link>\\ABI\\Model\\FunctionEventOverloadTypeNameBuilder.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ParameterABI.cs\">\n-      <Link>\\ABI\\Model\\ParameterABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\StructABI.cs\">\n-      <Link>\\ABI\\Model\\StructABI.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToCSharpType.cs\">\n-      <Link>\\ABI\\TypeConvertors\\ABITypeToCSharpType.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToDotNetTypeBase.cs\">\n-      <Link>\\ABI\\TypeConvertors\\ABITypeToDotNetTypeBase.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToFSharpType.cs\">\n-      <Link>\\ABI\\TypeConvertors\\ABITypeToFSharpType.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToVBType.cs\">\n-      <Link>\\ABI\\TypeConvertors\\ABITypeToVBType.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\AllMessages\\AllMessagesGenerator.cs\">\n-      <Link>\\AllMessages\\AllMessagesGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\AllMessages\\AllMessagesModel.cs\">\n-      <Link>\\AllMessages\\AllMessagesModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\ConsoleGenerator.cs\">\n-      <Link>\\Console\\ConsoleGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\ConsoleModel.cs\">\n-      <Link>\\Console\\ConsoleModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\ConsoleCSharpTemplate.cs\">\n-      <Link>\\Console\\CSharp\\ConsoleCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\ContractDeploymentMockUpMethodCSharpTemplate.cs\">\n-      <Link>\\Console\\CSharp\\ContractDeploymentMockUpMethodCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\FunctionMockupMethodCSharpTemplate.cs\">\n-      <Link>\\Console\\CSharp\\FunctionMockupMethodCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\ConsoleVbTemplate.cs\">\n-      <Link>\\Console\\Vb\\ConsoleVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\ContractDeploymentMockUpMethodVbTemplate.cs\">\n-      <Link>\\Console\\Vb\\ContractDeploymentMockUpMethodVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\FunctionMockupMethodVbTemplate.cs\">\n-      <Link>\\Console\\Vb\\FunctionMockupMethodVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassFileTemplate.cs\">\n-      <Link>\\Core\\ClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassGeneratorBase.cs\">\n-      <Link>\\Core\\ClassGeneratorBase.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassTemplateBase.cs\">\n-      <Link>\\Core\\ClassTemplateBase.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\CodeGenLanguage.cs\">\n-      <Link>\\Core\\CodeGenLanguage.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\CodeGenLanguageExt.cs\">\n-      <Link>\\Core\\CodeGenLanguageExt.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\CommonGenerators.cs\">\n-      <Link>\\Core\\CommonGenerators.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\CsharpClassFileTemplate.cs\">\n-      <Link>\\Core\\CsharpClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\CSharpMultipleClassFileTemplate.cs\">\n-      <Link>\\Core\\CSharpMultipleClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\FileModel.cs\">\n-      <Link>\\Core\\FileModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\FileTemplate.cs\">\n-      <Link>\\Core\\FileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\FSharpClassFileTemplate.cs\">\n-      <Link>\\Core\\FSharpClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\FSharpMultipleClassFileTemplate.cs\">\n-      <Link>\\Core\\FSharpMultipleClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\GeneratedFile.cs\">\n-      <Link>\\Core\\GeneratedFile.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassGenerator.cs\">\n-      <Link>\\Core\\IClassGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassModel.cs\">\n-      <Link>\\Core\\IClassModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassTemplate.cs\">\n-      <Link>\\Core\\IClassTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IFileGenerator.cs\">\n-      <Link>\\Core\\IFileGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IGenerator.cs\">\n-      <Link>\\Core\\IGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\IMessage.cs\">\n-      <Link>\\Core\\IMessage.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ITypeConvertor.cs\">\n-      <Link>\\Core\\ITypeConvertor.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\MessageMap.cs\">\n-      <Link>\\Core\\MessageMap.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\MultipleClassFileTemplate.cs\">\n-      <Link>\\Core\\MultipleClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\MultipleClassGeneratorBase.cs\">\n-      <Link>\\Core\\MultipleClassGeneratorBase.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\Parameter.cs\">\n-      <Link>\\Core\\Parameter.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterDirection.cs\">\n-      <Link>\\Core\\ParameterDirection.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMap.cs\">\n-      <Link>\\Core\\ParameterMap.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerCSharpTemplate.cs\">\n-      <Link>\\Core\\ParameterMapperAssignerCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerTemplate.cs\">\n-      <Link>\\Core\\ParameterMapperAssignerTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerVbTemplate.cs\">\n-      <Link>\\Core\\ParameterMapperAssignerVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterModel.cs\">\n-      <Link>\\Core\\ParameterModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\SpaceUtils.cs\">\n-      <Link>\\Core\\SpaceUtils.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\TypeMessageModel.cs\">\n-      <Link>\\Core\\TypeMessageModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\Utils.cs\">\n-      <Link>\\Core\\Utils.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\VbClassFileTemplate.cs\">\n-      <Link>\\Core\\VbClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Core\\VbMultipleClassFileTemplate.cs\">\n-      <Link>\\Core\\VbMultipleClassFileTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\ContractDeploymentCQSMessageGenerator.cs\">\n-      <Link>\\CQS\\ContractDeploymentCQSMessageGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\ContractDeploymentCQSMessageModel.cs\">\n-      <Link>\\CQS\\ContractDeploymentCQSMessageModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\FunctionCQSMessageGenerator.cs\">\n-      <Link>\\CQS\\FunctionCQSMessageGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\FunctionCQSMessageModel.cs\">\n-      <Link>\\CQS\\FunctionCQSMessageModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\CSharp\\ContractDeploymentCQSMessageCSharpTemplate.cs\">\n-      <Link>\\CQS\\CSharp\\ContractDeploymentCQSMessageCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\CSharp\\FunctionCQSMessageCSharpTemplate.cs\">\n-      <Link>\\CQS\\CSharp\\FunctionCQSMessageCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\FSharp\\ContractDeploymentCQSMessageFSharpTemplate.cs\">\n-      <Link>\\CQS\\FSharp\\ContractDeploymentCQSMessageFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\FSharp\\FunctionCQSMessageFSharpTemplate.cs\">\n-      <Link>\\CQS\\FSharp\\FunctionCQSMessageFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\Vb\\ContractDeploymentCQSMessageVbTemplate.cs\">\n-      <Link>\\CQS\\Vb\\ContractDeploymentCQSMessageVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\CQS\\Vb\\FunctionCQSMessageVbTemplate.cs\">\n-      <Link>\\CQS\\Vb\\FunctionCQSMessageVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\ErrorDTOGenerator.cs\">\n-      <Link>\\DTOs\\ErrorDTOGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\ErrorDTOModel.cs\">\n-      <Link>\\DTOs\\ErrorDTOModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\EventDTOGenerator.cs\">\n-      <Link>\\DTOs\\EventDTOGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\EventDTOModel.cs\">\n-      <Link>\\DTOs\\EventDTOModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FunctionOutputDTOGenerator.cs\">\n-      <Link>\\DTOs\\FunctionOutputDTOGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FunctionOutputDTOModel.cs\">\n-      <Link>\\DTOs\\FunctionOutputDTOModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\StructTypeGenerator.cs\">\n-      <Link>\\DTOs\\StructTypeGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\StructTypeModel.cs\">\n-      <Link>\\DTOs\\StructTypeModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ErrorDTOCSharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\ErrorDTOCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\EventDTOCSharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\EventDTOCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\FunctionOutputDTOCSharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\FunctionOutputDTOCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ParameterABIEventDTOCSharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\ParameterABIEventDTOCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ParameterABIFunctionDTOCsharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\ParameterABIFunctionDTOCsharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\StructTypeCSharpTemplate.cs\">\n-      <Link>\\DTOs\\CSharp\\StructTypeCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ErrorDTOFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\ErrorDTOFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\EventDTOFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\EventDTOFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\FunctionOutputDTOFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\FunctionOutputDTOFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ParameterABIEventDTOFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\ParameterABIEventDTOFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ParameterABIFunctionDTOFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\ParameterABIFunctionDTOFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\StructTypeFSharpTemplate.cs\">\n-      <Link>\\DTOs\\FSharp\\StructTypeFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ErrorDTOVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\ErrorDTOVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\EventDTOVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\EventDTOVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\FunctionOutputDTOVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\FunctionOutputDTOVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ParameterABIEventDTOCVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\ParameterABIEventDTOCVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ParameterABIFunctionDTOVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\ParameterABIFunctionDTOVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\StructTypeVbTemplate.cs\">\n-      <Link>\\DTOs\\Vb\\StructTypeVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudService\\MudServiceGenerator.cs\">\n-      <Link>\\MudService\\MudServiceGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudService\\MudServiceModel.cs\">\n-      <Link>\\MudService\\MudServiceModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudService\\CSharp\\ServiceCSharpTemplate.cs\">\n-      <Link>\\MudService\\CSharp\\ServiceCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudService\\FSharp\\MudServiceFSharpTemplate.cs\">\n-      <Link>\\MudService\\FSharp\\MudServiceFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudService\\Vb\\ServiceVbTemplate.cs\">\n-      <Link>\\MudService\\Vb\\ServiceVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTable.cs\">\n-      <Link>\\MudTable\\MudTable.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTableGenerator.cs\">\n-      <Link>\\MudTable\\MudTableGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTableModel.cs\">\n-      <Link>\\MudTable\\MudTableModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\MudTable\\CSharp\\MudTableCSharpTemplate.cs\">\n-      <Link>\\MudTable\\CSharp\\MudTableCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\ServiceGenerator.cs\">\n-      <Link>\\Service\\ServiceGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\ServiceModel.cs\">\n-      <Link>\\Service\\ServiceModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\ContractDeploymentServiceMethodsCSharpTemplate.cs\">\n-      <Link>\\Service\\CSharp\\ContractDeploymentServiceMethodsCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\FunctionServiceMethodCSharpTemplate.cs\">\n-      <Link>\\Service\\CSharp\\FunctionServiceMethodCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\ServiceCSharpTemplate.cs\">\n-      <Link>\\Service\\CSharp\\ServiceCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\ContractDeploymentServiceMethodsFSharpTemplate.cs\">\n-      <Link>\\Service\\FSharp\\ContractDeploymentServiceMethodsFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\FunctionServiceMethodFSharpTemplate.cs\">\n-      <Link>\\Service\\FSharp\\FunctionServiceMethodFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\ServiceFSharpTemplate.cs\">\n-      <Link>\\Service\\FSharp\\ServiceFSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\ContractDeploymentServiceMethodsVbTemplate.cs\">\n-      <Link>\\Service\\Vb\\ContractDeploymentServiceMethodsVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\FunctionServiceMethodVbTemplate.cs\">\n-      <Link>\\Service\\Vb\\FunctionServiceMethodVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\ServiceVbTemplate.cs\">\n-      <Link>\\Service\\Vb\\ServiceVbTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityContractFactoryGenerator.cs\">\n-      <Link>\\Unity\\UnityContractFactoryGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityContractFactoryModel.cs\">\n-      <Link>\\Unity\\UnityContractFactoryModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityRequestsGenerator.cs\">\n-      <Link>\\Unity\\UnityRequestsGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityRequestsModel.cs\">\n-      <Link>\\Unity\\UnityRequestsModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\CSharp\\UnityContractFactoryCSharpTemplate.cs\">\n-      <Link>\\Unity\\CSharp\\UnityContractFactoryCSharpTemplate.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\Unity\\CSharp\\UnityFunctionRequestsClassTemplates.cs\">\n-      <Link>\\Unity\\CSharp\\UnityFunctionRequestsClassTemplates.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\XUnit\\SimpleTestGenerator.cs\">\n-      <Link>\\XUnit\\SimpleTestGenerator.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\XUnit\\SimpleTestModel.cs\">\n-      <Link>\\XUnit\\SimpleTestModel.cs</Link>\n-    </Compile>\n-    <Compile Include=\"..\\Nethereum.Generators\\XUnit\\CSharp\\SimpleTestCSharpTemplate.cs\">\n-      <Link>\\XUnit\\CSharp\\SimpleTestCSharpTemplate.cs</Link>\n-    </Compile>\n+        <Compile Include=\"..\\Nethereum.Generators\\BlazorPagesGenerator.cs\">\n+\t\t\t\t<Link>\\BlazorPagesGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ContractProjectGenerator.cs\">\n+\t\t\t\t<Link>\\ContractProjectGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudTablesGenerator.cs\">\n+\t\t\t\t<Link>\\MudTablesGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\NetStandardLibraryGenerator.cs\">\n+\t\t\t\t<Link>\\NetStandardLibraryGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\FunctionABIModel.cs\">\n+\t\t\t\t<Link>\\ABI\\GeneratorModel\\FunctionABIModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\ParameterABIModel.cs\">\n+\t\t\t\t<Link>\\ABI\\GeneratorModel\\ParameterABIModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\GeneratorModel\\ParameterABIModelTypeMap.cs\">\n+\t\t\t\t<Link>\\ABI\\GeneratorModel\\ParameterABIModelTypeMap.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ConstructorABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\ConstructorABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ContractABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\ContractABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ErrorABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\ErrorABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\EventABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\EventABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\FunctionABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\FunctionABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\FunctionEventOverloadTypeNameBuilder.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\FunctionEventOverloadTypeNameBuilder.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\ParameterABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\ParameterABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\Model\\StructABI.cs\">\n+\t\t\t\t<Link>\\ABI\\Model\\StructABI.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToCSharpType.cs\">\n+\t\t\t\t<Link>\\ABI\\TypeConvertors\\ABITypeToCSharpType.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToDotNetTypeBase.cs\">\n+\t\t\t\t<Link>\\ABI\\TypeConvertors\\ABITypeToDotNetTypeBase.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToFSharpType.cs\">\n+\t\t\t\t<Link>\\ABI\\TypeConvertors\\ABITypeToFSharpType.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\ABI\\TypeConvertors\\ABITypeToVBType.cs\">\n+\t\t\t\t<Link>\\ABI\\TypeConvertors\\ABITypeToVBType.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\AllMessages\\AllMessagesGenerator.cs\">\n+\t\t\t\t<Link>\\AllMessages\\AllMessagesGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\AllMessages\\AllMessagesModel.cs\">\n+\t\t\t\t<Link>\\AllMessages\\AllMessagesModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\BlazorServicePage\\BlazorPageServiceGenerator.cs\">\n+\t\t\t\t<Link>\\BlazorServicePage\\BlazorPageServiceGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\BlazorServicePage\\BlazorPageServiceModel.cs\">\n+\t\t\t\t<Link>\\BlazorServicePage\\BlazorPageServiceModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\BlazorServicePage\\CSharp\\BlazorFunctionComponentsTemplate.cs\">\n+\t\t\t\t<Link>\\BlazorServicePage\\CSharp\\BlazorFunctionComponentsTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\BlazorServicePage\\CSharp\\BlazorPageServiceCSharpRazorTemplate.cs\">\n+\t\t\t\t<Link>\\BlazorServicePage\\CSharp\\BlazorPageServiceCSharpRazorTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\ConsoleGenerator.cs\">\n+\t\t\t\t<Link>\\Console\\ConsoleGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\ConsoleModel.cs\">\n+\t\t\t\t<Link>\\Console\\ConsoleModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\ConsoleCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\CSharp\\ConsoleCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\ContractDeploymentMockUpMethodCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\CSharp\\ContractDeploymentMockUpMethodCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\CSharp\\FunctionMockupMethodCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\CSharp\\FunctionMockupMethodCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\ConsoleVbTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\Vb\\ConsoleVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\ContractDeploymentMockUpMethodVbTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\Vb\\ContractDeploymentMockUpMethodVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Console\\Vb\\FunctionMockupMethodVbTemplate.cs\">\n+\t\t\t\t<Link>\\Console\\Vb\\FunctionMockupMethodVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\ClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassGeneratorBase.cs\">\n+\t\t\t\t<Link>\\Core\\ClassGeneratorBase.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ClassTemplateBase.cs\">\n+\t\t\t\t<Link>\\Core\\ClassTemplateBase.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\CodeGenLanguage.cs\">\n+\t\t\t\t<Link>\\Core\\CodeGenLanguage.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\CodeGenLanguageExt.cs\">\n+\t\t\t\t<Link>\\Core\\CodeGenLanguageExt.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\CommonGenerators.cs\">\n+\t\t\t\t<Link>\\Core\\CommonGenerators.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\CsharpClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\CsharpClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\CSharpMultipleClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\CSharpMultipleClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\FileModel.cs\">\n+\t\t\t\t<Link>\\Core\\FileModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\FileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\FileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\FSharpClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\FSharpClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\FSharpMultipleClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\FSharpMultipleClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\GeneratedFile.cs\">\n+\t\t\t\t<Link>\\Core\\GeneratedFile.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassGenerator.cs\">\n+\t\t\t\t<Link>\\Core\\IClassGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassModel.cs\">\n+\t\t\t\t<Link>\\Core\\IClassModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IClassTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\IClassTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IFileGenerator.cs\">\n+\t\t\t\t<Link>\\Core\\IFileGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IGenerator.cs\">\n+\t\t\t\t<Link>\\Core\\IGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\IMessage.cs\">\n+\t\t\t\t<Link>\\Core\\IMessage.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ITypeConvertor.cs\">\n+\t\t\t\t<Link>\\Core\\ITypeConvertor.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\MessageMap.cs\">\n+\t\t\t\t<Link>\\Core\\MessageMap.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\MultipleClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\MultipleClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\MultipleClassGeneratorBase.cs\">\n+\t\t\t\t<Link>\\Core\\MultipleClassGeneratorBase.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\Parameter.cs\">\n+\t\t\t\t<Link>\\Core\\Parameter.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterDirection.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterDirection.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMap.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterMap.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterMapperAssignerCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterMapperAssignerTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterMapperAssignerVbTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterMapperAssignerVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\ParameterModel.cs\">\n+\t\t\t\t<Link>\\Core\\ParameterModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\RazorClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\RazorClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\SpaceUtils.cs\">\n+\t\t\t\t<Link>\\Core\\SpaceUtils.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\TypeMessageModel.cs\">\n+\t\t\t\t<Link>\\Core\\TypeMessageModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\Utils.cs\">\n+\t\t\t\t<Link>\\Core\\Utils.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\VbClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\VbClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Core\\VbMultipleClassFileTemplate.cs\">\n+\t\t\t\t<Link>\\Core\\VbMultipleClassFileTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\ContractDeploymentCQSMessageGenerator.cs\">\n+\t\t\t\t<Link>\\CQS\\ContractDeploymentCQSMessageGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\ContractDeploymentCQSMessageModel.cs\">\n+\t\t\t\t<Link>\\CQS\\ContractDeploymentCQSMessageModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\FunctionCQSMessageGenerator.cs\">\n+\t\t\t\t<Link>\\CQS\\FunctionCQSMessageGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\FunctionCQSMessageModel.cs\">\n+\t\t\t\t<Link>\\CQS\\FunctionCQSMessageModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\CSharp\\ContractDeploymentCQSMessageCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\CSharp\\ContractDeploymentCQSMessageCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\CSharp\\FunctionCQSMessageCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\CSharp\\FunctionCQSMessageCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\FSharp\\ContractDeploymentCQSMessageFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\FSharp\\ContractDeploymentCQSMessageFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\FSharp\\FunctionCQSMessageFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\FSharp\\FunctionCQSMessageFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\Vb\\ContractDeploymentCQSMessageVbTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\Vb\\ContractDeploymentCQSMessageVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\CQS\\Vb\\FunctionCQSMessageVbTemplate.cs\">\n+\t\t\t\t<Link>\\CQS\\Vb\\FunctionCQSMessageVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\ErrorDTOGenerator.cs\">\n+\t\t\t\t<Link>\\DTOs\\ErrorDTOGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\ErrorDTOModel.cs\">\n+\t\t\t\t<Link>\\DTOs\\ErrorDTOModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\EventDTOGenerator.cs\">\n+\t\t\t\t<Link>\\DTOs\\EventDTOGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\EventDTOModel.cs\">\n+\t\t\t\t<Link>\\DTOs\\EventDTOModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FunctionOutputDTOGenerator.cs\">\n+\t\t\t\t<Link>\\DTOs\\FunctionOutputDTOGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FunctionOutputDTOModel.cs\">\n+\t\t\t\t<Link>\\DTOs\\FunctionOutputDTOModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\StructTypeGenerator.cs\">\n+\t\t\t\t<Link>\\DTOs\\StructTypeGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\StructTypeModel.cs\">\n+\t\t\t\t<Link>\\DTOs\\StructTypeModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ErrorDTOCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\ErrorDTOCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\EventDTOCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\EventDTOCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\FunctionOutputDTOCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\FunctionOutputDTOCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ParameterABIEventDTOCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\ParameterABIEventDTOCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\ParameterABIFunctionDTOCsharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\ParameterABIFunctionDTOCsharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\CSharp\\StructTypeCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\CSharp\\StructTypeCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ErrorDTOFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\ErrorDTOFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\EventDTOFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\EventDTOFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\FunctionOutputDTOFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\FunctionOutputDTOFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ParameterABIEventDTOFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\ParameterABIEventDTOFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\ParameterABIFunctionDTOFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\ParameterABIFunctionDTOFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\FSharp\\StructTypeFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\FSharp\\StructTypeFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ErrorDTOVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\ErrorDTOVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\EventDTOVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\EventDTOVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\FunctionOutputDTOVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\FunctionOutputDTOVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ParameterABIEventDTOCVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\ParameterABIEventDTOCVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\ParameterABIFunctionDTOVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\ParameterABIFunctionDTOVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\DTOs\\Vb\\StructTypeVbTemplate.cs\">\n+\t\t\t\t<Link>\\DTOs\\Vb\\StructTypeVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudService\\MudServiceGenerator.cs\">\n+\t\t\t\t<Link>\\MudService\\MudServiceGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudService\\MudServiceModel.cs\">\n+\t\t\t\t<Link>\\MudService\\MudServiceModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudService\\CSharp\\ServiceCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\MudService\\CSharp\\ServiceCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudService\\FSharp\\MudServiceFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\MudService\\FSharp\\MudServiceFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudService\\Vb\\ServiceVbTemplate.cs\">\n+\t\t\t\t<Link>\\MudService\\Vb\\ServiceVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTable.cs\">\n+\t\t\t\t<Link>\\MudTable\\MudTable.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTableGenerator.cs\">\n+\t\t\t\t<Link>\\MudTable\\MudTableGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudTable\\MudTableModel.cs\">\n+\t\t\t\t<Link>\\MudTable\\MudTableModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\MudTable\\CSharp\\MudTableCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\MudTable\\CSharp\\MudTableCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\ServiceGenerator.cs\">\n+\t\t\t\t<Link>\\Service\\ServiceGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\ServiceModel.cs\">\n+\t\t\t\t<Link>\\Service\\ServiceModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\ContractDeploymentServiceMethodsCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\CSharp\\ContractDeploymentServiceMethodsCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\FunctionServiceMethodCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\CSharp\\FunctionServiceMethodCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\CSharp\\ServiceCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\CSharp\\ServiceCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\ContractDeploymentServiceMethodsFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\FSharp\\ContractDeploymentServiceMethodsFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\FunctionServiceMethodFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\FSharp\\FunctionServiceMethodFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\FSharp\\ServiceFSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\FSharp\\ServiceFSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\ContractDeploymentServiceMethodsVbTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\Vb\\ContractDeploymentServiceMethodsVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\FunctionServiceMethodVbTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\Vb\\FunctionServiceMethodVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Service\\Vb\\ServiceVbTemplate.cs\">\n+\t\t\t\t<Link>\\Service\\Vb\\ServiceVbTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityContractFactoryGenerator.cs\">\n+\t\t\t\t<Link>\\Unity\\UnityContractFactoryGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityContractFactoryModel.cs\">\n+\t\t\t\t<Link>\\Unity\\UnityContractFactoryModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityRequestsGenerator.cs\">\n+\t\t\t\t<Link>\\Unity\\UnityRequestsGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\UnityRequestsModel.cs\">\n+\t\t\t\t<Link>\\Unity\\UnityRequestsModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\CSharp\\UnityContractFactoryCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\Unity\\CSharp\\UnityContractFactoryCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\Unity\\CSharp\\UnityFunctionRequestsClassTemplates.cs\">\n+\t\t\t\t<Link>\\Unity\\CSharp\\UnityFunctionRequestsClassTemplates.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\XUnit\\SimpleTestGenerator.cs\">\n+\t\t\t\t<Link>\\XUnit\\SimpleTestGenerator.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\XUnit\\SimpleTestModel.cs\">\n+\t\t\t\t<Link>\\XUnit\\SimpleTestModel.cs</Link>\n+\t\t</Compile>\n+\t\t\n+        <Compile Include=\"..\\Nethereum.Generators\\XUnit\\CSharp\\SimpleTestCSharpTemplate.cs\">\n+\t\t\t\t<Link>\\XUnit\\CSharp\\SimpleTestCSharpTemplate.cs</Link>\n+\t\t</Compile>\n+\t\t\n   </ItemGroup>\n   <ItemGroup>\n     <None Include=\"packages.config\" />\n@@ -434,10 +586,10 @@\n     </PropertyGroup>\n     <Error Condition=\"!Exists('..\\..\\packages\\DuoCode.3.0.1654.0\\build\\DuoCode.targets')\" Text=\"$([System.String]::Format('$(ErrorText)', '..\\..\\packages\\DuoCode.3.0.1654.0\\build\\DuoCode.targets'))\" />\n   </Target>\n-  <PropertyGroup>\n-    <PostBuildEvent>xcopy /F \"$(ProjectDir)scripts\\Nethereum.Generators.DuoCode.d.ts\" \"$(SolutionDir)generators\\Nethereum.Generators.JavaScript\\\" /Y /I \n-xcopy /F \"$(ProjectDir)scripts\\Nethereum.Generators.DuoCode.js\" \"$(SolutionDir)generators\\Nethereum.Generators.JavaScript\\\" /Y /I \n-xcopy /F \"$(ProjectDir)scripts\\Nethereum.Generators.DuoCode.js.map\" \"$(SolutionDir)generators\\Nethereum.Generators.JavaScript\\\" /Y /I</PostBuildEvent>\n+ <PropertyGroup>\n+    <PostBuildEvent>xcopy \"$(ProjectDir) scripts\\Nethereum.Generators.DuoCode.d.ts\" \"$(SolutionDir) src\\Nethereum.Generators.JavaScript\\\" /Y /I \n+        xcopy \"$(ProjectDir)scripts\\Nethereum.Generators.DuoCode.js\" \"$(SolutionDir)src\\Nethereum.Generators.JavaScript\\\" /Y /I \n+        xcopy \"$(ProjectDir)scripts\\Nethereum.Generators.DuoCode.js.map\" \"$(SolutionDir)src\\Nethereum.Generators.JavaScript\\\" /Y /I</PostBuildEvent>\n   </PropertyGroup>\n   <!-- To modify your build process, add your task inside one of the targets below and uncomment it. \n        Other similar extension points exist, see Microsoft.Common.targets."},{"sha":"f85d1b68fc67fbfc7ac6506919e45d9ce321929e","filename":"generators/Nethereum.Generators.DuoCode/scripts/Nethereum.Generators.DuoCode.d.ts","status":"modified","additions":230,"deletions":91,"changes":321,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.d.ts","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.d.ts","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.d.ts?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,31 @@\n \n declare module Nethereum {\n     module Generators {\n+        // Nethereum.Generators.BlazorPagesGenerator\n+        export interface BlazorPagesGenerator extends System.Object {\n+            get_ContractABI(): Model.ContractABI;\n+            get_Namespace(): string;\n+            get_BaseOutputPath(): string;\n+            get_PathDelimiter(): string;\n+            get_ContractName(): string;\n+            get_BaseNamespace(): string;\n+            get_ServiceNamespace(): string;\n+            get_CQSNamespace(): string;\n+            get_DTONamespace(): string;\n+            get_CodeGenLanguage(): Core.CodeGenLanguage;\n+            get_SharedTypesNamespace(): string;\n+            get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n+            GenerateFile(): Core.GeneratedFile;\n+            GetFullNamespace(namespace: string): string;\n+        }\n+        export interface BlazorPagesGeneratorTypeFunc extends TypeFunction {\n+            (): BlazorPagesGeneratorTypeFunc;\n+            prototype: BlazorPagesGenerator;\n+            new (contractABI: Model.ContractABI, contractName: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, baseOutputPath: string, pathDelimiter: string, namespace: string): BlazorPagesGenerator;\n+            ctor: { new (contractABI: Model.ContractABI, contractName: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, baseOutputPath: string, pathDelimiter: string, namespace: string): BlazorPagesGenerator; };\n+        }\n+        const BlazorPagesGenerator: BlazorPagesGeneratorTypeFunc;\n+\n         // Nethereum.Generators.ContractProjectGenerator\n         export interface ContractProjectGenerator extends System.Object {\n             get_ContractABI(): Model.ContractABI;\n@@ -22,8 +47,15 @@ declare module Nethereum {\n             get_CodeGenLanguage(): Core.CodeGenLanguage;\n             get_MudNamespace(): string;\n             set_MudNamespace(value: string): void;\n+            get_SharedGeneratedTypes(): string[];\n+            get_SharedTypesNamespace(): string;\n             GenerateAllMessagesFileAndService(): Core.GeneratedFile[];\n-            GenerateAllMessages(): Core.GeneratedFile;\n+            AreStructsSharedGenerated(): boolean;\n+            HasSharingSettings(): boolean;\n+            AreFunctionsSharedGenerated(): boolean;\n+            AreErrorsSharedGenerated(): boolean;\n+            AreEventsSharedGenerated(): boolean;\n+            GenerateAllMessages(generateStructs?: boolean): Core.GeneratedFile;\n             GenerateAll(): Core.GeneratedFile[];\n             GenerateService(singleMessagesFile?: boolean): Core.GeneratedFile;\n             GenerateMudService(mudNamespace?: string, singleMessagesFile?: boolean): Core.GeneratedFile;\n@@ -51,8 +83,8 @@ declare module Nethereum {\n         export interface ContractProjectGeneratorTypeFunc extends TypeFunction {\n             (): ContractProjectGeneratorTypeFunc;\n             prototype: ContractProjectGenerator;\n-            new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator;\n-            ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator; };\n+            new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, sharedGeneratedTypes: string[], baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator;\n+            ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, sharedGeneratedTypes: string[], baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator; };\n         }\n         const ContractProjectGenerator: ContractProjectGeneratorTypeFunc;\n \n@@ -202,29 +234,37 @@ declare module Nethereum {\n             }\n             const ABITypeToVBType: ABITypeToVBTypeTypeFunc;\n \n-            // Nethereum.Generators.Core.ClassGeneratorBase<TClassTemplate, TClassModel>\n-            export interface ClassGeneratorBase$2<TClassTemplate, TClassModel> extends System.Object, IFileGenerator, IGenerator, IClassGenerator {\n-                get_ClassModel(): TClassModel;\n-                set_ClassModel(value: TClassModel): void;\n+            // Nethereum.Generators.Core.ClassGeneratorBase<TMessageModel>\n+            export interface ClassGeneratorBase$1<TMessageModel> extends System.Object, IFileGenerator, IGenerator, IClassGenerator {\n+                get_ClassModel(): TMessageModel;\n+                set_ClassModel(value: TMessageModel): void;\n                 GenerateFileContent$1(outputPath: string): GeneratedFile;\n                 GenerateFileContent(): string;\n                 GetFileName(): string;\n                 GenerateClass(): string;\n             }\n-            export interface ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel> extends TypeFunction {\n-                (): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;\n-                prototype: ClassGeneratorBase$2<TClassTemplate, TClassModel>;\n-                new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>;\n-                ctor: { new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>; };\n+            export interface ClassGeneratorBase$1TypeFunc<TMessageModel> extends TypeFunction {\n+                (): ClassGeneratorBase$1TypeFunc<TMessageModel>;\n+                prototype: ClassGeneratorBase$1<TMessageModel>;\n+                new (): ClassGeneratorBase$1<TMessageModel>;\n+                ctor: { new (): ClassGeneratorBase$1<TMessageModel>; };\n             }\n-            export function ClassGeneratorBase$2<TClassTemplate, TClassModel>(TClassTemplate: TypeArg<TClassTemplate>, TClassModel: TypeArg<TClassModel>): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;\n+            export function ClassGeneratorBase$1<TMessageModel>(TMessageModel: TypeArg<TMessageModel>): ClassGeneratorBase$1TypeFunc<TMessageModel>;\n \n             // Nethereum.Generators.Core.CodeGenLanguage\n             export enum CodeGenLanguage {\n                 CSharp = 0,\n                 Vb = 1,\n                 Proto = 2,\n-                FSharp = 3\n+                FSharp = 3,\n+                Razor = 4\n+            }\n+\n+            // Nethereum.Generators.Core.SharedDTOType\n+            export enum SharedDTOType {\n+                Functions = 0,\n+                Events = 1,\n+                Structs = 2\n             }\n \n             // Nethereum.Generators.Core.CodeGenLanguageExt\n@@ -511,6 +551,7 @@ declare module Nethereum {\n             export interface TypeMessageModelTypeFunc extends TypeFunction {\n                 (): TypeMessageModelTypeFunc;\n                 prototype: TypeMessageModel;\n+                GetDefaultTypeName(name: string, classNameSuffix: string): string;\n             }\n             const TypeMessageModel: TypeMessageModelTypeFunc;\n \n@@ -682,8 +723,8 @@ declare module Nethereum {\n             export interface AllMessagesGeneratorTypeFunc extends TypeFunction {\n                 (): AllMessagesGeneratorTypeFunc;\n                 prototype: AllMessagesGenerator;\n-                new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator;\n-                ctor: { new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator; };\n+                new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator;\n+                ctor: { new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator; };\n             }\n             const AllMessagesGenerator: AllMessagesGeneratorTypeFunc;\n \n@@ -694,21 +735,77 @@ declare module Nethereum {\n             export interface AllMessagesModelTypeFunc extends TypeFunction {\n                 (): AllMessagesModelTypeFunc;\n                 prototype: AllMessagesModel;\n-                new (contractName: string, namespace: string): AllMessagesModel;\n-                ctor: { new (contractName: string, namespace: string): AllMessagesModel; };\n+                new (contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string): AllMessagesModel;\n+                ctor: { new (contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string): AllMessagesModel; };\n             }\n             const AllMessagesModel: AllMessagesModelTypeFunc;\n \n+            // Nethereum.Generators.Service.BlazorPageServiceGenerator\n+            export interface BlazorPageServiceGenerator extends Core.ClassGeneratorBase$1<BlazorPageServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+                get_ContractABI(): Model.ContractABI;\n+                InitialiseTemplate(): void;\n+            }\n+            export interface BlazorPageServiceGeneratorTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceGeneratorTypeFunc;\n+                prototype: BlazorPageServiceGenerator;\n+                new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): BlazorPageServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): BlazorPageServiceGenerator; };\n+            }\n+            const BlazorPageServiceGenerator: BlazorPageServiceGeneratorTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorPageServiceModel\n+            export interface BlazorPageServiceModel extends Core.TypeMessageModel, Core.IClassModel, Core.IFileModel {\n+                get_ContractABI(): Model.ContractABI;\n+                get_CQSNamespace(): string;\n+                get_FunctionOutputNamespace(): string;\n+                get_ContractName(): string;\n+                GetServiceTypeName(): string;\n+                GetContractDeploymentTypeName(): string;\n+            }\n+            export interface BlazorPageServiceModelTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceModelTypeFunc;\n+                prototype: BlazorPageServiceModel;\n+                new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): BlazorPageServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): BlazorPageServiceModel; };\n+            }\n+            const BlazorPageServiceModel: BlazorPageServiceModelTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorFunctionComponentsTemplate\n+            export interface BlazorFunctionComponentsTemplate extends System.Object {\n+                GenerateComponents(includeDeploymentComponent?: boolean): string;\n+                GenerateComponent(functionABI: Model.FunctionABI): string;\n+                GenerateDeploymentComponent(): string;\n+            }\n+            export interface BlazorFunctionComponentsTemplateTypeFunc extends TypeFunction {\n+                (): BlazorFunctionComponentsTemplateTypeFunc;\n+                prototype: BlazorFunctionComponentsTemplate;\n+                new (model: BlazorPageServiceModel): BlazorFunctionComponentsTemplate;\n+                ctor: { new (model: BlazorPageServiceModel): BlazorFunctionComponentsTemplate; };\n+            }\n+            const BlazorFunctionComponentsTemplate: BlazorFunctionComponentsTemplateTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorPageServiceCSharpRazorTemplate\n+            export interface BlazorPageServiceCSharpRazorTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): BlazorPageServiceModel;\n+            }\n+            export interface BlazorPageServiceCSharpRazorTemplateTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceCSharpRazorTemplateTypeFunc;\n+                prototype: BlazorPageServiceCSharpRazorTemplate;\n+                new (model: BlazorPageServiceModel): BlazorPageServiceCSharpRazorTemplate;\n+                ctor: { new (model: BlazorPageServiceModel): BlazorPageServiceCSharpRazorTemplate; };\n+            }\n+            const BlazorPageServiceCSharpRazorTemplate: BlazorPageServiceCSharpRazorTemplateTypeFunc;\n+\n             // Nethereum.Generators.Service.ServiceGenerator\n-            export interface ServiceGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ServiceModel>, ServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ServiceGenerator extends Core.ClassGeneratorBase$1<ServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ServiceGeneratorTypeFunc extends TypeFunction {\n                 (): ServiceGeneratorTypeFunc;\n                 prototype: ServiceGenerator;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator; };\n             }\n             const ServiceGenerator: ServiceGeneratorTypeFunc;\n \n@@ -717,13 +814,15 @@ declare module Nethereum {\n                 get_ContractABI(): Model.ContractABI;\n                 get_CQSNamespace(): string;\n                 get_FunctionOutputNamespace(): string;\n+                get_SharedTypesFullNamespace(): string;\n                 get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n             }\n             export interface ServiceModelTypeFunc extends TypeFunction {\n                 (): ServiceModelTypeFunc;\n                 prototype: ServiceModel;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): ServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): ServiceModel; };\n+                GetDefaultTypeName(name: string): string;\n             }\n             const ServiceModel: ServiceModelTypeFunc;\n \n@@ -756,7 +855,7 @@ declare module Nethereum {\n             const FunctionServiceMethodCSharpTemplate: FunctionServiceMethodCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceCSharpTemplate\n-            export interface ServiceCSharpTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 GenerateMainClass(): string;\n                 GenerateBaseClass(): string;\n             }\n@@ -794,7 +893,8 @@ declare module Nethereum {\n             const FunctionServiceMethodFSharpTemplate: FunctionServiceMethodFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceFSharpTemplate\n-            export interface ServiceFSharpTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ServiceModel;\n             }\n             export interface ServiceFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ServiceFSharpTemplateTypeFunc;\n@@ -830,7 +930,8 @@ declare module Nethereum {\n             const FunctionServiceMethodVbTemplate: FunctionServiceMethodVbTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceVbTemplate\n-            export interface ServiceVbTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ServiceModel;\n             }\n             export interface ServiceVbTemplateTypeFunc extends TypeFunction {\n                 (): ServiceVbTemplateTypeFunc;\n@@ -842,7 +943,7 @@ declare module Nethereum {\n         }\n         module Console {\n             // Nethereum.Generators.Console.ConsoleGenerator\n-            export interface ConsoleGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ConsoleModel>, ConsoleModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ConsoleGenerator extends Core.ClassGeneratorBase$1<ConsoleModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -870,7 +971,7 @@ declare module Nethereum {\n             const ConsoleModel: ConsoleModelTypeFunc;\n             module CSharp {\n                 // Nethereum.Generators.Console.CSharp.ConsoleCSharpTemplate\n-                export interface ConsoleCSharpTemplate extends CQS.ClassTemplateBase$1<ConsoleModel>, Core.IClassTemplate {\n+                export interface ConsoleCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 }\n                 export interface ConsoleCSharpTemplateTypeFunc extends TypeFunction {\n                     (): ConsoleCSharpTemplateTypeFunc;\n@@ -907,7 +1008,7 @@ declare module Nethereum {\n             }\n             module Vb {\n                 // Nethereum.Generators.Console.Vb.ConsoleVbTemplate\n-                export interface ConsoleVbTemplate extends CQS.ClassTemplateBase$1<ConsoleModel>, Core.IClassTemplate {\n+                export interface ConsoleVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 }\n                 export interface ConsoleVbTemplateTypeFunc extends TypeFunction {\n                     (): ConsoleVbTemplateTypeFunc;\n@@ -956,16 +1057,16 @@ declare module Nethereum {\n             }\n             const ClassFileTemplate: ClassFileTemplateTypeFunc;\n \n-            // Nethereum.Generators.CQS.ClassTemplateBase<TModel>\n-            export interface ClassTemplateBase$1<TModel> extends System.Object, Core.IClassTemplate {\n+            // Nethereum.Generators.CQS.ClassTemplateBase\n+            export interface ClassTemplateBase extends System.Object, Core.IClassTemplate {\n                 GenerateClass(): string;\n                 GenerateFullClass(): string;\n             }\n-            export interface ClassTemplateBase$1TypeFunc<TModel> extends TypeFunction {\n-                (): ClassTemplateBase$1TypeFunc<TModel>;\n-                prototype: ClassTemplateBase$1<TModel>;\n+            export interface ClassTemplateBaseTypeFunc extends TypeFunction {\n+                (): ClassTemplateBaseTypeFunc;\n+                prototype: ClassTemplateBase;\n             }\n-            export function ClassTemplateBase$1<TModel>(TModel: TypeArg<TModel>): ClassTemplateBase$1TypeFunc<TModel>;\n+            const ClassTemplateBase: ClassTemplateBaseTypeFunc;\n \n             // Nethereum.Generators.CQS.CSharpClassFileTemplate\n             export interface CSharpClassFileTemplate extends ClassFileTemplate {\n@@ -1035,6 +1136,17 @@ declare module Nethereum {\n             }\n             const MultipleClassFileTemplate: MultipleClassFileTemplateTypeFunc;\n \n+            // Nethereum.Generators.CQS.RazorClassFileTemplate\n+            export interface RazorClassFileTemplate extends ClassFileTemplate {\n+            }\n+            export interface RazorClassFileTemplateTypeFunc extends TypeFunction {\n+                (): RazorClassFileTemplateTypeFunc;\n+                prototype: RazorClassFileTemplate;\n+                new (classModel: Core.IClassModel, classTemplate: Core.IClassTemplate): RazorClassFileTemplate;\n+                ctor: { new (classModel: Core.IClassModel, classTemplate: Core.IClassTemplate): RazorClassFileTemplate; };\n+            }\n+            const RazorClassFileTemplate: RazorClassFileTemplateTypeFunc;\n+\n             // Nethereum.Generators.CQS.VbClassFileTemplate\n             export interface VbClassFileTemplate extends ClassFileTemplate {\n             }\n@@ -1058,7 +1170,7 @@ declare module Nethereum {\n             const VbMultipleClassFileTemplate: VbMultipleClassFileTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageGenerator\n-            export interface ContractDeploymentCQSMessageGenerator extends Core.ClassGeneratorBase$2<ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, ContractDeploymentCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ContractDeploymentCQSMessageGenerator extends Core.ClassGeneratorBase$1<ContractDeploymentCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ContractDeploymentCQSMessageGeneratorTypeFunc extends TypeFunction {\n@@ -1079,20 +1191,21 @@ declare module Nethereum {\n                 prototype: ContractDeploymentCQSMessageModel;\n                 new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel;\n                 ctor: { new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel; };\n+                GetDefaultTypeName(name: string): string;\n             }\n             const ContractDeploymentCQSMessageModel: ContractDeploymentCQSMessageModelTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageGenerator\n-            export interface FunctionCQSMessageGenerator extends Core.ClassGeneratorBase$2<ClassTemplateBase$1<FunctionCQSMessageModel>, FunctionCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface FunctionCQSMessageGenerator extends Core.ClassGeneratorBase$1<FunctionCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_FunctionABI(): Model.FunctionABI;\n                 get_MudNamespace(): string;\n                 set_MudNamespace(value: string): void;\n             }\n             export interface FunctionCQSMessageGeneratorTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageGeneratorTypeFunc;\n                 prototype: FunctionCQSMessageGenerator;\n-                new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator; };\n+                new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator; };\n             }\n             const FunctionCQSMessageGenerator: FunctionCQSMessageGeneratorTypeFunc;\n \n@@ -1103,13 +1216,14 @@ declare module Nethereum {\n             export interface FunctionCQSMessageModelTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageModelTypeFunc;\n                 prototype: FunctionCQSMessageModel;\n-                new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionCQSMessageModel;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionCQSMessageModel; };\n             }\n             const FunctionCQSMessageModel: FunctionCQSMessageModelTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageCSharpTemplate\n-            export interface ContractDeploymentCQSMessageCSharpTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageCSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ContractDeploymentCQSMessageCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1121,7 +1235,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageCSharpTemplate: ContractDeploymentCQSMessageCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageCSharpTemplate\n-            export interface FunctionCQSMessageCSharpTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageCSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionCQSMessageCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1133,7 +1248,8 @@ declare module Nethereum {\n             const FunctionCQSMessageCSharpTemplate: FunctionCQSMessageCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageFSharpTemplate\n-            export interface ContractDeploymentCQSMessageFSharpTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageFSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n             }\n             export interface ContractDeploymentCQSMessageFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ContractDeploymentCQSMessageFSharpTemplateTypeFunc;\n@@ -1144,7 +1260,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageFSharpTemplate: ContractDeploymentCQSMessageFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageFSharpTemplate\n-            export interface FunctionCQSMessageFSharpTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageFSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n             }\n             export interface FunctionCQSMessageFSharpTemplateTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageFSharpTemplateTypeFunc;\n@@ -1155,7 +1272,8 @@ declare module Nethereum {\n             const FunctionCQSMessageFSharpTemplate: FunctionCQSMessageFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageVbTemplate\n-            export interface ContractDeploymentCQSMessageVbTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageVbTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ContractDeploymentCQSMessageVbTemplateTypeFunc extends TypeFunction {\n@@ -1167,7 +1285,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageVbTemplate: ContractDeploymentCQSMessageVbTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageVbTemplate\n-            export interface FunctionCQSMessageVbTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageVbTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionCQSMessageVbTemplateTypeFunc extends TypeFunction {\n@@ -1180,14 +1299,14 @@ declare module Nethereum {\n         }\n         module DTOs {\n             // Nethereum.Generators.DTOs.ErrorDTOGenerator\n-            export interface ErrorDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ErrorDTOModel>, ErrorDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ErrorDTOGenerator extends Core.ClassGeneratorBase$1<ErrorDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ErrorDTOGeneratorTypeFunc extends TypeFunction {\n                 (): ErrorDTOGeneratorTypeFunc;\n                 prototype: ErrorDTOGenerator;\n-                new (abi: Model.ErrorABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator;\n-                ctor: { new (abi: Model.ErrorABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator; };\n+                new (abi: Model.ErrorABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator;\n+                ctor: { new (abi: Model.ErrorABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator; };\n             }\n             const ErrorDTOGenerator: ErrorDTOGeneratorTypeFunc;\n \n@@ -1199,20 +1318,20 @@ declare module Nethereum {\n             export interface ErrorDTOModelTypeFunc extends TypeFunction {\n                 (): ErrorDTOModelTypeFunc;\n                 prototype: ErrorDTOModel;\n-                new (errorABI: Model.ErrorABI, namespace: string): ErrorDTOModel;\n-                ctor: { new (errorABI: Model.ErrorABI, namespace: string): ErrorDTOModel; };\n+                new (errorABI: Model.ErrorABI, namespace: string, sharedTypesNamespace: string): ErrorDTOModel;\n+                ctor: { new (errorABI: Model.ErrorABI, namespace: string, sharedTypesNamespace: string): ErrorDTOModel; };\n             }\n             const ErrorDTOModel: ErrorDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOGenerator\n-            export interface EventDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<EventDTOModel>, EventDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface EventDTOGenerator extends Core.ClassGeneratorBase$1<EventDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface EventDTOGeneratorTypeFunc extends TypeFunction {\n                 (): EventDTOGeneratorTypeFunc;\n                 prototype: EventDTOGenerator;\n-                new (abi: Model.EventABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator;\n-                ctor: { new (abi: Model.EventABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator; };\n+                new (abi: Model.EventABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator;\n+                ctor: { new (abi: Model.EventABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator; };\n             }\n             const EventDTOGenerator: EventDTOGeneratorTypeFunc;\n \n@@ -1225,20 +1344,20 @@ declare module Nethereum {\n             export interface EventDTOModelTypeFunc extends TypeFunction {\n                 (): EventDTOModelTypeFunc;\n                 prototype: EventDTOModel;\n-                new (eventABI: Model.EventABI, namespace: string): EventDTOModel;\n-                ctor: { new (eventABI: Model.EventABI, namespace: string): EventDTOModel; };\n+                new (eventABI: Model.EventABI, namespace: string, sharedTypesNamespace: string): EventDTOModel;\n+                ctor: { new (eventABI: Model.EventABI, namespace: string, sharedTypesNamespace: string): EventDTOModel; };\n             }\n             const EventDTOModel: EventDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOGenerator\n-            export interface FunctionOutputDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, FunctionOutputDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface FunctionOutputDTOGenerator extends Core.ClassGeneratorBase$1<FunctionOutputDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface FunctionOutputDTOGeneratorTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOGeneratorTypeFunc;\n                 prototype: FunctionOutputDTOGenerator;\n-                new (functionABI: Model.FunctionABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator; };\n             }\n             const FunctionOutputDTOGenerator: FunctionOutputDTOGeneratorTypeFunc;\n \n@@ -1250,13 +1369,13 @@ declare module Nethereum {\n             export interface FunctionOutputDTOModelTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOModelTypeFunc;\n                 prototype: FunctionOutputDTOModel;\n-                new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionOutputDTOModel;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionOutputDTOModel; };\n             }\n             const FunctionOutputDTOModel: FunctionOutputDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeGenerator\n-            export interface StructTypeGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<StructTypeModel>, StructTypeModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface StructTypeGenerator extends Core.ClassGeneratorBase$1<StructTypeModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface StructTypeGeneratorTypeFunc extends TypeFunction {\n@@ -1280,7 +1399,8 @@ declare module Nethereum {\n             const StructTypeModel: StructTypeModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOCSharpTemplate\n-            export interface ErrorDTOCSharpTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ErrorDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1292,7 +1412,8 @@ declare module Nethereum {\n             const ErrorDTOCSharpTemplate: ErrorDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOCSharpTemplate\n-            export interface EventDTOCSharpTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface EventDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1304,7 +1425,8 @@ declare module Nethereum {\n             const EventDTOCSharpTemplate: EventDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOCSharpTemplate\n-            export interface FunctionOutputDTOCSharpTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionOutputDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1348,7 +1470,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOCSharpTemplate: ParameterABIFunctionDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeCSharpTemplate\n-            export interface StructTypeCSharpTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface StructTypeCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1360,7 +1483,8 @@ declare module Nethereum {\n             const StructTypeCSharpTemplate: StructTypeCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOFSharpTemplate\n-            export interface ErrorDTOFSharpTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n             }\n             export interface ErrorDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ErrorDTOFSharpTemplateTypeFunc;\n@@ -1371,7 +1495,8 @@ declare module Nethereum {\n             const ErrorDTOFSharpTemplate: ErrorDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOFSharpTemplate\n-            export interface EventDTOFSharpTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n             }\n             export interface EventDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): EventDTOFSharpTemplateTypeFunc;\n@@ -1382,7 +1507,8 @@ declare module Nethereum {\n             const EventDTOFSharpTemplate: EventDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOFSharpTemplate\n-            export interface FunctionOutputDTOFSharpTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n             }\n             export interface FunctionOutputDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOFSharpTemplateTypeFunc;\n@@ -1423,7 +1549,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOFSharpTemplate: ParameterABIFunctionDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeFSharpTemplate\n-            export interface StructTypeFSharpTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n             }\n             export interface StructTypeFSharpTemplateTypeFunc extends TypeFunction {\n                 (): StructTypeFSharpTemplateTypeFunc;\n@@ -1434,7 +1561,8 @@ declare module Nethereum {\n             const StructTypeFSharpTemplate: StructTypeFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOVbTemplate\n-            export interface ErrorDTOVbTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ErrorDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1446,7 +1574,8 @@ declare module Nethereum {\n             const ErrorDTOVbTemplate: ErrorDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOVbTemplate\n-            export interface EventDTOVbTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface EventDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1458,7 +1587,8 @@ declare module Nethereum {\n             const EventDTOVbTemplate: EventDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOVbTemplate\n-            export interface FunctionOutputDTOVbTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionOutputDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1500,7 +1630,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOVbTemplate: ParameterABIFunctionDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeVbTemplate\n-            export interface StructTypeVbTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface StructTypeVbTemplateTypeFunc extends TypeFunction {\n@@ -1513,15 +1644,15 @@ declare module Nethereum {\n         }\n         module MudService {\n             // Nethereum.Generators.MudService.MudServiceGenerator\n-            export interface MudServiceGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<MudServiceModel>, MudServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface MudServiceGenerator extends Core.ClassGeneratorBase$1<MudServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface MudServiceGeneratorTypeFunc extends TypeFunction {\n                 (): MudServiceGeneratorTypeFunc;\n                 prototype: MudServiceGenerator;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator; };\n             }\n             const MudServiceGenerator: MudServiceGeneratorTypeFunc;\n \n@@ -1530,6 +1661,7 @@ declare module Nethereum {\n                 get_ContractABI(): Model.ContractABI;\n                 get_CQSNamespace(): string;\n                 get_FunctionOutputNamespace(): string;\n+                get_SharedTypesNamespace(): string;\n                 get_MudNamespace(): string;\n                 get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n                 GetResourceClassName(): string;\n@@ -1538,13 +1670,14 @@ declare module Nethereum {\n             export interface MudServiceModelTypeFunc extends TypeFunction {\n                 (): MudServiceModelTypeFunc;\n                 prototype: MudServiceModel;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, mudNamespace?: string): MudServiceModel;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, mudNamespace?: string): MudServiceModel; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, mudNamespace?: string): MudServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, mudNamespace?: string): MudServiceModel; };\n             }\n             const MudServiceModel: MudServiceModelTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceCSharpTemplate\n-            export interface MudServiceCSharpTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n                 GenerateSystemClass(): string;\n             }\n             export interface MudServiceCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1556,7 +1689,8 @@ declare module Nethereum {\n             const MudServiceCSharpTemplate: MudServiceCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceFSharpTemplate\n-            export interface MudServiceFSharpTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n             }\n             export interface MudServiceFSharpTemplateTypeFunc extends TypeFunction {\n                 (): MudServiceFSharpTemplateTypeFunc;\n@@ -1567,7 +1701,8 @@ declare module Nethereum {\n             const MudServiceFSharpTemplate: MudServiceFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceVbTemplate\n-            export interface MudServiceVbTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n                 GenerateSystemClass(): string;\n             }\n             export interface MudServiceVbTemplateTypeFunc extends TypeFunction {\n@@ -1599,7 +1734,7 @@ declare module Nethereum {\n             const MudTable: MudTableTypeFunc;\n \n             // Nethereum.Generators.MudTable.MudTableGenerator\n-            export interface MudTableGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<MudTableModel>, MudTableModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface MudTableGenerator extends Core.ClassGeneratorBase$1<MudTableModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface MudTableGeneratorTypeFunc extends TypeFunction {\n@@ -1627,7 +1762,8 @@ declare module Nethereum {\n             const MudTableModel: MudTableModelTypeFunc;\n \n             // Nethereum.Generators.MudTable.MudTableCSharpTemplate\n-            export interface MudTableCSharpTemplate extends CQS.ClassTemplateBase$1<MudTableModel>, Core.IClassTemplate {\n+            export interface MudTableCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudTableModel;\n                 GenerateDirectAccessProperties(parameters: Model.ParameterABI[], isKey: boolean, spacing: string): string;\n                 GenerateDirectAccessProperty(parameter: Model.ParameterABI, isKey: boolean, spacing: string): string;\n                 GetBaseConstructor(): string;\n@@ -1644,7 +1780,7 @@ declare module Nethereum {\n         }\n         module Unity {\n             // Nethereum.Generators.Unity.UnityContractFactoryGenerator\n-            export interface UnityContractFactoryGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<UnityContractFactoryModel>, UnityContractFactoryModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface UnityContractFactoryGenerator extends Core.ClassGeneratorBase$1<UnityContractFactoryModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1672,7 +1808,7 @@ declare module Nethereum {\n             const UnityContractFactoryModel: UnityContractFactoryModelTypeFunc;\n \n             // Nethereum.Generators.Unity.UnityRequestsGenerator\n-            export interface UnityRequestsGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<UnityRequestsModel>, UnityRequestsModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface UnityRequestsGenerator extends Core.ClassGeneratorBase$1<UnityRequestsModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1700,7 +1836,8 @@ declare module Nethereum {\n             const UnityRequestsModel: UnityRequestsModelTypeFunc;\n             module CSharp {\n                 // Nethereum.Generators.Unity.CSharp.UnityContractFactoryCSharpTemplate\n-                export interface UnityContractFactoryCSharpTemplate extends CQS.ClassTemplateBase$1<UnityContractFactoryModel>, Core.IClassTemplate {\n+                export interface UnityContractFactoryCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                    get_Model(): UnityContractFactoryModel;\n                     GenerateMethod(functionABI: Model.FunctionABI): string;\n                 }\n                 export interface UnityContractFactoryCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1712,7 +1849,8 @@ declare module Nethereum {\n                 const UnityContractFactoryCSharpTemplate: UnityContractFactoryCSharpTemplateTypeFunc;\n \n                 // Nethereum.Generators.Unity.CSharp.UnityFunctionRequestsCsharpTemplates\n-                export interface UnityFunctionRequestsCsharpTemplates extends CQS.ClassTemplateBase$1<UnityRequestsModel>, Core.IClassTemplate {\n+                export interface UnityFunctionRequestsCsharpTemplates extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                    get_Model(): UnityRequestsModel;\n                     GenerateSingleClass(functionABI: Model.FunctionABI): string;\n                 }\n                 export interface UnityFunctionRequestsCsharpTemplatesTypeFunc extends TypeFunction {\n@@ -1726,7 +1864,7 @@ declare module Nethereum {\n         }\n         module XUnit {\n             // Nethereum.Generators.XUnit.SimpleTestGenerator\n-            export interface SimpleTestGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<SimpleTestModel>, SimpleTestModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface SimpleTestGenerator extends Core.ClassGeneratorBase$1<SimpleTestModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1753,7 +1891,8 @@ declare module Nethereum {\n             const SimpleTestModel: SimpleTestModelTypeFunc;\n \n             // Nethereum.Generators.XUnit.SimpleTestCSharpTemplate\n-            export interface SimpleTestCSharpTemplate extends CQS.ClassTemplateBase$1<SimpleTestModel>, Core.IClassTemplate {\n+            export interface SimpleTestCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): SimpleTestModel;\n             }\n             export interface SimpleTestCSharpTemplateTypeFunc extends TypeFunction {\n                 (): SimpleTestCSharpTemplateTypeFunc;"},{"sha":"50956345b351ad22817d4100e9b44f4787b3b13a","filename":"generators/Nethereum.Generators.DuoCode/scripts/Nethereum.Generators.DuoCode.dll","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.dll","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.dll","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.dll?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"72a743e219599af7750c0eab583e077f8c82fef7","filename":"generators/Nethereum.Generators.DuoCode/scripts/Nethereum.Generators.DuoCode.js","status":"modified","additions":764,"deletions":218,"changes":982,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"37d75d1d17e4f426baff67fe448ae5c730b4b9b8","filename":"generators/Nethereum.Generators.DuoCode/scripts/Nethereum.Generators.DuoCode.js.map","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js.map","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js.map","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.DuoCode%2Fscripts%2FNethereum.Generators.DuoCode.js.map?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"6cb173cf9cb0a5f313e49248d7069f357c939a55","filename":"generators/Nethereum.Generators.IntegrationTests/ContractProjectGeneratorEndToEndTests.cs","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.IntegrationTests%2FContractProjectGeneratorEndToEndTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.IntegrationTests%2FContractProjectGeneratorEndToEndTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.IntegrationTests%2FContractProjectGeneratorEndToEndTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -42,6 +42,8 @@ public void Generated_Code_Builds(CodeGenLanguage codeGenLanguage)\n                     \"StandardContract.Service\",\n                     \"StandardContract.CQS\",\n                     \"StandardContract.DTO\",\n+                    null,\n+                    null,\n                     context.TargetProjectFolder,\n                     Path.DirectorySeparatorChar.ToString(),\n                     codeGenLanguage)\n@@ -91,6 +93,8 @@ public void With_Single_Messages_File_Generated_Code_Builds(CodeGenLanguage code\n                     \"StandardContract.Service\",\n                     \"StandardContract.CQS\",\n                     \"StandardContract.DTO\",\n+                    null,\n+                    null,\n                     context.TargetProjectFolder,\n                     Path.DirectorySeparatorChar.ToString(),\n                     codeGenLanguage)"},{"sha":"78bd422dff8c96172c3aed0c7dc6948fd0012504","filename":"generators/Nethereum.Generators.IntegrationTests/NetStandardLibraryGeneratorEndToEndTests.cs","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.IntegrationTests%2FNetStandardLibraryGeneratorEndToEndTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.IntegrationTests%2FNetStandardLibraryGeneratorEndToEndTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.IntegrationTests%2FNetStandardLibraryGeneratorEndToEndTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -49,6 +49,8 @@ public void GeneratedProjectBuildsSuccessfully(CodeGenLanguage codeGenLanguage)\n                     \"StandardContract.Service\",\n                     \"StandardContract.CQS\",\n                     \"StandardContract.DTO\",\n+                    null,\n+                    null,\n                     context.TargetProjectFolder,\n                     Path.DirectorySeparatorChar.ToString(),\n                     codeGenLanguage)"},{"sha":"f85d1b68fc67fbfc7ac6506919e45d9ce321929e","filename":"generators/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.d.ts","status":"modified","additions":230,"deletions":91,"changes":321,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,31 @@\n \n declare module Nethereum {\n     module Generators {\n+        // Nethereum.Generators.BlazorPagesGenerator\n+        export interface BlazorPagesGenerator extends System.Object {\n+            get_ContractABI(): Model.ContractABI;\n+            get_Namespace(): string;\n+            get_BaseOutputPath(): string;\n+            get_PathDelimiter(): string;\n+            get_ContractName(): string;\n+            get_BaseNamespace(): string;\n+            get_ServiceNamespace(): string;\n+            get_CQSNamespace(): string;\n+            get_DTONamespace(): string;\n+            get_CodeGenLanguage(): Core.CodeGenLanguage;\n+            get_SharedTypesNamespace(): string;\n+            get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n+            GenerateFile(): Core.GeneratedFile;\n+            GetFullNamespace(namespace: string): string;\n+        }\n+        export interface BlazorPagesGeneratorTypeFunc extends TypeFunction {\n+            (): BlazorPagesGeneratorTypeFunc;\n+            prototype: BlazorPagesGenerator;\n+            new (contractABI: Model.ContractABI, contractName: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, baseOutputPath: string, pathDelimiter: string, namespace: string): BlazorPagesGenerator;\n+            ctor: { new (contractABI: Model.ContractABI, contractName: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, baseOutputPath: string, pathDelimiter: string, namespace: string): BlazorPagesGenerator; };\n+        }\n+        const BlazorPagesGenerator: BlazorPagesGeneratorTypeFunc;\n+\n         // Nethereum.Generators.ContractProjectGenerator\n         export interface ContractProjectGenerator extends System.Object {\n             get_ContractABI(): Model.ContractABI;\n@@ -22,8 +47,15 @@ declare module Nethereum {\n             get_CodeGenLanguage(): Core.CodeGenLanguage;\n             get_MudNamespace(): string;\n             set_MudNamespace(value: string): void;\n+            get_SharedGeneratedTypes(): string[];\n+            get_SharedTypesNamespace(): string;\n             GenerateAllMessagesFileAndService(): Core.GeneratedFile[];\n-            GenerateAllMessages(): Core.GeneratedFile;\n+            AreStructsSharedGenerated(): boolean;\n+            HasSharingSettings(): boolean;\n+            AreFunctionsSharedGenerated(): boolean;\n+            AreErrorsSharedGenerated(): boolean;\n+            AreEventsSharedGenerated(): boolean;\n+            GenerateAllMessages(generateStructs?: boolean): Core.GeneratedFile;\n             GenerateAll(): Core.GeneratedFile[];\n             GenerateService(singleMessagesFile?: boolean): Core.GeneratedFile;\n             GenerateMudService(mudNamespace?: string, singleMessagesFile?: boolean): Core.GeneratedFile;\n@@ -51,8 +83,8 @@ declare module Nethereum {\n         export interface ContractProjectGeneratorTypeFunc extends TypeFunction {\n             (): ContractProjectGeneratorTypeFunc;\n             prototype: ContractProjectGenerator;\n-            new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator;\n-            ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator; };\n+            new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, sharedGeneratedTypes: string[], baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator;\n+            ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, baseNamespace: string, serviceNamespace: string, cqsNamespace: string, dtoNamespace: string, sharedTypesNamespace: string, sharedGeneratedTypes: string[], baseOutputPath: string, pathDelimiter: string, codeGenLanguage: Core.CodeGenLanguage): ContractProjectGenerator; };\n         }\n         const ContractProjectGenerator: ContractProjectGeneratorTypeFunc;\n \n@@ -202,29 +234,37 @@ declare module Nethereum {\n             }\n             const ABITypeToVBType: ABITypeToVBTypeTypeFunc;\n \n-            // Nethereum.Generators.Core.ClassGeneratorBase<TClassTemplate, TClassModel>\n-            export interface ClassGeneratorBase$2<TClassTemplate, TClassModel> extends System.Object, IFileGenerator, IGenerator, IClassGenerator {\n-                get_ClassModel(): TClassModel;\n-                set_ClassModel(value: TClassModel): void;\n+            // Nethereum.Generators.Core.ClassGeneratorBase<TMessageModel>\n+            export interface ClassGeneratorBase$1<TMessageModel> extends System.Object, IFileGenerator, IGenerator, IClassGenerator {\n+                get_ClassModel(): TMessageModel;\n+                set_ClassModel(value: TMessageModel): void;\n                 GenerateFileContent$1(outputPath: string): GeneratedFile;\n                 GenerateFileContent(): string;\n                 GetFileName(): string;\n                 GenerateClass(): string;\n             }\n-            export interface ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel> extends TypeFunction {\n-                (): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;\n-                prototype: ClassGeneratorBase$2<TClassTemplate, TClassModel>;\n-                new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>;\n-                ctor: { new (): ClassGeneratorBase$2<TClassTemplate, TClassModel>; };\n+            export interface ClassGeneratorBase$1TypeFunc<TMessageModel> extends TypeFunction {\n+                (): ClassGeneratorBase$1TypeFunc<TMessageModel>;\n+                prototype: ClassGeneratorBase$1<TMessageModel>;\n+                new (): ClassGeneratorBase$1<TMessageModel>;\n+                ctor: { new (): ClassGeneratorBase$1<TMessageModel>; };\n             }\n-            export function ClassGeneratorBase$2<TClassTemplate, TClassModel>(TClassTemplate: TypeArg<TClassTemplate>, TClassModel: TypeArg<TClassModel>): ClassGeneratorBase$2TypeFunc<TClassTemplate, TClassModel>;\n+            export function ClassGeneratorBase$1<TMessageModel>(TMessageModel: TypeArg<TMessageModel>): ClassGeneratorBase$1TypeFunc<TMessageModel>;\n \n             // Nethereum.Generators.Core.CodeGenLanguage\n             export enum CodeGenLanguage {\n                 CSharp = 0,\n                 Vb = 1,\n                 Proto = 2,\n-                FSharp = 3\n+                FSharp = 3,\n+                Razor = 4\n+            }\n+\n+            // Nethereum.Generators.Core.SharedDTOType\n+            export enum SharedDTOType {\n+                Functions = 0,\n+                Events = 1,\n+                Structs = 2\n             }\n \n             // Nethereum.Generators.Core.CodeGenLanguageExt\n@@ -511,6 +551,7 @@ declare module Nethereum {\n             export interface TypeMessageModelTypeFunc extends TypeFunction {\n                 (): TypeMessageModelTypeFunc;\n                 prototype: TypeMessageModel;\n+                GetDefaultTypeName(name: string, classNameSuffix: string): string;\n             }\n             const TypeMessageModel: TypeMessageModelTypeFunc;\n \n@@ -682,8 +723,8 @@ declare module Nethereum {\n             export interface AllMessagesGeneratorTypeFunc extends TypeFunction {\n                 (): AllMessagesGeneratorTypeFunc;\n                 prototype: AllMessagesGenerator;\n-                new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator;\n-                ctor: { new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator; };\n+                new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator;\n+                ctor: { new (classGenerators: System.Collections.Generic.IEnumerable$1<Core.IClassGenerator>, contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): AllMessagesGenerator; };\n             }\n             const AllMessagesGenerator: AllMessagesGeneratorTypeFunc;\n \n@@ -694,21 +735,77 @@ declare module Nethereum {\n             export interface AllMessagesModelTypeFunc extends TypeFunction {\n                 (): AllMessagesModelTypeFunc;\n                 prototype: AllMessagesModel;\n-                new (contractName: string, namespace: string): AllMessagesModel;\n-                ctor: { new (contractName: string, namespace: string): AllMessagesModel; };\n+                new (contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string): AllMessagesModel;\n+                ctor: { new (contractName: string, namespace: string, dtoNamespace: string, sharedNamespace: string): AllMessagesModel; };\n             }\n             const AllMessagesModel: AllMessagesModelTypeFunc;\n \n+            // Nethereum.Generators.Service.BlazorPageServiceGenerator\n+            export interface BlazorPageServiceGenerator extends Core.ClassGeneratorBase$1<BlazorPageServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+                get_ContractABI(): Model.ContractABI;\n+                InitialiseTemplate(): void;\n+            }\n+            export interface BlazorPageServiceGeneratorTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceGeneratorTypeFunc;\n+                prototype: BlazorPageServiceGenerator;\n+                new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): BlazorPageServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedNamespace: string, codeGenLanguage: Core.CodeGenLanguage): BlazorPageServiceGenerator; };\n+            }\n+            const BlazorPageServiceGenerator: BlazorPageServiceGeneratorTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorPageServiceModel\n+            export interface BlazorPageServiceModel extends Core.TypeMessageModel, Core.IClassModel, Core.IFileModel {\n+                get_ContractABI(): Model.ContractABI;\n+                get_CQSNamespace(): string;\n+                get_FunctionOutputNamespace(): string;\n+                get_ContractName(): string;\n+                GetServiceTypeName(): string;\n+                GetContractDeploymentTypeName(): string;\n+            }\n+            export interface BlazorPageServiceModelTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceModelTypeFunc;\n+                prototype: BlazorPageServiceModel;\n+                new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): BlazorPageServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): BlazorPageServiceModel; };\n+            }\n+            const BlazorPageServiceModel: BlazorPageServiceModelTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorFunctionComponentsTemplate\n+            export interface BlazorFunctionComponentsTemplate extends System.Object {\n+                GenerateComponents(includeDeploymentComponent?: boolean): string;\n+                GenerateComponent(functionABI: Model.FunctionABI): string;\n+                GenerateDeploymentComponent(): string;\n+            }\n+            export interface BlazorFunctionComponentsTemplateTypeFunc extends TypeFunction {\n+                (): BlazorFunctionComponentsTemplateTypeFunc;\n+                prototype: BlazorFunctionComponentsTemplate;\n+                new (model: BlazorPageServiceModel): BlazorFunctionComponentsTemplate;\n+                ctor: { new (model: BlazorPageServiceModel): BlazorFunctionComponentsTemplate; };\n+            }\n+            const BlazorFunctionComponentsTemplate: BlazorFunctionComponentsTemplateTypeFunc;\n+\n+            // Nethereum.Generators.Service.BlazorPageServiceCSharpRazorTemplate\n+            export interface BlazorPageServiceCSharpRazorTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): BlazorPageServiceModel;\n+            }\n+            export interface BlazorPageServiceCSharpRazorTemplateTypeFunc extends TypeFunction {\n+                (): BlazorPageServiceCSharpRazorTemplateTypeFunc;\n+                prototype: BlazorPageServiceCSharpRazorTemplate;\n+                new (model: BlazorPageServiceModel): BlazorPageServiceCSharpRazorTemplate;\n+                ctor: { new (model: BlazorPageServiceModel): BlazorPageServiceCSharpRazorTemplate; };\n+            }\n+            const BlazorPageServiceCSharpRazorTemplate: BlazorPageServiceCSharpRazorTemplateTypeFunc;\n+\n             // Nethereum.Generators.Service.ServiceGenerator\n-            export interface ServiceGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ServiceModel>, ServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ServiceGenerator extends Core.ClassGeneratorBase$1<ServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ServiceGeneratorTypeFunc extends TypeFunction {\n                 (): ServiceGeneratorTypeFunc;\n                 prototype: ServiceGenerator;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ServiceGenerator; };\n             }\n             const ServiceGenerator: ServiceGeneratorTypeFunc;\n \n@@ -717,13 +814,15 @@ declare module Nethereum {\n                 get_ContractABI(): Model.ContractABI;\n                 get_CQSNamespace(): string;\n                 get_FunctionOutputNamespace(): string;\n+                get_SharedTypesFullNamespace(): string;\n                 get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n             }\n             export interface ServiceModelTypeFunc extends TypeFunction {\n                 (): ServiceModelTypeFunc;\n                 prototype: ServiceModel;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string): ServiceModel; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): ServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesFullNamespace: string): ServiceModel; };\n+                GetDefaultTypeName(name: string): string;\n             }\n             const ServiceModel: ServiceModelTypeFunc;\n \n@@ -756,7 +855,7 @@ declare module Nethereum {\n             const FunctionServiceMethodCSharpTemplate: FunctionServiceMethodCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceCSharpTemplate\n-            export interface ServiceCSharpTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 GenerateMainClass(): string;\n                 GenerateBaseClass(): string;\n             }\n@@ -794,7 +893,8 @@ declare module Nethereum {\n             const FunctionServiceMethodFSharpTemplate: FunctionServiceMethodFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceFSharpTemplate\n-            export interface ServiceFSharpTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ServiceModel;\n             }\n             export interface ServiceFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ServiceFSharpTemplateTypeFunc;\n@@ -830,7 +930,8 @@ declare module Nethereum {\n             const FunctionServiceMethodVbTemplate: FunctionServiceMethodVbTemplateTypeFunc;\n \n             // Nethereum.Generators.Service.ServiceVbTemplate\n-            export interface ServiceVbTemplate extends CQS.ClassTemplateBase$1<ServiceModel>, Core.IClassTemplate {\n+            export interface ServiceVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ServiceModel;\n             }\n             export interface ServiceVbTemplateTypeFunc extends TypeFunction {\n                 (): ServiceVbTemplateTypeFunc;\n@@ -842,7 +943,7 @@ declare module Nethereum {\n         }\n         module Console {\n             // Nethereum.Generators.Console.ConsoleGenerator\n-            export interface ConsoleGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ConsoleModel>, ConsoleModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ConsoleGenerator extends Core.ClassGeneratorBase$1<ConsoleModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -870,7 +971,7 @@ declare module Nethereum {\n             const ConsoleModel: ConsoleModelTypeFunc;\n             module CSharp {\n                 // Nethereum.Generators.Console.CSharp.ConsoleCSharpTemplate\n-                export interface ConsoleCSharpTemplate extends CQS.ClassTemplateBase$1<ConsoleModel>, Core.IClassTemplate {\n+                export interface ConsoleCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 }\n                 export interface ConsoleCSharpTemplateTypeFunc extends TypeFunction {\n                     (): ConsoleCSharpTemplateTypeFunc;\n@@ -907,7 +1008,7 @@ declare module Nethereum {\n             }\n             module Vb {\n                 // Nethereum.Generators.Console.Vb.ConsoleVbTemplate\n-                export interface ConsoleVbTemplate extends CQS.ClassTemplateBase$1<ConsoleModel>, Core.IClassTemplate {\n+                export interface ConsoleVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n                 }\n                 export interface ConsoleVbTemplateTypeFunc extends TypeFunction {\n                     (): ConsoleVbTemplateTypeFunc;\n@@ -956,16 +1057,16 @@ declare module Nethereum {\n             }\n             const ClassFileTemplate: ClassFileTemplateTypeFunc;\n \n-            // Nethereum.Generators.CQS.ClassTemplateBase<TModel>\n-            export interface ClassTemplateBase$1<TModel> extends System.Object, Core.IClassTemplate {\n+            // Nethereum.Generators.CQS.ClassTemplateBase\n+            export interface ClassTemplateBase extends System.Object, Core.IClassTemplate {\n                 GenerateClass(): string;\n                 GenerateFullClass(): string;\n             }\n-            export interface ClassTemplateBase$1TypeFunc<TModel> extends TypeFunction {\n-                (): ClassTemplateBase$1TypeFunc<TModel>;\n-                prototype: ClassTemplateBase$1<TModel>;\n+            export interface ClassTemplateBaseTypeFunc extends TypeFunction {\n+                (): ClassTemplateBaseTypeFunc;\n+                prototype: ClassTemplateBase;\n             }\n-            export function ClassTemplateBase$1<TModel>(TModel: TypeArg<TModel>): ClassTemplateBase$1TypeFunc<TModel>;\n+            const ClassTemplateBase: ClassTemplateBaseTypeFunc;\n \n             // Nethereum.Generators.CQS.CSharpClassFileTemplate\n             export interface CSharpClassFileTemplate extends ClassFileTemplate {\n@@ -1035,6 +1136,17 @@ declare module Nethereum {\n             }\n             const MultipleClassFileTemplate: MultipleClassFileTemplateTypeFunc;\n \n+            // Nethereum.Generators.CQS.RazorClassFileTemplate\n+            export interface RazorClassFileTemplate extends ClassFileTemplate {\n+            }\n+            export interface RazorClassFileTemplateTypeFunc extends TypeFunction {\n+                (): RazorClassFileTemplateTypeFunc;\n+                prototype: RazorClassFileTemplate;\n+                new (classModel: Core.IClassModel, classTemplate: Core.IClassTemplate): RazorClassFileTemplate;\n+                ctor: { new (classModel: Core.IClassModel, classTemplate: Core.IClassTemplate): RazorClassFileTemplate; };\n+            }\n+            const RazorClassFileTemplate: RazorClassFileTemplateTypeFunc;\n+\n             // Nethereum.Generators.CQS.VbClassFileTemplate\n             export interface VbClassFileTemplate extends ClassFileTemplate {\n             }\n@@ -1058,7 +1170,7 @@ declare module Nethereum {\n             const VbMultipleClassFileTemplate: VbMultipleClassFileTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageGenerator\n-            export interface ContractDeploymentCQSMessageGenerator extends Core.ClassGeneratorBase$2<ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, ContractDeploymentCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ContractDeploymentCQSMessageGenerator extends Core.ClassGeneratorBase$1<ContractDeploymentCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ContractDeploymentCQSMessageGeneratorTypeFunc extends TypeFunction {\n@@ -1079,20 +1191,21 @@ declare module Nethereum {\n                 prototype: ContractDeploymentCQSMessageModel;\n                 new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel;\n                 ctor: { new (constructorABI: Model.ConstructorABI, namespace: string, byteCode: string, contractName: string): ContractDeploymentCQSMessageModel; };\n+                GetDefaultTypeName(name: string): string;\n             }\n             const ContractDeploymentCQSMessageModel: ContractDeploymentCQSMessageModelTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageGenerator\n-            export interface FunctionCQSMessageGenerator extends Core.ClassGeneratorBase$2<ClassTemplateBase$1<FunctionCQSMessageModel>, FunctionCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface FunctionCQSMessageGenerator extends Core.ClassGeneratorBase$1<FunctionCQSMessageModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_FunctionABI(): Model.FunctionABI;\n                 get_MudNamespace(): string;\n                 set_MudNamespace(value: string): void;\n             }\n             export interface FunctionCQSMessageGeneratorTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageGeneratorTypeFunc;\n                 prototype: FunctionCQSMessageGenerator;\n-                new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator; };\n+                new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, namespaceFunctionOutput: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): FunctionCQSMessageGenerator; };\n             }\n             const FunctionCQSMessageGenerator: FunctionCQSMessageGeneratorTypeFunc;\n \n@@ -1103,13 +1216,14 @@ declare module Nethereum {\n             export interface FunctionCQSMessageModelTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageModelTypeFunc;\n                 prototype: FunctionCQSMessageModel;\n-                new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionCQSMessageModel; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionCQSMessageModel;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionCQSMessageModel; };\n             }\n             const FunctionCQSMessageModel: FunctionCQSMessageModelTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageCSharpTemplate\n-            export interface ContractDeploymentCQSMessageCSharpTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageCSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ContractDeploymentCQSMessageCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1121,7 +1235,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageCSharpTemplate: ContractDeploymentCQSMessageCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageCSharpTemplate\n-            export interface FunctionCQSMessageCSharpTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageCSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionCQSMessageCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1133,7 +1248,8 @@ declare module Nethereum {\n             const FunctionCQSMessageCSharpTemplate: FunctionCQSMessageCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageFSharpTemplate\n-            export interface ContractDeploymentCQSMessageFSharpTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageFSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n             }\n             export interface ContractDeploymentCQSMessageFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ContractDeploymentCQSMessageFSharpTemplateTypeFunc;\n@@ -1144,7 +1260,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageFSharpTemplate: ContractDeploymentCQSMessageFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageFSharpTemplate\n-            export interface FunctionCQSMessageFSharpTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageFSharpTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n             }\n             export interface FunctionCQSMessageFSharpTemplateTypeFunc extends TypeFunction {\n                 (): FunctionCQSMessageFSharpTemplateTypeFunc;\n@@ -1155,7 +1272,8 @@ declare module Nethereum {\n             const FunctionCQSMessageFSharpTemplate: FunctionCQSMessageFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.ContractDeploymentCQSMessageVbTemplate\n-            export interface ContractDeploymentCQSMessageVbTemplate extends ClassTemplateBase$1<ContractDeploymentCQSMessageModel>, Core.IClassTemplate {\n+            export interface ContractDeploymentCQSMessageVbTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ContractDeploymentCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ContractDeploymentCQSMessageVbTemplateTypeFunc extends TypeFunction {\n@@ -1167,7 +1285,8 @@ declare module Nethereum {\n             const ContractDeploymentCQSMessageVbTemplate: ContractDeploymentCQSMessageVbTemplateTypeFunc;\n \n             // Nethereum.Generators.CQS.FunctionCQSMessageVbTemplate\n-            export interface FunctionCQSMessageVbTemplate extends ClassTemplateBase$1<FunctionCQSMessageModel>, Core.IClassTemplate {\n+            export interface FunctionCQSMessageVbTemplate extends ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionCQSMessageModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionCQSMessageVbTemplateTypeFunc extends TypeFunction {\n@@ -1180,14 +1299,14 @@ declare module Nethereum {\n         }\n         module DTOs {\n             // Nethereum.Generators.DTOs.ErrorDTOGenerator\n-            export interface ErrorDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<ErrorDTOModel>, ErrorDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface ErrorDTOGenerator extends Core.ClassGeneratorBase$1<ErrorDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface ErrorDTOGeneratorTypeFunc extends TypeFunction {\n                 (): ErrorDTOGeneratorTypeFunc;\n                 prototype: ErrorDTOGenerator;\n-                new (abi: Model.ErrorABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator;\n-                ctor: { new (abi: Model.ErrorABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator; };\n+                new (abi: Model.ErrorABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator;\n+                ctor: { new (abi: Model.ErrorABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): ErrorDTOGenerator; };\n             }\n             const ErrorDTOGenerator: ErrorDTOGeneratorTypeFunc;\n \n@@ -1199,20 +1318,20 @@ declare module Nethereum {\n             export interface ErrorDTOModelTypeFunc extends TypeFunction {\n                 (): ErrorDTOModelTypeFunc;\n                 prototype: ErrorDTOModel;\n-                new (errorABI: Model.ErrorABI, namespace: string): ErrorDTOModel;\n-                ctor: { new (errorABI: Model.ErrorABI, namespace: string): ErrorDTOModel; };\n+                new (errorABI: Model.ErrorABI, namespace: string, sharedTypesNamespace: string): ErrorDTOModel;\n+                ctor: { new (errorABI: Model.ErrorABI, namespace: string, sharedTypesNamespace: string): ErrorDTOModel; };\n             }\n             const ErrorDTOModel: ErrorDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOGenerator\n-            export interface EventDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<EventDTOModel>, EventDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface EventDTOGenerator extends Core.ClassGeneratorBase$1<EventDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface EventDTOGeneratorTypeFunc extends TypeFunction {\n                 (): EventDTOGeneratorTypeFunc;\n                 prototype: EventDTOGenerator;\n-                new (abi: Model.EventABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator;\n-                ctor: { new (abi: Model.EventABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator; };\n+                new (abi: Model.EventABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator;\n+                ctor: { new (abi: Model.EventABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): EventDTOGenerator; };\n             }\n             const EventDTOGenerator: EventDTOGeneratorTypeFunc;\n \n@@ -1225,20 +1344,20 @@ declare module Nethereum {\n             export interface EventDTOModelTypeFunc extends TypeFunction {\n                 (): EventDTOModelTypeFunc;\n                 prototype: EventDTOModel;\n-                new (eventABI: Model.EventABI, namespace: string): EventDTOModel;\n-                ctor: { new (eventABI: Model.EventABI, namespace: string): EventDTOModel; };\n+                new (eventABI: Model.EventABI, namespace: string, sharedTypesNamespace: string): EventDTOModel;\n+                ctor: { new (eventABI: Model.EventABI, namespace: string, sharedTypesNamespace: string): EventDTOModel; };\n             }\n             const EventDTOModel: EventDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOGenerator\n-            export interface FunctionOutputDTOGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, FunctionOutputDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface FunctionOutputDTOGenerator extends Core.ClassGeneratorBase$1<FunctionOutputDTOModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface FunctionOutputDTOGeneratorTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOGeneratorTypeFunc;\n                 prototype: FunctionOutputDTOGenerator;\n-                new (functionABI: Model.FunctionABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage): FunctionOutputDTOGenerator; };\n             }\n             const FunctionOutputDTOGenerator: FunctionOutputDTOGeneratorTypeFunc;\n \n@@ -1250,13 +1369,13 @@ declare module Nethereum {\n             export interface FunctionOutputDTOModelTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOModelTypeFunc;\n                 prototype: FunctionOutputDTOModel;\n-                new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel;\n-                ctor: { new (functionABI: Model.FunctionABI, namespace: string): FunctionOutputDTOModel; };\n+                new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionOutputDTOModel;\n+                ctor: { new (functionABI: Model.FunctionABI, namespace: string, sharedTypesNamespace: string): FunctionOutputDTOModel; };\n             }\n             const FunctionOutputDTOModel: FunctionOutputDTOModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeGenerator\n-            export interface StructTypeGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<StructTypeModel>, StructTypeModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface StructTypeGenerator extends Core.ClassGeneratorBase$1<StructTypeModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface StructTypeGeneratorTypeFunc extends TypeFunction {\n@@ -1280,7 +1399,8 @@ declare module Nethereum {\n             const StructTypeModel: StructTypeModelTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOCSharpTemplate\n-            export interface ErrorDTOCSharpTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ErrorDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1292,7 +1412,8 @@ declare module Nethereum {\n             const ErrorDTOCSharpTemplate: ErrorDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOCSharpTemplate\n-            export interface EventDTOCSharpTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface EventDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1304,7 +1425,8 @@ declare module Nethereum {\n             const EventDTOCSharpTemplate: EventDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOCSharpTemplate\n-            export interface FunctionOutputDTOCSharpTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionOutputDTOCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1348,7 +1470,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOCSharpTemplate: ParameterABIFunctionDTOCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeCSharpTemplate\n-            export interface StructTypeCSharpTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface StructTypeCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1360,7 +1483,8 @@ declare module Nethereum {\n             const StructTypeCSharpTemplate: StructTypeCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOFSharpTemplate\n-            export interface ErrorDTOFSharpTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n             }\n             export interface ErrorDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): ErrorDTOFSharpTemplateTypeFunc;\n@@ -1371,7 +1495,8 @@ declare module Nethereum {\n             const ErrorDTOFSharpTemplate: ErrorDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOFSharpTemplate\n-            export interface EventDTOFSharpTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n             }\n             export interface EventDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): EventDTOFSharpTemplateTypeFunc;\n@@ -1382,7 +1507,8 @@ declare module Nethereum {\n             const EventDTOFSharpTemplate: EventDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOFSharpTemplate\n-            export interface FunctionOutputDTOFSharpTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n             }\n             export interface FunctionOutputDTOFSharpTemplateTypeFunc extends TypeFunction {\n                 (): FunctionOutputDTOFSharpTemplateTypeFunc;\n@@ -1423,7 +1549,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOFSharpTemplate: ParameterABIFunctionDTOFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeFSharpTemplate\n-            export interface StructTypeFSharpTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n             }\n             export interface StructTypeFSharpTemplateTypeFunc extends TypeFunction {\n                 (): StructTypeFSharpTemplateTypeFunc;\n@@ -1434,7 +1561,8 @@ declare module Nethereum {\n             const StructTypeFSharpTemplate: StructTypeFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.ErrorDTOVbTemplate\n-            export interface ErrorDTOVbTemplate extends CQS.ClassTemplateBase$1<ErrorDTOModel>, Core.IClassTemplate {\n+            export interface ErrorDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): ErrorDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface ErrorDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1446,7 +1574,8 @@ declare module Nethereum {\n             const ErrorDTOVbTemplate: ErrorDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.EventDTOVbTemplate\n-            export interface EventDTOVbTemplate extends CQS.ClassTemplateBase$1<EventDTOModel>, Core.IClassTemplate {\n+            export interface EventDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): EventDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface EventDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1458,7 +1587,8 @@ declare module Nethereum {\n             const EventDTOVbTemplate: EventDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.FunctionOutputDTOVbTemplate\n-            export interface FunctionOutputDTOVbTemplate extends CQS.ClassTemplateBase$1<FunctionOutputDTOModel>, Core.IClassTemplate {\n+            export interface FunctionOutputDTOVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): FunctionOutputDTOModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface FunctionOutputDTOVbTemplateTypeFunc extends TypeFunction {\n@@ -1500,7 +1630,8 @@ declare module Nethereum {\n             const ParameterABIFunctionDTOVbTemplate: ParameterABIFunctionDTOVbTemplateTypeFunc;\n \n             // Nethereum.Generators.DTOs.StructTypeVbTemplate\n-            export interface StructTypeVbTemplate extends CQS.ClassTemplateBase$1<StructTypeModel>, Core.IClassTemplate {\n+            export interface StructTypeVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): StructTypeModel;\n                 GetPartialMainClass(): string;\n             }\n             export interface StructTypeVbTemplateTypeFunc extends TypeFunction {\n@@ -1513,15 +1644,15 @@ declare module Nethereum {\n         }\n         module MudService {\n             // Nethereum.Generators.MudService.MudServiceGenerator\n-            export interface MudServiceGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<MudServiceModel>, MudServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface MudServiceGenerator extends Core.ClassGeneratorBase$1<MudServiceModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface MudServiceGeneratorTypeFunc extends TypeFunction {\n                 (): MudServiceGeneratorTypeFunc;\n                 prototype: MudServiceGenerator;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, codeGenLanguage: Core.CodeGenLanguage, mudNamespace?: string): MudServiceGenerator; };\n             }\n             const MudServiceGenerator: MudServiceGeneratorTypeFunc;\n \n@@ -1530,6 +1661,7 @@ declare module Nethereum {\n                 get_ContractABI(): Model.ContractABI;\n                 get_CQSNamespace(): string;\n                 get_FunctionOutputNamespace(): string;\n+                get_SharedTypesNamespace(): string;\n                 get_MudNamespace(): string;\n                 get_ContractDeploymentCQSMessageModel(): CQS.ContractDeploymentCQSMessageModel;\n                 GetResourceClassName(): string;\n@@ -1538,13 +1670,14 @@ declare module Nethereum {\n             export interface MudServiceModelTypeFunc extends TypeFunction {\n                 (): MudServiceModelTypeFunc;\n                 prototype: MudServiceModel;\n-                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, mudNamespace?: string): MudServiceModel;\n-                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, mudNamespace?: string): MudServiceModel; };\n+                new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, mudNamespace?: string): MudServiceModel;\n+                ctor: { new (contractABI: Model.ContractABI, contractName: string, byteCode: string, namespace: string, cqsNamespace: string, functionOutputNamespace: string, sharedTypesNamespace: string, mudNamespace?: string): MudServiceModel; };\n             }\n             const MudServiceModel: MudServiceModelTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceCSharpTemplate\n-            export interface MudServiceCSharpTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n                 GenerateSystemClass(): string;\n             }\n             export interface MudServiceCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1556,7 +1689,8 @@ declare module Nethereum {\n             const MudServiceCSharpTemplate: MudServiceCSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceFSharpTemplate\n-            export interface MudServiceFSharpTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceFSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n             }\n             export interface MudServiceFSharpTemplateTypeFunc extends TypeFunction {\n                 (): MudServiceFSharpTemplateTypeFunc;\n@@ -1567,7 +1701,8 @@ declare module Nethereum {\n             const MudServiceFSharpTemplate: MudServiceFSharpTemplateTypeFunc;\n \n             // Nethereum.Generators.MudService.MudServiceVbTemplate\n-            export interface MudServiceVbTemplate extends CQS.ClassTemplateBase$1<MudServiceModel>, Core.IClassTemplate {\n+            export interface MudServiceVbTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudServiceModel;\n                 GenerateSystemClass(): string;\n             }\n             export interface MudServiceVbTemplateTypeFunc extends TypeFunction {\n@@ -1599,7 +1734,7 @@ declare module Nethereum {\n             const MudTable: MudTableTypeFunc;\n \n             // Nethereum.Generators.MudTable.MudTableGenerator\n-            export interface MudTableGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<MudTableModel>, MudTableModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface MudTableGenerator extends Core.ClassGeneratorBase$1<MudTableModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n             export interface MudTableGeneratorTypeFunc extends TypeFunction {\n@@ -1627,7 +1762,8 @@ declare module Nethereum {\n             const MudTableModel: MudTableModelTypeFunc;\n \n             // Nethereum.Generators.MudTable.MudTableCSharpTemplate\n-            export interface MudTableCSharpTemplate extends CQS.ClassTemplateBase$1<MudTableModel>, Core.IClassTemplate {\n+            export interface MudTableCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): MudTableModel;\n                 GenerateDirectAccessProperties(parameters: Model.ParameterABI[], isKey: boolean, spacing: string): string;\n                 GenerateDirectAccessProperty(parameter: Model.ParameterABI, isKey: boolean, spacing: string): string;\n                 GetBaseConstructor(): string;\n@@ -1644,7 +1780,7 @@ declare module Nethereum {\n         }\n         module Unity {\n             // Nethereum.Generators.Unity.UnityContractFactoryGenerator\n-            export interface UnityContractFactoryGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<UnityContractFactoryModel>, UnityContractFactoryModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface UnityContractFactoryGenerator extends Core.ClassGeneratorBase$1<UnityContractFactoryModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1672,7 +1808,7 @@ declare module Nethereum {\n             const UnityContractFactoryModel: UnityContractFactoryModelTypeFunc;\n \n             // Nethereum.Generators.Unity.UnityRequestsGenerator\n-            export interface UnityRequestsGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<UnityRequestsModel>, UnityRequestsModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface UnityRequestsGenerator extends Core.ClassGeneratorBase$1<UnityRequestsModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1700,7 +1836,8 @@ declare module Nethereum {\n             const UnityRequestsModel: UnityRequestsModelTypeFunc;\n             module CSharp {\n                 // Nethereum.Generators.Unity.CSharp.UnityContractFactoryCSharpTemplate\n-                export interface UnityContractFactoryCSharpTemplate extends CQS.ClassTemplateBase$1<UnityContractFactoryModel>, Core.IClassTemplate {\n+                export interface UnityContractFactoryCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                    get_Model(): UnityContractFactoryModel;\n                     GenerateMethod(functionABI: Model.FunctionABI): string;\n                 }\n                 export interface UnityContractFactoryCSharpTemplateTypeFunc extends TypeFunction {\n@@ -1712,7 +1849,8 @@ declare module Nethereum {\n                 const UnityContractFactoryCSharpTemplate: UnityContractFactoryCSharpTemplateTypeFunc;\n \n                 // Nethereum.Generators.Unity.CSharp.UnityFunctionRequestsCsharpTemplates\n-                export interface UnityFunctionRequestsCsharpTemplates extends CQS.ClassTemplateBase$1<UnityRequestsModel>, Core.IClassTemplate {\n+                export interface UnityFunctionRequestsCsharpTemplates extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                    get_Model(): UnityRequestsModel;\n                     GenerateSingleClass(functionABI: Model.FunctionABI): string;\n                 }\n                 export interface UnityFunctionRequestsCsharpTemplatesTypeFunc extends TypeFunction {\n@@ -1726,7 +1864,7 @@ declare module Nethereum {\n         }\n         module XUnit {\n             // Nethereum.Generators.XUnit.SimpleTestGenerator\n-            export interface SimpleTestGenerator extends Core.ClassGeneratorBase$2<CQS.ClassTemplateBase$1<SimpleTestModel>, SimpleTestModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n+            export interface SimpleTestGenerator extends Core.ClassGeneratorBase$1<SimpleTestModel>, Core.IFileGenerator, Core.IGenerator, Core.IClassGenerator {\n                 get_ContractABI(): Model.ContractABI;\n                 InitialiseTemplate(codeGenLanguage: Core.CodeGenLanguage): void;\n             }\n@@ -1753,7 +1891,8 @@ declare module Nethereum {\n             const SimpleTestModel: SimpleTestModelTypeFunc;\n \n             // Nethereum.Generators.XUnit.SimpleTestCSharpTemplate\n-            export interface SimpleTestCSharpTemplate extends CQS.ClassTemplateBase$1<SimpleTestModel>, Core.IClassTemplate {\n+            export interface SimpleTestCSharpTemplate extends CQS.ClassTemplateBase, Core.IClassTemplate {\n+                get_Model(): SimpleTestModel;\n             }\n             export interface SimpleTestCSharpTemplateTypeFunc extends TypeFunction {\n                 (): SimpleTestCSharpTemplateTypeFunc;"},{"sha":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391","filename":"generators/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.dll","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.dll","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.dll","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.dll?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"72a743e219599af7750c0eab583e077f8c82fef7","filename":"generators/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.js","status":"modified","additions":764,"deletions":218,"changes":982,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"37d75d1d17e4f426baff67fe448ae5c730b4b9b8","filename":"generators/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.js.map","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"5b7e3dff18f5f698260678381236adf16d7b1cb6","filename":"generators/Nethereum.Generators.JavaScript/README.md","status":"modified","additions":273,"deletions":234,"changes":507,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FREADME.md","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2FREADME.md","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2FREADME.md?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,9 +1,9 @@\n+\n # nethereum-codegen\n-The Nethereum code generator provides a simple way to generate the different messages and DTOs classes to integrate with Ethereum smart contracts using Nethereum.\n+The Nethereum code generator provides a simple way to generate messages, DTOs, and services to integrate with Ethereum smart contracts using Nethereum.\n \n # Nethereum Code Generation\n-\n-The nethereum code generator provides different ways to to generate code to interact with smart contracts using Nethereum, including standard class libraries, Unity requests, MUD tables, and services.\n+The `nethereum-codegen` module generates code for interacting with smart contracts, including .NET Standard class libraries, Unity requests, MUD tables and services, and Blazor page services. It supports shared types for reusable events and errors across contracts.\n \n ## Table of Contents\n - [Installation](#installation)\n@@ -17,249 +17,281 @@ The nethereum code generator provides different ways to to generate code to inte\n   - [generateMudService](#generatemudservice)\n   - [generateMudTables](#generatemudtables)\n   - [generateUnityRequests](#generateunityrequests)\n+  - [generateBlazorPageService](#generateblazorpageservice)\n   - [generateFilesFromConfigJsonString](#generatefilesfromconfigjsonstring)\n   - [GeneratorType Enum](#generatortype-enum)\n   - [GeneratorConfig Interface](#generatorconfig-interface)\n   - [GeneratorSetConfig Interface](#generatorsetconfig-interface)\n \n-## Installation\n-\n-To install the module, use npm or yarn:\n+## Installation <a id=\"installation\"></a>\n+Install the module using npm or yarn:\n \n ```bash\n npm install nethereum-codegen\n ```\n \n or\n-\n ```bash\n yarn add nethereum-codegen\n ```\n \n-## Usage\n-\n-### Basic Example\n-\n+## Usage <a id=\"usage\"></a>\n+### Basic Example <a id=\"basic-example\"></a>\n ```javascript\n var codegen = require('nethereum-codegen');\n \n var contractByteCode = \"0x00\";\n-var abierc20 = '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},...]';  // truncated for brevity\n+var abierc20 = '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},...]'; // truncated for brevity\n var abi = abierc20;\n var contractName = \"ERC20\";\n var baseNamespace = \"Nethereum.Unity.Contracts.Standards\";\n+var sharedTypesNamespace = \"SharedTypes\";\n+var sharedTypes = [\"events\", \"errors\"];\n var basePath = \"codeGenNodeTest\";\n-\n var mudTables = '{\"tables\":{\"Counter\":{\"schema\":{\"value\":\"uint32\"},\"key\":[]},\"Item\":{\"schema\":{\"id\":\"uint32\",\"price\":\"uint32\",\"name\":\"string\",\"description\":\"string\",\"owner\":\"string\"},\"key\":[\"id\"]}}}';\n-\n var projectName = \"MyProject\";\n \n // Generating a .NET Standard class library\n codegen.generateNetStandardClassLibrary(projectName, basePath, 0);\n \n-// Generating all classes\n-codegen.generateAllClasses(abi, contractByteCode, contractName, baseNamespace, basePath, 0);\n+// Generating all classes with shared types\n+codegen.generateAllClasses(abi, contractByteCode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, basePath, 0);\n \n // Generating Unity requests\n-codegen.generateUnityRequests(abi, contractByteCode, contractName, baseNamespace, basePath);\n+codegen.generateUnityRequests(abi, contractByteCode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, basePath);\n \n // Generating MUD tables\n codegen.generateMudTables(mudTables, baseNamespace, \"Tables\", basePath, 0, \"\");\n \n // Generating MUD service\n-codegen.generateMudService(abi, contractByteCode, contractName, baseNamespace, basePath, 0, \"\");\n-```\n+codegen.generateMudService(abi, contractByteCode, contractName, baseNamespace, basePath, sharedTypesNamespace, sharedTypes, 0, \"\");\n \n+// Generating Blazor page service\n+codegen.generateBlazorPageService(abi, contractName, baseNamespace, basePath, sharedTypesNamespace, 0);\n+```\n \n-### Generating Files from Configuration File\n-\n-You can generate files using a JSON configuration file or string:\n-\n-#### Using a JSON Configuration String\n+### Generating Files from Configuration <a id=\"generating-files-from-configuration\"></a>\n+Generate files using a JSON configuration file or string:\n \n+#### Using a JSON Configuration String <a id=\"using-a-json-configuration-string\"></a>\n ```javascript\n-var jsonGeneratorSetsExample1 = \n-`[\n-    {\n-        \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"UnityRequest\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"MudExtendedService\",\n-                \"mudNamespace\": \"MyWorld\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"mudSingleNamespace/mud.config.ts\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Tables\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Tables\",\n-                \"generatorType\": \"MudTables\",\n-                \"mudNamespace\": \"MyWorld\"\n-            }\n-        ]\n-    }\n+var jsonGeneratorSetsExample1 = `[\n+  {\n+    \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Blazor\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"generatorType\": \"BlazorPageService\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"UnityRequest\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\",\n+        \"mudNamespace\": \"MyWorld\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"MudExtendedService\",\n+        \"mudNamespace\": \"MyWorld\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"mudSingleNamespace/mud.config.ts\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Tables\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Tables\",\n+        \"generatorType\": \"MudTables\",\n+        \"mudNamespace\": \"MyWorld\"\n+      }\n+    ]\n+  }\n ]`;\n \n codegen.generateFilesFromConfigJsonString(jsonGeneratorSetsExample1, \"examples/testAbi\");\n ```\n \n-#### Using a JSON Configuration File\n-\n+#### Using a JSON Configuration File <a id=\"using-a-json-configuration-file\"></a>\n ```javascript\n codegen.generateFilesFromConfigJsonFile(\"path/to/config.json\", \"examples/testAbi\");\n ```\n \n-## Configuration Examples\n-\n-### JSON Configuration Example 1\n-\n+## Configuration Examples <a id=\"configuration-examples\"></a>\n+### JSON Configuration Example 1 <a id=\"json-configuration-example-1\"></a>\n ```json\n [\n-    {\n-        \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"UnityRequest\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"MudExtendedService\",\n-                \"mudNamespace\": \"MyWorld\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"mudSingleNamespace/mud.config.ts\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld.Tables\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts.MyWorld.Tables\",\n-                \"generatorType\": \"MudTables\",\n-                \"mudNamespace\": \"MyWorld\"\n-            }\n-        ]\n-    }\n+  {\n+    \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Blazor\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"BlazorPageService\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"UnityRequest\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\",\n+        \"mudNamespace\": \"MyWorld\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"MudExtendedService\",\n+        \"mudNamespace\": \"MyWorld\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"mudSingleNamespace/mud.config.ts\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld.Tables\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Tables\",\n+        \"generatorType\": \"MudTables\",\n+        \"mudNamespace\": \"MyWorld\"\n+      }\n+    ]\n+  }\n ]\n ```\n \n-### JSON Configuration Example 2\n-\n+### JSON Configuration Example 2 <a id=\"json-configuration-example-2\"></a>\n ```json\n [\n-    {\n-        \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"UnityRequest\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts.MyWorld1.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"ContractDefinition\"\n-            },\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Systems\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts.MyWorld1.Systems\",\n-                \"codeGenLang\": 0,\n-                \"generatorType\": \"MudExtendedService\",\n-                \"mudNamespace\": \"myworld1\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"mudMultipleNamespace/mud.config.ts\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Tables\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts.MyWorld1.Tables\",\n-                \"generatorType\": \"MudTables\",\n-                \"mudNamespace\": \"myworld1\"\n-            }\n-        ]\n-    },\n-    {\n-        \"paths\": [\"mudMultipleNamespace/mud.config.ts\"],\n-        \"generatorConfigs\": [\n-            {\n-                \"baseNamespace\": \"MyProject.Contracts.MyWorld2.Tables\",\n-                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts.MyWorld2.Tables\",\n-                \"generatorType\": \"MudTables\",\n-                \"mudNamespace\": \"myworld2\"\n-            }\n-        ]\n-    }\n+  {\n+    \"paths\": [\"out/ERC20.sol/Standard_Token.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"UnityRequest\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"out/IncrementSystem.sol/IncrementSystem.json\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/MyWorld1/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"ContractDefinition\",\n+        \"mudNamespace\": \"myworld1\"\n+      },\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Systems\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/MyWorld1/Systems\",\n+        \"codeGenLang\": 0,\n+        \"sharedTypesNamespace\": \"SharedTypes\",\n+        \"sharedTypes\": [\"events\", \"errors\"],\n+        \"generatorType\": \"MudExtendedService\",\n+        \"mudNamespace\": \"myworld1\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"mudMultipleNamespace/mud.config.ts\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld1.Tables\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/MyWorld1/Tables\",\n+        \"generatorType\": \"MudTables\",\n+        \"mudNamespace\": \"myworld1\"\n+      }\n+    ]\n+  },\n+  {\n+    \"paths\": [\"mudMultipleNamespace/mud.config.ts\"],\n+    \"generatorConfigs\": [\n+      {\n+        \"baseNamespace\": \"MyProject.Contracts.MyWorld2.Tables\",\n+        \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/MyWorld2/Tables\",\n+        \"generatorType\": \"MudTables\",\n+        \"mudNamespace\": \"myworld2\"\n+      }\n+    ]\n+  }\n ]\n ```\n \n-## API\n-\n-### generateNetStandardClassLibrary\n-\n+## API <a id=\"api\"></a>\n+### generateNetStandardClassLibrary <a id=\"generatenetstandardclasslibrary\"></a>\n Generates a .NET Standard class library.\n \n #### Parameters\n@@ -268,50 +300,49 @@ Generates a .NET Standard class library.\n - `codeLang` (number): The programming language (0 for C#, 1 for VB, 3 for F#).\n \n #### Example\n-\n ```javascript\n codegen.generateNetStandardClassLibrary(\"MyProject\", \"codeGenNodeTest\", 0);\n ```\n \n-### generateAllClasses\n-\n-Generates all classes for a smart contract.\n+### generateAllClasses <a id=\"generateallclasses\"></a>\n+Generates all classes for a smart contract, supporting shared types.\n \n #### Parameters\n - `abi` (string): The ABI of the contract.\n - `byteCode` (string): The bytecode of the contract.\n - `contractName` (string): The name of the contract.\n - `baseNamespace` (string): The base namespace for the generated code.\n+- `sharedTypesNamespace` (string): The namespace for shared types (e.g., events, errors).\n+- `sharedTypes` (string[]): List of shared types to include (e.g., `[\"events\", \"errors\"]`).\n - `basePath` (string): The base path where the code will be generated.\n - `codeGenLang` (number): The programming language (0 for C#, 1 for VB, 3 for F#).\n+- `mudNamespace` (string, optional): The MUD namespace.\n \n #### Example\n-\n ```javascript\n-codegen.generateAllClasses(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"codeGenNodeTest\", 0);\n+codegen.generateAllClasses(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"SharedTypes\", [\"events\", \"errors\"], \"codeGenNodeTest\", 0);\n ```\n \n-### generateMudService\n-\n-Generates a MUD service for a smart contract.\n+### generateMudService <a id=\"generatemudservice\"></a>\n+Generates a MUD service for a smart contract, supporting shared types.\n \n #### Parameters\n - `abi` (string): The ABI of the contract.\n - `byteCode` (string): The bytecode of the contract.\n - `contractName` (string): The name of the contract.\n - `baseNamespace` (string): The base namespace for the generated code.\n - `basePath` (string): The base path where the code will be generated.\n+- `sharedTypesNamespace` (string): The namespace for shared types.\n+- `sharedTypes` (string[]): List of shared types to include.\n - `codeGenLang` (number): The programming language (0 for C#, 1 for VB, 3 for F#).\n - `mudNamespace` (string): The MUD namespace.\n \n #### Example\n-\n ```javascript\n-codegen.generateMudService(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"codeGenNodeTest\", 0, \"\");\n+codegen.generateMudService(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"codeGenNodeTest\", \"SharedTypes\", [\"events\", \"errors\"], 0, \"\");\n ```\n \n-### generateMudTables\n-\n+### generateMudTables <a id=\"generatemudtables\"></a>\n Generates MUD tables from a JSON configuration.\n \n #### Parameters\n@@ -323,82 +354,90 @@ Generates MUD tables from a JSON configuration.\n - `mudNamespace` (string): The MUD namespace.\n \n #### Example\n-\n ```javascript\n var mudTables = '{\"tables\":{\"Counter\":{\"schema\":{\"value\":\"uint32\"},\"key\":[]},\"Item\":{\"schema\":{\"id\":\"uint32\",\"price\":\"uint32\",\"name\":\"string\",\"description\":\"string\",\"owner\":\"string\"},\"key\":[\"id\"]}}}';\n codegen.generateMudTables(mudTables, \"Nethereum.Unity.Contracts.Standards\", \"Tables\", \"codeGenNodeTest\", 0, \"\");\n ```\n \n-### generateUnityRequests\n-\n-Generates Unity requests for a smart contract.\n+### generateUnityRequests <a id=\"generateunityrequests\"></a>\n+Generates Unity requests for a smart contract, supporting shared types.\n \n #### Parameters\n - `abi` (string): The ABI of the contract.\n - `byteCode` (string): The bytecode of the contract.\n - `contractName` (string): The name of the contract.\n - `baseNamespace` (string): The base namespace for the generated code.\n+- `sharedTypesNamespace` (string): The namespace for shared types.\n+- `sharedTypes` (string[]): List of shared types to include.\n - `basePath` (string): The base path where the code will be generated.\n \n #### Example\n-\n ```javascript\n-codegen.generateUnityRequests(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"codeGenNodeTest\");\n+codegen.generateUnityRequests(abi, contractByteCode, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"SharedTypes\", [\"events\", \"errors\"], \"codeGenNodeTest\");\n ```\n \n-### generateFilesFromConfigJsonString\n+### generateBlazorPageService <a id=\"generateblazorpageservice\"></a>\n+Generates a Blazor page service for a smart contract, supporting shared types.\n+\n+#### Parameters\n+- `abi` (string): The ABI of the contract.\n+- `contractName` (string): The name of the contract.\n+- `baseNamespace` (string): The base namespace for the generated code.\n+- `basePath` (string): The base path where the code will be generated.\n+- `sharedTypesNamespace` (string): The namespace for shared types.\n+- `codeGenLang` (number): The programming language (0 for C#) It will default / to c# razor.\n \n+#### Example\n+```javascript\n+codegen.generateBlazorPageService(abi, \"ERC20\", \"Nethereum.Unity.Contracts.Standards\", \"codeGenNodeTest\", \"SharedTypes\", 0);\n+```\n+\n+### generateFilesFromConfigJsonString <a id=\"generatefilesfromconfigjsonstring\"></a>\n Generates files from a JSON configuration string.\n \n #### Parameters\n - `configJson` (string): The JSON configuration string.\n - `rootPath` (string): The root path for the configurations.\n \n #### Example\n-\n ```javascript\n-var jsonConfig = '[...]';  // your JSON configuration\n+var jsonConfig = '[...]'; // your JSON configuration\n codegen.generateFilesFromConfigJsonString(jsonConfig, \"examples/testAbi\");\n ```\n \n-### GeneratorType Enum\n-\n+### GeneratorType Enum <a id=\"generatortype-enum\"></a>\n Enum for specifying the generator type.\n-\n ```typescript\n export enum GeneratorType {\n-    ContractDefinition = \"ContractDefinition\",\n-    UnityRequest = \"UnityRequest\",\n-    MudExtendedService = \"MudExtendedService\",\n-    MudTables = \"MudTables\",\n-    NetStandardLibrary = \"NetStandardLibrary\"\n+  ContractDefinition = \"ContractDefinition\",\n+  UnityRequest = \"UnityRequest\",\n+  MudExtendedService = \"MudExtendedService\",\n+  MudTables = \"MudTables\",\n+  NetStandardLibrary = \"NetStandardLibrary\",\n+  BlazorPageService = \"BlazorPageService\"\n }\n ```\n \n-### GeneratorConfig Interface\n-\n-Interface for a generator configuration.\n-\n+### GeneratorConfig Interface <a id=\"generatorconfig-interface\"></a>\n+Interface for a generator configuration, including shared types support.\n ```typescript\n export interface GeneratorConfig {\n-    baseNamespace: string;\n-    codeGenLang: number;\n-    basePath: string;\n-    generatorType: GeneratorType;\n-    mudNamespace: string;\n+  baseNamespace: string;\n+  codeGenLang: number;\n+  basePath: string;\n+  sharedTypesNamespace: string;\n+  sharedTypes: string[];\n+  generatorType: GeneratorType;\n+  mudNamespace: string;\n }\n ```\n \n-### GeneratorSetConfig Interface\n-\n+### GeneratorSetConfig Interface <a id=\"generatorsetconfig-interface\"></a>\n Interface for a generator set configuration.\n-\n ```typescript\n export interface GeneratorSetConfig {\n-    paths: string[];\n-    default: boolean;\n-    generatorConfigs: GeneratorConfig[];\n+  paths: string[];\n+  default: boolean;\n+  generatorConfigs: GeneratorConfig[];\n }\n ```\n-\n-"},{"sha":"e04aeebb55535813ef86025ed61eaa22aec70c5f","filename":"generators/Nethereum.Generators.JavaScript/app.js","status":"modified","additions":38,"deletions":17,"changes":55,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.js","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.js","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fapp.js?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,32 +1,32 @@\n \"use strict\";\n Object.defineProperty(exports, \"__esModule\", { value: true });\n-exports.GeneratorType = exports.generateFilesFromConfigJsonString = exports.generateFilesFromConfigJsonFile = exports.generateFilesFromConfigSetsArray = exports.generateFilesFromGeneratorConfigs = exports.generateUnityRequests = exports.generateMudTables = exports.generateMudService = exports.generateAllClasses = exports.generateNetStandardClassLibrary = void 0;\n+exports.generateBlazorPageService = exports.GeneratorType = exports.generateFilesFromConfigJsonString = exports.generateFilesFromConfigJsonFile = exports.generateFilesFromConfigSetsArray = exports.generateFilesFromGeneratorConfigs = exports.generateUnityRequests = exports.generateMudTables = exports.generateMudService = exports.generateAllClasses = exports.generateNetStandardClassLibrary = void 0;\n const fs = require(\"fs\");\n const path = require(\"path\");\n const fsex = require(\"fs-extra\");\n const abiDes = require(\"./AbiDeserialiser\");\n const mudParse = require(\"./MudWorldParser\");\n var n = require('./Nethereum.Generators.DuoCode.js');\n-function generateAllClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang, mudNamespace = null) {\n+function generateAllClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang, mudNamespace = null) {\n     var contractDes = abiDes.buildContract(abi);\n-    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang);\n+    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang);\n     classGenerator.set_AddRootNamespaceOnVbProjectsToImportStatements(false);\n     if (mudNamespace !== null && mudNamespace !== undefined && mudNamespace !== '') {\n         classGenerator.set_MudNamespace(mudNamespace);\n     }\n     var generatedClases = classGenerator.GenerateAllMessagesFileAndService();\n     return outputFiles(generatedClases);\n }\n-function generateMudServiceInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang, mudNamespace) {\n+function generateMudServiceInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang, mudNamespace) {\n     var contractDes = abiDes.buildContract(abi);\n-    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang);\n+    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang);\n     classGenerator.set_AddRootNamespaceOnVbProjectsToImportStatements(false);\n     var generatedClases = classGenerator.GenerateMudService(mudNamespace);\n     return outputFiles([generatedClases]);\n }\n-function generateAllUnityClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator) {\n+function generateAllUnityClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator) {\n     var contractDes = abiDes.buildContract(abi);\n-    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, 0);\n+    var classGenerator = new Nethereum.Generators.ContractProjectGenerator(contractDes, contractName, byteCode, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, 0);\n     var generatedClases = classGenerator.GenerateAllUnity();\n     return outputFiles(generatedClases);\n }\n@@ -60,36 +60,36 @@ function generateNetStandardClassLibrary(projectName, basePath, codeLang) {\n     return outputFile(generatedProject);\n }\n exports.generateNetStandardClassLibrary = generateNetStandardClassLibrary;\n-function generateAllClasses(abi, byteCode, contractName, baseNamespace, basePath, codeGenLang, mudNamespace = null) {\n+function generateAllClasses(abi, byteCode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, basePath, codeGenLang, mudNamespace = null) {\n     var serviceNamespace = contractName;\n     //Same, we are generating single file\n     var cqsNamespace = contractName + \".ContractDefinition\";\n     var dtoNamespace = contractName + \".ContractDefinition\";\n     var pathSeparator = path.sep;\n-    return generateAllClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang, mudNamespace);\n+    return generateAllClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang, mudNamespace);\n }\n exports.generateAllClasses = generateAllClasses;\n-function generateMudService(abi, byteCode, contractName, baseNamespace, basePath, codeGenLang, mudNamespace) {\n+function generateMudService(abi, byteCode, contractName, baseNamespace, basePath, sharedTypesNamespace, sharedTypes, codeGenLang, mudNamespace) {\n     var serviceNamespace = contractName;\n     //Same, we are generating single file\n     var cqsNamespace = contractName + \".ContractDefinition\";\n     var dtoNamespace = contractName + \".ContractDefinition\";\n     var pathSeparator = path.sep;\n-    return generateMudServiceInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator, codeGenLang, mudNamespace);\n+    return generateMudServiceInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator, codeGenLang, mudNamespace);\n }\n exports.generateMudService = generateMudService;\n function generateMudTables(json, baseNamespace, namespace, basePath, codeGenLang, mudNamespace) {\n     var pathSeparator = path.sep;\n     return generateAllMudTablesInternal(json, baseNamespace, namespace, basePath, pathSeparator, codeGenLang, mudNamespace);\n }\n exports.generateMudTables = generateMudTables;\n-function generateUnityRequests(abi, byteCode, contractName, baseNamespace, basePath) {\n+function generateUnityRequests(abi, byteCode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, basePath) {\n     var serviceNamespace = contractName;\n     //Same, we are generating single file\n     var cqsNamespace = contractName + \".ContractDefinition\";\n     var dtoNamespace = contractName + \".ContractDefinition\";\n     var pathSeparator = path.sep;\n-    return generateAllUnityClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, basePath, pathSeparator);\n+    return generateAllUnityClassesInternal(abi, byteCode, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, sharedTypes, basePath, pathSeparator);\n }\n exports.generateUnityRequests = generateUnityRequests;\n function extractAbiAndBytecode(fileName) {\n@@ -139,29 +139,34 @@ function applyDefaults(config) {\n         baseNamespace: config.baseNamespace || \"\",\n         codeGenLang: config.codeGenLang ?? 0,\n         basePath: config.basePath,\n+        sharedTypesNamespace: config.sharedTypesNamespace || \"\",\n+        sharedTypes: config.sharedTypes || [],\n         generatorType: config.generatorType,\n         mudNamespace: config.mudNamespace || \"\"\n     };\n }\n function generateFilesUsingConfig(generatorConfig, fileName, root) {\n-    const { baseNamespace, codeGenLang, basePath, generatorType, mudNamespace } = applyDefaults(generatorConfig);\n+    const { baseNamespace, codeGenLang, basePath, generatorType, sharedTypesNamespace, sharedTypes, mudNamespace } = applyDefaults(generatorConfig);\n     const absolutePath = path.resolve(root, basePath);\n     var files = [];\n     if (!fileName.endsWith('mud.config.ts')) {\n         const { abi, bytecode, contractName } = extractAbiAndBytecode(fileName);\n         switch (generatorType) {\n             case GeneratorType.ContractDefinition:\n-                files = generateAllClasses(abi, bytecode, contractName, baseNamespace, absolutePath, codeGenLang, mudNamespace);\n+                files = generateAllClasses(abi, bytecode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, absolutePath, codeGenLang, mudNamespace);\n                 break;\n             case GeneratorType.UnityRequest:\n-                files = generateUnityRequests(abi, bytecode, contractName, baseNamespace, absolutePath);\n+                files = generateUnityRequests(abi, bytecode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, absolutePath);\n                 break;\n             case GeneratorType.MudExtendedService:\n-                files = generateMudService(abi, bytecode, contractName, baseNamespace, absolutePath, codeGenLang, mudNamespace);\n+                files = generateMudService(abi, bytecode, contractName, baseNamespace, absolutePath, sharedTypesNamespace, sharedTypes, codeGenLang, mudNamespace);\n                 break;\n             case GeneratorType.NetStandardLibrary:\n                 files = [generateNetStandardClassLibrary(contractName, absolutePath, codeGenLang)];\n                 break;\n+            case GeneratorType.BlazorPageService:\n+                files = [generateBlazorPageService(abi, contractName, baseNamespace, absolutePath, sharedTypesNamespace, codeGenLang)];\n+                break;\n             default:\n                 throw new Error(\"Unknown GeneratorType: \" + generatorType);\n         }\n@@ -215,5 +220,21 @@ var GeneratorType;\n     GeneratorType[\"MudExtendedService\"] = \"MudExtendedService\";\n     GeneratorType[\"MudTables\"] = \"MudTables\";\n     GeneratorType[\"NetStandardLibrary\"] = \"NetStandardLibrary\";\n+    GeneratorType[\"BlazorPageService\"] = \"BlazorPageService\";\n })(GeneratorType || (exports.GeneratorType = GeneratorType = {}));\n+function generateBlazorPageService(abi, contractName, baseNamespace, absolutePath, sharedTypesNamespace, codeGenLang) {\n+    var serviceNamespace = contractName;\n+    //Same, we are generating single file\n+    var cqsNamespace = contractName + \".ContractDefinition\";\n+    var dtoNamespace = contractName + \".ContractDefinition\";\n+    var pathSeparator = path.sep;\n+    return generateBlazorPageServiceInternal(abi, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, absolutePath, pathSeparator, codeGenLang);\n+}\n+exports.generateBlazorPageService = generateBlazorPageService;\n+function generateBlazorPageServiceInternal(abi, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, basePath, pathSeparator, codeGenLang) {\n+    var contractDes = abiDes.buildContract(abi);\n+    var classGenerator = new Nethereum.Generators.BlazorPagesGenerator(contractDes, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, codeGenLang, basePath, pathSeparator, \"\");\n+    var generatedClass = classGenerator.GenerateFile();\n+    return outputFile(generatedClass);\n+}\n //# sourceMappingURL=app.js.map\n\\ No newline at end of file"},{"sha":"f4d22d106cff58fc6875325ad811eb8913e6e213","filename":"generators/Nethereum.Generators.JavaScript/app.js.map","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.js.map","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.js.map","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fapp.js.map?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1 +1 @@\n-{\"version\":3,\"file\":\"app.js\",\"sourceRoot\":\"\",\"sources\":[\"app.ts\"],\"names\":[],\"mappings\":\";;;AAAA,yBAAyB;AACzB,6BAA6B;AAC7B,iCAAiC;AACjC,4CAA2C;AAC3C,6CAA6C;AAE7C,IAAI,CAAC,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAEpD,SAAS,0BAA0B,CAAC,GAAW,EAAE,QAAgB,EAC9D,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,eAAuB,IAAI;IAE3B,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,EACZ,WAAW,CAAC,CAAC;IAEjB,cAAc,CAAC,kDAAkD,CAAC,KAAK,CAAC,CAAC;IACzE,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,EAAE,EAAE;QAC5E,cAAc,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;KACjD;IACF,IAAI,eAAe,GAAG,cAAc,CAAC,iCAAiC,EAAE,CAAC;IACzE,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,0BAA0B,CAAC,GAAW,EAAE,QAAgB,EAC7D,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,YAAoB;IAEpB,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,WAAW,CACV,CAAC;IAEN,cAAc,CAAC,kDAAkD,CAAC,KAAK,CAAC,CAAC;IACzE,IAAI,eAAe,GAAG,cAAc,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;IACtE,OAAO,WAAW,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,CAAC;AAGD,SAAS,+BAA+B,CAAC,GAAW,EAAE,QAAgB,EAClE,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,QAAgB,EAChB,aAAqB;IAErB,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,CAAC,CAAC,CAAC;IACH,IAAI,eAAe,GAAG,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzD,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,4BAA4B,CAAC,IAAY,EAAE,aAAqB,EACrE,SAAiB,EACjB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,YAAoB;IACpB,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACvB,CAAC,CAAC,gBAAgB,EAAE,KAAK,YAAY;QACrC,CAAC,CAAC,YAAY,KAAK,EAAE,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,gBAAgB,EAAE,KAAK,SAAS,IAAI,YAAY,KAAK,EAAE,CAAC,CAAC,CACjL,CAAC;IACF,IAAI,iBAAiB,GACjB,IAAI,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IACxH,IAAI,eAAe,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;IAC5D,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,WAAW,CAAC,cAAyD;IAC1E,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAS,UAAU,CAAC,aAAsD;IAEtE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACrD,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,EAAE,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;IAEzF,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACzB,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KAC3B;IACD,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC9D,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,SAAiB,+BAA+B,CAAC,WAAmB,EAAE,QAAgB,EAAE,QAAa;IACjG,IAAI,gBAAgB,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,2BAA2B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnG,IAAI,gBAAgB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACvE,OAAO,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACvC,CAAC;AAJD,0EAIC;AAED,SAAgB,kBAAkB,CAAC,GAAW,EAAE,QAAgB,EAC5D,YAAoB,EACpB,aAAqB,EACrB,QAAgB,EAChB,WAAgB,EAChB,eAAuB,IAAI;IAG3B,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,0BAA0B,CAAC,GAAG,EACjC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,WAAW,EACX,YAAY,CAAC,CAAC;AACtB,CAAC;AAxBD,gDAwBC;AAED,SAAgB,kBAAkB,CAAC,GAAW,EAAE,QAAgB,EAC5D,YAAoB,EACpB,aAAqB,EACrB,QAAgB,EAChB,WAAgB,EAChB,YAAoB;IAGpB,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,0BAA0B,CAAC,GAAG,EACjC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,WAAW,EACX,YAAY,CAAC,CAAC;AACtB,CAAC;AAxBD,gDAwBC;AAED,SAAgB,iBAAiB,CAAC,IAAY,EAAE,aAAqB,EACjE,SAAiB,EACjB,QAAgB,EAChB,WAAgB,EAChB,YAAoB;IAEpB,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC9B,OAAO,4BAA4B,CAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAC3H,CAAC;AARD,8CAQC;AAED,SAAgB,qBAAqB,CAAC,GAAW,EAAE,QAAgB,EAC/D,YAAoB,EACpB,aAAqB,EACrB,QAAgB;IAGhB,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,+BAA+B,CAAC,GAAG,EACtC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,QAAQ,EACR,aAAa,CACZ,CAAC;AACV,CAAC;AArBD,sDAqBC;AAED,SAAS,qBAAqB,CAAC,QAAgB;IAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5C,MAAM,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC;IACzC,IAAI,iBAAiB,CAAC;IACtB,IAAI,GAAG,GAAG,SAAS,CAAC;IACpB,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,cAAc,CAAC,GAAG,KAAK,MAAM,EAAE;QAC/B,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACxC,iBAAiB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QACvE,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACxB,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAC/C;KACJ;SAAM;QACH,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAClE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC5C,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7C,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;SACzC;KACJ;IACD,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;AAC3C,CAAC;AAGD,SAAS,qBAAqB,CAAC,cAAsB;IACjD,MAAM,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAE9D,mEAAmE;IACnE,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACpE,IAAI,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;QAC3B,MAAM,iBAAiB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAE9C,wCAAwC;QACxC,MAAM,YAAY,GAAG,CAAC,OAAe,EAAE,EAAE;YACrC,OAAO,CAAC,IAAI,QAAQ,CAAC,UAAU,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC,CAAC;QAEF,MAAM,WAAW,GAAG,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAEpD,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE;YAChF,qCAAqC;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACtC;KACJ;IAED,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;AACjE,CAAC;AAED,SAAS,aAAa,CAAC,MAAuB;IAC1C,OAAO;QACH,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,EAAE;QACzC,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,CAAC;QACpC,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,aAAa,EAAE,MAAM,CAAC,aAAa;QACnC,YAAY,EAAE,MAAM,CAAC,YAAY,IAAI,EAAE;KAC1C,CAAC;AACN,CAAC;AAED,SAAS,wBAAwB,CAAC,eAAgC,EAAE,QAAgB,EAAE,IAAY;IAC9F,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,YAAY,EAAE,GAAG,aAAa,CAAC,eAAe,CAAC,CAAC;IAC7G,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClD,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;QACrC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACxE,QAAQ,aAAa,EAAE;YACnB,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,kBAAkB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAChH,MAAM;YACV,KAAK,aAAa,CAAC,YAAY;gBAC3B,KAAK,GAAG,qBAAqB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;gBACxF,MAAM;YACV,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,kBAAkB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAChH,MAAM;YACV,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,CAAC,+BAA+B,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAE,CAAC;gBACpF,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,aAAa,CAAC,CAAC;SAClE;KACJ;SAAM;QACH,QAAQ,aAAa,EAAE;YACnB,KAAK,aAAa,CAAC,SAAS;gBACxB,MAAM,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBACrD,KAAK,GAAG,iBAAiB,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBACpG,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,aAAa,CAAC,CAAC;SAClE;KACJ;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAgB,iCAAiC,CAAC,gBAAmC,EAAE,QAAgB,EAAE,WAAmB,EAAE;IAC1H,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,gBAAgB,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;QACvC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,wBAAwB,CAAC,eAAe,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC;AAND,8EAMC;AAED,SAAgB,gCAAgC,CAAC,eAAqC,EAAE,QAAgB;IACpG,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAChC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACnC,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAE1D,MAAM,IAAI,GAAG,iCAAiC,CAAC,SAAS,CAAC,gBAAgB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;YACnG,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC;AAXD,4EAWC;AAED,SAAgB,+BAA+B,CAAC,cAAsB,EAAE,QAAgB;IACpF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAyB,CAAC;IACpG,OAAO,gCAAgC,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAHD,0EAGC;AAED,SAAgB,iCAAiC,CAAC,UAAkB,EAAE,QAAgB;IAClF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAyB,CAAC;IACvE,OAAO,gCAAgC,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAHD,8EAGC;AAED,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,0DAAyC,CAAA;IACzC,8CAA6B,CAAA;IAC7B,0DAAyC,CAAA;IACzC,wCAAuB,CAAA;IACvB,0DAAyC,CAAA;AAC7C,CAAC,EANW,aAAa,6BAAb,aAAa,QAMxB\"}\n\\ No newline at end of file\n+{\"version\":3,\"file\":\"app.js\",\"sourceRoot\":\"\",\"sources\":[\"app.ts\"],\"names\":[],\"mappings\":\";;;AAAA,yBAAyB;AACzB,6BAA6B;AAC7B,iCAAiC;AACjC,4CAA2C;AAC3C,6CAA6C;AAE7C,IAAI,CAAC,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;AAEpD,SAAS,0BAA0B,CAAC,GAAW,EAAE,QAAgB,EAC9D,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,oBAA4B,EAC5B,WAAqB,EACrB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,eAAuB,IAAI;IAE3B,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,WAAW,CAAC,CAAC;IAEhB,cAAc,CAAC,kDAAkD,CAAC,KAAK,CAAC,CAAC;IACzE,IAAI,YAAY,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,EAAE,EAAE;QAC5E,cAAc,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;KACjD;IACF,IAAI,eAAe,GAAG,cAAc,CAAC,iCAAiC,EAAE,CAAC;IACzE,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,0BAA0B,CAAC,GAAW,EAAE,QAAgB,EAC7D,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,oBAA4B,EAC5B,WAAqB,EACrB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,YAAoB;IAEpB,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,WAAW,CACV,CAAC;IAEN,cAAc,CAAC,kDAAkD,CAAC,KAAK,CAAC,CAAC;IACzE,IAAI,eAAe,GAAG,cAAc,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;IACtE,OAAO,WAAW,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;AAC1C,CAAC;AAGD,SAAS,+BAA+B,CAAC,GAAW,EAAE,QAAgB,EAClE,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,oBAA4B,EAC5B,WAAqB,EACrB,QAAgB,EAChB,aAAqB;IAErB,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,wBAAwB,CAAC,WAAW,EAC9E,YAAY,EACZ,QAAQ,EACR,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,CAAC,CAAC,CAAC;IACH,IAAI,eAAe,GAAG,cAAc,CAAC,gBAAgB,EAAE,CAAC;IACzD,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AAC3C,CAAC;AAED,SAAS,4BAA4B,CAAC,IAAY,EAAE,aAAqB,EACrE,SAAiB,EACjB,QAAgB,EAChB,aAAqB,EACrB,WAAgB,EAChB,YAAoB;IACpB,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC1C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CACvB,CAAC,CAAC,gBAAgB,EAAE,KAAK,YAAY;QACrC,CAAC,CAAC,YAAY,KAAK,EAAE,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,gBAAgB,EAAE,KAAK,SAAS,IAAI,YAAY,KAAK,EAAE,CAAC,CAAC,CACjL,CAAC;IACF,IAAI,iBAAiB,GACjB,IAAI,SAAS,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;IACxH,IAAI,eAAe,GAAG,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;IAC5D,OAAO,WAAW,CAAC,eAAe,CAAC,CAAC;AACxC,CAAC;AAED,SAAS,WAAW,CAAC,cAAyD;IAC1E,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7C;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAS,UAAU,CAAC,aAAsD;IAEtE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;IACrD,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,EAAE,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;IAEzF,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;QACzB,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KAC3B;IACD,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,aAAa,CAAC,iBAAiB,EAAE,CAAC,CAAC;IAC9D,OAAO,QAAQ,CAAC;AACpB,CAAC;AAED,SAAiB,+BAA+B,CAAC,WAAmB,EAAE,QAAgB,EAAE,QAAa;IACjG,IAAI,gBAAgB,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,2BAA2B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACnG,IAAI,gBAAgB,GAAG,gBAAgB,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;IACvE,OAAO,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACvC,CAAC;AAJD,0EAIC;AAED,SAAgB,kBAAkB,CAAC,GAAW,EAAE,QAAgB,EAC5D,YAAoB,EACpB,aAAqB,EACrB,oBAA4B,EAC5B,WAAqB,EACrB,QAAgB,EAChB,WAAgB,EAChB,eAAuB,IAAI;IAG3B,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,0BAA0B,CAAC,GAAG,EACjC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,WAAW,EACX,YAAY,CAAC,CAAC;AACtB,CAAC;AA5BD,gDA4BC;AAED,SAAgB,kBAAkB,CAAC,GAAW,EAAE,QAAgB,EAC5D,YAAoB,EACpB,aAAqB,EACrB,QAAgB,EAChB,oBAA4B,EAC5B,WAAqB,EACrB,WAAgB,EAChB,YAAoB;IAGpB,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,0BAA0B,CAAC,GAAG,EACjC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,WAAW,EACX,YAAY,CAAC,CAAC;AACtB,CAAC;AA5BD,gDA4BC;AAED,SAAgB,iBAAiB,CAAC,IAAY,EAAE,aAAqB,EACjE,SAAiB,EACjB,QAAgB,EAChB,WAAgB,EAChB,YAAoB;IAEpB,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC9B,OAAO,4BAA4B,CAAC,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAC3H,CAAC;AARD,8CAQC;AAED,SAAgB,qBAAqB,CAAC,GAAW,EAAE,QAAgB,EAC/D,YAAoB,EACpB,aAAqB,EACrB,oBAA4B,EAC5B,WAAqB,EACrB,QAAgB;IAGhB,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,+BAA+B,CAAC,GAAG,EACtC,QAAQ,EACR,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,CACZ,CAAC;AACV,CAAC;AAzBD,sDAyBC;AAED,SAAS,qBAAqB,CAAC,QAAgB;IAC3C,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5C,MAAM,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC;IACzC,IAAI,iBAAiB,CAAC;IACtB,IAAI,GAAG,GAAG,SAAS,CAAC;IACpB,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,cAAc,CAAC,GAAG,KAAK,MAAM,EAAE;QAC/B,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACxC,iBAAiB,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;QACrD,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QACvE,IAAI,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACxB,QAAQ,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;SAC/C;KACJ;SAAM;QACH,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAClE,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QAC5C,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC7C,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC;SACzC;KACJ;IACD,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC;AAC3C,CAAC;AAGD,SAAS,qBAAqB,CAAC,cAAsB;IACjD,MAAM,aAAa,GAAG,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAE9D,mEAAmE;IACnE,MAAM,SAAS,GAAG,aAAa,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;IACpE,IAAI,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE;QAC3B,MAAM,iBAAiB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAE9C,wCAAwC;QACxC,MAAM,YAAY,GAAG,CAAC,OAAe,EAAE,EAAE;YACrC,OAAO,CAAC,IAAI,QAAQ,CAAC,UAAU,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC,CAAC;QAEF,MAAM,WAAW,GAAG,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAEpD,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE;YAChF,qCAAqC;YACrC,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACtC;KACJ;IAED,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;AACjE,CAAC;AAED,SAAS,aAAa,CAAC,MAAuB;IAC1C,OAAO;QACH,aAAa,EAAE,MAAM,CAAC,aAAa,IAAI,EAAE;QACzC,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,CAAC;QACpC,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,oBAAoB,EAAE,MAAM,CAAC,oBAAoB,IAAI,EAAE;QACvD,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE;QACrC,aAAa,EAAE,MAAM,CAAC,aAAa;QACnC,YAAY,EAAE,MAAM,CAAC,YAAY,IAAI,EAAE;KAC1C,CAAC;AACN,CAAC;AAED,SAAS,wBAAwB,CAAC,eAAgC,EAAE,QAAgB,EAAE,IAAY;IAC9F,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,aAAa,EAAE,oBAAoB,EAAE,WAAW,EAAE,YAAY,EAAE,GAAG,aAAa,CAAC,eAAe,CAAC,CAAC;IAChJ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAClD,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE;QACrC,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QACxE,QAAQ,aAAa,EAAE;YACnB,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,kBAAkB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,oBAAoB,EAAE,WAAW,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBACnJ,MAAM;YACV,KAAK,aAAa,CAAC,YAAY;gBAC3B,KAAK,GAAG,qBAAqB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,oBAAoB,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAC3H,MAAM;YACV,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,kBAAkB,CAAC,GAAG,EAAE,QAAQ,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,oBAAoB,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBACnJ,MAAM;YACV,KAAK,aAAa,CAAC,kBAAkB;gBACjC,KAAK,GAAG,CAAC,+BAA+B,CAAC,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAE,CAAC;gBACpF,MAAM;YACV,KAAK,aAAa,CAAC,iBAAiB;gBAChC,KAAK,GAAG,CAAC,yBAAyB,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa,EAAE,YAAY,EAAE,oBAAoB,EAAE,WAAW,CAAC,CAAC,CAAC;gBACvH,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,aAAa,CAAC,CAAC;SAClE;KACJ;SAAM;QACH,QAAQ,aAAa,EAAE;YACnB,KAAK,aAAa,CAAC,SAAS;gBACxB,MAAM,YAAY,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAC;gBACrD,KAAK,GAAG,iBAAiB,CAAC,YAAY,EAAE,aAAa,EAAE,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBACpG,MAAM;YACV;gBACI,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAG,aAAa,CAAC,CAAC;SAClE;KACJ;IACD,OAAO,KAAK,CAAC;AACjB,CAAC;AAED,SAAgB,iCAAiC,CAAC,gBAAmC,EAAE,QAAgB,EAAE,WAAmB,EAAE;IAC1H,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,gBAAgB,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;QACvC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,wBAAwB,CAAC,eAAe,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC;AAND,8EAMC;AAED,SAAgB,gCAAgC,CAAC,eAAqC,EAAE,QAAgB;IACpG,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;QAChC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACnC,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YAE1D,MAAM,IAAI,GAAG,iCAAiC,CAAC,SAAS,CAAC,gBAAgB,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;YACnG,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACjB,CAAC;AAXD,4EAWC;AAED,SAAgB,+BAA+B,CAAC,cAAsB,EAAE,QAAgB;IACpF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAyB,CAAC;IACpG,OAAO,gCAAgC,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAHD,0EAGC;AAED,SAAgB,iCAAiC,CAAC,UAAkB,EAAE,QAAgB;IAClF,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAyB,CAAC;IACvE,OAAO,gCAAgC,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;AACvE,CAAC;AAHD,8EAGC;AAED,IAAY,aAOX;AAPD,WAAY,aAAa;IACrB,0DAAyC,CAAA;IACzC,8CAA6B,CAAA;IAC7B,0DAAyC,CAAA;IACzC,wCAAuB,CAAA;IACvB,0DAAyC,CAAA;IACzC,wDAAuC,CAAA;AAC3C,CAAC,EAPW,aAAa,6BAAb,aAAa,QAOxB;AAoBD,SAAgB,yBAAyB,CAAC,GAAQ,EAAE,YAAoB,EAAE,aAAqB,EAAE,YAAoB,EAAE,oBAA4B,EAAE,WAAmB;IACpK,IAAI,gBAAgB,GAAG,YAAY,CAAC;IACpC,qCAAqC;IACrC,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,YAAY,GAAG,YAAY,GAAG,qBAAqB,CAAC;IACxD,IAAI,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B,OAAO,iCAAiC,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa,EAAE,gBAAgB,EAAE,YAAY,EAAE,YAAY,EAAE,oBAAoB,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;AAC7L,CAAC;AAPD,8DAOC;AAED,SAAS,iCAAiC,CAAC,GAAW,EAClD,YAAoB,EACpB,aAAqB,EACrB,gBAAwB,EACxB,YAAoB,EACpB,YAAoB,EACpB,oBAA4B,EAC5B,QAAgB,EAChB,aAAqB,EACrB,WAAgB;IAEhB,IAAI,WAAW,GAAG,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAC5C,IAAI,cAAc,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,oBAAoB,CAC9D,WAAW,EACX,YAAY,EACZ,aAAa,EACb,gBAAgB,EAChB,YAAY,EACZ,YAAY,EACZ,oBAAoB,EACpB,WAAW,EACX,QAAQ,EACR,aAAa,EACb,EAAE,CAAC,CAAC;IAGR,IAAI,cAAc,GAAG,cAAc,CAAC,YAAY,EAAE,CAAC;IACnD,OAAO,UAAU,CAAC,cAAc,CAAC,CAAC;AACtC,CAAC\"}\n\\ No newline at end of file"},{"sha":"963db154149598bb9266ce58112aefa6d439dee3","filename":"generators/Nethereum.Generators.JavaScript/app.ts","status":"modified","additions":77,"deletions":6,"changes":83,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.ts","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fapp.ts","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fapp.ts?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -12,6 +12,8 @@ var n = require('./Nethereum.Generators.DuoCode.js');\n     serviceNamespace: string,\n     cqsNamespace: string,\n     dtoNamespace: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     basePath: string,\n     pathSeparator: string,\n     codeGenLang: int,\n@@ -25,9 +27,11 @@ var n = require('./Nethereum.Generators.DuoCode.js');\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator,\n-         codeGenLang);\n+        codeGenLang);\n \n      classGenerator.set_AddRootNamespaceOnVbProjectsToImportStatements(false);\n      if (mudNamespace !== null && mudNamespace !== undefined && mudNamespace !== '') {\n@@ -43,6 +47,8 @@ function generateMudServiceInternal(abi: string, byteCode: string,\n     serviceNamespace: string,\n     cqsNamespace: string,\n     dtoNamespace: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     basePath: string,\n     pathSeparator: string,\n     codeGenLang: int,\n@@ -56,6 +62,8 @@ function generateMudServiceInternal(abi: string, byteCode: string,\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator,\n         codeGenLang\n@@ -73,6 +81,8 @@ function generateAllUnityClassesInternal(abi: string, byteCode: string,\n     serviceNamespace: string,\n     cqsNamespace: string,\n     dtoNamespace: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     basePath: string,\n     pathSeparator: string\n ):string[] {\n@@ -84,6 +94,8 @@ function generateAllUnityClassesInternal(abi: string, byteCode: string,\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator,\n         0);\n@@ -137,6 +149,8 @@ export function  generateNetStandardClassLibrary(projectName: string, basePath:\n export function generateAllClasses(abi: string, byteCode: string,\n     contractName: string,\n     baseNamespace: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     basePath: string,\n     codeGenLang: int,\n     mudNamespace: string = null\n@@ -154,6 +168,8 @@ export function generateAllClasses(abi: string, byteCode: string,\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator,\n         codeGenLang,\n@@ -164,6 +180,8 @@ export function generateMudService(abi: string, byteCode: string,\n     contractName: string,\n     baseNamespace: string,\n     basePath: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     codeGenLang: int,\n     mudNamespace: string\n ): string[] {\n@@ -180,6 +198,8 @@ export function generateMudService(abi: string, byteCode: string,\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator,\n         codeGenLang,\n@@ -199,6 +219,8 @@ export function generateMudTables(json: string, baseNamespace: string,\n export function generateUnityRequests(abi: string, byteCode: string,\n     contractName: string,\n     baseNamespace: string,\n+    sharedTypesNamespace: string,\n+    sharedTypes: string[],\n     basePath: string\n ) : string[] {\n \n@@ -214,6 +236,8 @@ export function generateUnityRequests(abi: string, byteCode: string,\n         serviceNamespace,\n         cqsNamespace,\n         dtoNamespace,\n+        sharedTypesNamespace,\n+        sharedTypes,\n         basePath,\n         pathSeparator\n         );\n@@ -273,30 +297,35 @@ function applyDefaults(config: GeneratorConfig): GeneratorConfig {\n         baseNamespace: config.baseNamespace || \"\",\n         codeGenLang: config.codeGenLang ?? 0,\n         basePath: config.basePath,\n+        sharedTypesNamespace: config.sharedTypesNamespace || \"\",\n+        sharedTypes: config.sharedTypes || [],\n         generatorType: config.generatorType,\n         mudNamespace: config.mudNamespace || \"\"\n     };\n }\n \n function generateFilesUsingConfig(generatorConfig: GeneratorConfig, fileName: string, root: string) :string[] {\n-    const { baseNamespace, codeGenLang, basePath, generatorType, mudNamespace } = applyDefaults(generatorConfig);\n+    const { baseNamespace, codeGenLang, basePath, generatorType, sharedTypesNamespace, sharedTypes, mudNamespace } = applyDefaults(generatorConfig);\n     const absolutePath = path.resolve(root, basePath);\n     var files = [];\n     if (!fileName.endsWith('mud.config.ts')) {\n         const { abi, bytecode, contractName } = extractAbiAndBytecode(fileName);\n         switch (generatorType) {\n             case GeneratorType.ContractDefinition:\n-                files = generateAllClasses(abi, bytecode, contractName, baseNamespace, absolutePath, codeGenLang, mudNamespace);\n+                files = generateAllClasses(abi, bytecode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, absolutePath, codeGenLang, mudNamespace);\n                 break;\n             case GeneratorType.UnityRequest:\n-                files = generateUnityRequests(abi, bytecode, contractName, baseNamespace, absolutePath);\n+                files = generateUnityRequests(abi, bytecode, contractName, baseNamespace, sharedTypesNamespace, sharedTypes, absolutePath);\n                 break;\n             case GeneratorType.MudExtendedService:\n-                files = generateMudService(abi, bytecode, contractName, baseNamespace, absolutePath, codeGenLang, mudNamespace);\n+                files = generateMudService(abi, bytecode, contractName, baseNamespace, absolutePath, sharedTypesNamespace, sharedTypes, codeGenLang, mudNamespace);\n                 break;\n             case GeneratorType.NetStandardLibrary:\n                 files = [generateNetStandardClassLibrary(contractName, absolutePath, codeGenLang) ];\n                 break;\n+            case GeneratorType.BlazorPageService:\n+                files = [generateBlazorPageService(abi, contractName, baseNamespace, absolutePath, sharedTypesNamespace, codeGenLang)];\n+                break;\n             default:\n                 throw new Error(\"Unknown GeneratorType: \" + generatorType);\n         }\n@@ -349,13 +378,16 @@ export enum GeneratorType {\n     UnityRequest = \"UnityRequest\",\n     MudExtendedService = \"MudExtendedService\",\n     MudTables = \"MudTables\",\n-    NetStandardLibrary = \"NetStandardLibrary\"\n+    NetStandardLibrary = \"NetStandardLibrary\",\n+    BlazorPageService = \"BlazorPageService\",\n }\n \n export interface GeneratorConfig {\n     baseNamespace: string;\n     codeGenLang: int;\n     basePath: string;\n+    sharedTypesNamespace: string;\n+    sharedTypes: string[];\n     generatorType: GeneratorType;\n     mudNamespace: string;\n }\n@@ -367,3 +399,42 @@ export interface GeneratorSetConfig {\n }\n \n \n+\n+export function generateBlazorPageService(abi: any, contractName: string, baseNamespace: string, absolutePath: string, sharedTypesNamespace: string, codeGenLang: number): any {\n+    var serviceNamespace = contractName;\n+    //Same, we are generating single file\n+    var cqsNamespace = contractName + \".ContractDefinition\";\n+    var dtoNamespace = contractName + \".ContractDefinition\";\n+    var pathSeparator = path.sep;\n+    return generateBlazorPageServiceInternal(abi, contractName, baseNamespace, serviceNamespace, cqsNamespace, dtoNamespace, sharedTypesNamespace, absolutePath, pathSeparator, codeGenLang);\n+}\n+\n+function generateBlazorPageServiceInternal(abi: string,\n+    contractName: string,\n+    baseNamespace: string,\n+    serviceNamespace: string,\n+    cqsNamespace: string,\n+    dtoNamespace: string,\n+    sharedTypesNamespace: string,\n+    basePath: string,\n+    pathSeparator: string,\n+    codeGenLang: int,\n+): string {\n+    var contractDes = abiDes.buildContract(abi);\n+    var classGenerator = new Nethereum.Generators.BlazorPagesGenerator(\n+        contractDes,\n+        contractName,\n+        baseNamespace,\n+        serviceNamespace,\n+        cqsNamespace,\n+        dtoNamespace,\n+        sharedTypesNamespace,\n+        codeGenLang,\n+        basePath,\n+        pathSeparator,\n+        \"\");\n+\n+\n+    var generatedClass = classGenerator.GenerateFile();\n+    return outputFile(generatedClass);\n+}"},{"sha":"68989c0406f65f328a1eb25fca986dba4f4d0608","filename":"generators/Nethereum.Generators.JavaScript/examples/index.js","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2Findex.js","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2Findex.js","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2Findex.js?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -33,6 +33,8 @@ codegen.generateMudService(abi,\n     contractByteCode,\n     contractName,\n     baseNamespace,\n+    null,\n+    null,\n     basePath,\n     0);\n \n@@ -48,6 +50,12 @@ var jsonGeneratorSetsExample1 =\n                 \"codeGenLang\": 0,\n                 \"generatorType\": \"ContractDefinition\"\n             },\n+            {\n+                \"baseNamespace\": \"MyProject.Contracts\",\n+                \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Blazor\",\n+                \"codeGenLang\": 0,\n+                \"generatorType\": \"BlazorPageService\"\n+            },\n             {\n                 \"baseNamespace\": \"MyProject.Contracts\",\n                 \"basePath\": \"codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts\",\n@@ -102,6 +110,8 @@ var jsonGeneratorSetsExample2 =\n                 \"baseNamespace\": \"MyProject.Contracts\",\n                 \"basePath\": \"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\",\n                 \"codeGenLang\": 0,\n+                \"sharedTypesNamespace\": \"SharedTypes\",\n+                \"sharedTypes\": [\"events\", \"errors\"],\n                 \"generatorType\": \"ContractDefinition\"\n             },\n             {"},{"sha":"b32e25119e2cffd4ad25126b205ad5335cb681f6","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example1/MyProject.Blazor/StandardTokenPage.gen.razor","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Blazor%2FStandardTokenPage.gen.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Blazor%2FStandardTokenPage.gen.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Blazor%2FStandardTokenPage.gen.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,112 @@\n+@using System.Numerics\n+@using Nethereum.UI\n+@using MyProject.Contracts.Standard_Token\n+@using MyProject.Contracts.Standard_Token.ContractDefinition\n+\n+@page \"/standard_token\"\n+@rendermode InteractiveWebAssembly\n+@inject SelectedEthereumHostProviderService selectedHostProviderService\n+\n+<MudContainer MaxWidth=\"MaxWidth.Medium\" Class=\"mt-4\">\n+\n+        <MudText Typo=\"Typo.h5\" Class=\"mb-4\">Standard_Token</MudText>\n+\n+        <MudTextField @bind-Value=\"ContractAddress\" Label=\"Standard_Token Contract Address\" Variant=\"Variant.Outlined\" Class=\"mb-4\" />\n+\n+        <ContractDeploymentComponent TDeploymentMessage=\"StandardTokenDeployment\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenPage)\"\n+            ContractAddressChanged=\"ContractAddressChanged\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"AllowanceFunction\" TFunctionOutput=\"BigInteger\"\n+            Title=\"allowance\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"AllowanceQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"AllowedFunction\" TFunctionOutput=\"BigInteger\"\n+            Title=\"allowed\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"AllowedQueryAsync\" />\n+\n+        <TransactionFunctionComponent TFunctionMessage=\"ApproveFunction\"\n+            Title=\"approve\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceRequestMethodName=\"ApproveRequestAsync\"\n+            ServiceRequestAndWaitForReceiptMethodName=\"ApproveRequestAndWaitForReceiptAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"BalanceOfFunction\" TFunctionOutput=\"BigInteger\"\n+            Title=\"balanceOf\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"BalanceOfQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"BalancesFunction\" TFunctionOutput=\"BigInteger\"\n+            Title=\"balances\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"BalancesQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"DecimalsFunction\" TFunctionOutput=\"byte\"\n+            Title=\"decimals\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"DecimalsQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"NameFunction\" TFunctionOutput=\"string\"\n+            Title=\"name\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"NameQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"SymbolFunction\" TFunctionOutput=\"string\"\n+            Title=\"symbol\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"SymbolQueryAsync\" />\n+\n+        <QueryFunctionComponent TFunctionMessage=\"TotalSupplyFunction\" TFunctionOutput=\"BigInteger\"\n+            Title=\"totalSupply\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceMethodName=\"TotalSupplyQueryAsync\" />\n+\n+        <TransactionFunctionComponent TFunctionMessage=\"TransferFunction\"\n+            Title=\"transfer\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceRequestMethodName=\"TransferRequestAsync\"\n+            ServiceRequestAndWaitForReceiptMethodName=\"TransferRequestAndWaitForReceiptAsync\" />\n+\n+        <TransactionFunctionComponent TFunctionMessage=\"TransferFromFunction\"\n+            Title=\"transferFrom\"\n+            ContractAddress=\"@ContractAddress\"\n+            HostProvider=\"selectedHostProviderService\"\n+            ServiceType=\"typeof(StandardTokenService)\"\n+            ServiceRequestMethodName=\"TransferFromRequestAsync\"\n+            ServiceRequestAndWaitForReceiptMethodName=\"TransferFromRequestAndWaitForReceiptAsync\" />\n+\n+</MudContainer>\n+\n+@code\n+    {\n+        private string ContractAddress;\n+\n+        private void ContractAddressChanged(string address)\n+        {\n+            ContractAddress = address;\n+        }\n+    }\n+"},{"sha":"39f4e162f5dcd8adcd7b6904f8df44a1cae6abba","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/MyWorld/Systems/IncrementSystem/ContractDefinition/IncrementSystemDefinition.gen.cs","status":"modified","additions":29,"deletions":28,"changes":57,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FMyWorld%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FMyWorld%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FMyWorld%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,7 @@\n using Nethereum.Contracts.CQS;\n using Nethereum.Contracts;\n using System.Threading;\n+using MyProject.Contracts.MyWorld.Systems.IncrementSystem.ContractDefinition;\n \n namespace MyProject.Contracts.MyWorld.Systems.IncrementSystem.ContractDefinition\n {\n@@ -68,34 +69,6 @@ public class SupportsInterfaceFunctionBase : FunctionMessage\n         public virtual byte[] InterfaceId { get; set; }\n     }\n \n-    public partial class StoreSplicestaticdataEventDTO : StoreSplicestaticdataEventDTOBase { }\n-\n-    [Event(\"Store_SpliceStaticData\")]\n-    public class StoreSplicestaticdataEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"bytes32\", \"tableId\", 1, true )]\n-        public virtual byte[] TableId { get; set; }\n-        [Parameter(\"bytes32[]\", \"keyTuple\", 2, false )]\n-        public virtual List<byte[]> KeyTuple { get; set; }\n-        [Parameter(\"uint48\", \"start\", 3, false )]\n-        public virtual ulong Start { get; set; }\n-        [Parameter(\"bytes\", \"data\", 4, false )]\n-        public virtual byte[] Data { get; set; }\n-    }\n-\n-    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }\n-\n-    [Error(\"Slice_OutOfBounds\")]\n-    public class SliceOutofboundsErrorBase : IErrorDTO\n-    {\n-        [Parameter(\"bytes\", \"data\", 1)]\n-        public virtual byte[] Data { get; set; }\n-        [Parameter(\"uint256\", \"start\", 2)]\n-        public virtual BigInteger Start { get; set; }\n-        [Parameter(\"uint256\", \"end\", 3)]\n-        public virtual BigInteger End { get; set; }\n-    }\n-\n     public partial class MsgSenderOutputDTO : MsgSenderOutputDTOBase { }\n \n     [FunctionOutput]\n@@ -133,4 +106,32 @@ public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO\n         [Parameter(\"bool\", \"\", 1)]\n         public virtual bool ReturnValue1 { get; set; }\n     }\n+\n+    public partial class StoreSplicestaticdataEventDTO : StoreSplicestaticdataEventDTOBase { }\n+\n+    [Event(\"Store_SpliceStaticData\")]\n+    public class StoreSplicestaticdataEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"tableId\", 1, true )]\n+        public virtual byte[] TableId { get; set; }\n+        [Parameter(\"bytes32[]\", \"keyTuple\", 2, false )]\n+        public virtual List<byte[]> KeyTuple { get; set; }\n+        [Parameter(\"uint48\", \"start\", 3, false )]\n+        public virtual ulong Start { get; set; }\n+        [Parameter(\"bytes\", \"data\", 4, false )]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }\n+\n+    [Error(\"Slice_OutOfBounds\")]\n+    public class SliceOutofboundsErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bytes\", \"data\", 1)]\n+        public virtual byte[] Data { get; set; }\n+        [Parameter(\"uint256\", \"start\", 2)]\n+        public virtual BigInteger Start { get; set; }\n+        [Parameter(\"uint256\", \"end\", 3)]\n+        public virtual BigInteger End { get; set; }\n+    }\n }"},{"sha":"ac9d0962a1d168937c7d77c4247d251f88a44f46","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example1/MyProject.Contracts/Standard_Token/ContractDefinition/StandardTokendefinition.gen.cs","status":"modified","additions":27,"deletions":26,"changes":53,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample1%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,7 @@\n using Nethereum.Contracts.CQS;\n using Nethereum.Contracts;\n using System.Threading;\n+using MyProject.Contracts.Standard_Token.ContractDefinition;\n \n namespace MyProject.Contracts.Standard_Token.ContractDefinition\n {\n@@ -141,32 +142,6 @@ public class TransferFromFunctionBase : FunctionMessage\n         public virtual BigInteger Value { get; set; }\n     }\n \n-    public partial class ApprovalEventDTO : ApprovalEventDTOBase { }\n-\n-    [Event(\"Approval\")]\n-    public class ApprovalEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"address\", \"_owner\", 1, true )]\n-        public virtual string Owner { get; set; }\n-        [Parameter(\"address\", \"_spender\", 2, true )]\n-        public virtual string Spender { get; set; }\n-        [Parameter(\"uint256\", \"_value\", 3, false )]\n-        public virtual BigInteger Value { get; set; }\n-    }\n-\n-    public partial class TransferEventDTO : TransferEventDTOBase { }\n-\n-    [Event(\"Transfer\")]\n-    public class TransferEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"address\", \"_from\", 1, true )]\n-        public virtual string From { get; set; }\n-        [Parameter(\"address\", \"_to\", 2, true )]\n-        public virtual string To { get; set; }\n-        [Parameter(\"uint256\", \"_value\", 3, false )]\n-        public virtual BigInteger Value { get; set; }\n-    }\n-\n     public partial class AllowanceOutputDTO : AllowanceOutputDTOBase { }\n \n     [FunctionOutput]\n@@ -244,4 +219,30 @@ public class TotalSupplyOutputDTOBase : IFunctionOutputDTO\n \n \n \n+\n+    public partial class ApprovalEventDTO : ApprovalEventDTOBase { }\n+\n+    [Event(\"Approval\")]\n+    public class ApprovalEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"_owner\", 1, true )]\n+        public virtual string Owner { get; set; }\n+        [Parameter(\"address\", \"_spender\", 2, true )]\n+        public virtual string Spender { get; set; }\n+        [Parameter(\"uint256\", \"_value\", 3, false )]\n+        public virtual BigInteger Value { get; set; }\n+    }\n+\n+    public partial class TransferEventDTO : TransferEventDTOBase { }\n+\n+    [Event(\"Transfer\")]\n+    public class TransferEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"_from\", 1, true )]\n+        public virtual string From { get; set; }\n+        [Parameter(\"address\", \"_to\", 2, true )]\n+        public virtual string To { get; set; }\n+        [Parameter(\"uint256\", \"_value\", 3, false )]\n+        public virtual BigInteger Value { get; set; }\n+    }\n }"},{"sha":"aed23b32f58467f88ba1ae6a088b71508ebe1300","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/MyWorld1/Systems/IncrementSystem/ContractDefinition/IncrementSystemDefinition.gen.cs","status":"modified","additions":29,"deletions":28,"changes":57,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FMyWorld1%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FMyWorld1%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FMyWorld1%2FSystems%2FIncrementSystem%2FContractDefinition%2FIncrementSystemDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,7 @@\n using Nethereum.Contracts.CQS;\n using Nethereum.Contracts;\n using System.Threading;\n+using MyProject.Contracts.MyWorld1.Systems.IncrementSystem.ContractDefinition;\n \n namespace MyProject.Contracts.MyWorld1.Systems.IncrementSystem.ContractDefinition\n {\n@@ -68,34 +69,6 @@ public class SupportsInterfaceFunctionBase : FunctionMessage\n         public virtual byte[] InterfaceId { get; set; }\n     }\n \n-    public partial class StoreSplicestaticdataEventDTO : StoreSplicestaticdataEventDTOBase { }\n-\n-    [Event(\"Store_SpliceStaticData\")]\n-    public class StoreSplicestaticdataEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"bytes32\", \"tableId\", 1, true )]\n-        public virtual byte[] TableId { get; set; }\n-        [Parameter(\"bytes32[]\", \"keyTuple\", 2, false )]\n-        public virtual List<byte[]> KeyTuple { get; set; }\n-        [Parameter(\"uint48\", \"start\", 3, false )]\n-        public virtual ulong Start { get; set; }\n-        [Parameter(\"bytes\", \"data\", 4, false )]\n-        public virtual byte[] Data { get; set; }\n-    }\n-\n-    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }\n-\n-    [Error(\"Slice_OutOfBounds\")]\n-    public class SliceOutofboundsErrorBase : IErrorDTO\n-    {\n-        [Parameter(\"bytes\", \"data\", 1)]\n-        public virtual byte[] Data { get; set; }\n-        [Parameter(\"uint256\", \"start\", 2)]\n-        public virtual BigInteger Start { get; set; }\n-        [Parameter(\"uint256\", \"end\", 3)]\n-        public virtual BigInteger End { get; set; }\n-    }\n-\n     public partial class MsgSenderOutputDTO : MsgSenderOutputDTOBase { }\n \n     [FunctionOutput]\n@@ -133,4 +106,32 @@ public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO\n         [Parameter(\"bool\", \"\", 1)]\n         public virtual bool ReturnValue1 { get; set; }\n     }\n+\n+    public partial class StoreSplicestaticdataEventDTO : StoreSplicestaticdataEventDTOBase { }\n+\n+    [Event(\"Store_SpliceStaticData\")]\n+    public class StoreSplicestaticdataEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"tableId\", 1, true )]\n+        public virtual byte[] TableId { get; set; }\n+        [Parameter(\"bytes32[]\", \"keyTuple\", 2, false )]\n+        public virtual List<byte[]> KeyTuple { get; set; }\n+        [Parameter(\"uint48\", \"start\", 3, false )]\n+        public virtual ulong Start { get; set; }\n+        [Parameter(\"bytes\", \"data\", 4, false )]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class SliceOutofboundsError : SliceOutofboundsErrorBase { }\n+\n+    [Error(\"Slice_OutOfBounds\")]\n+    public class SliceOutofboundsErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bytes\", \"data\", 1)]\n+        public virtual byte[] Data { get; set; }\n+        [Parameter(\"uint256\", \"start\", 2)]\n+        public virtual BigInteger Start { get; set; }\n+        [Parameter(\"uint256\", \"end\", 3)]\n+        public virtual BigInteger End { get; set; }\n+    }\n }"},{"sha":"089cab9702499b39651636dc38f77dcbb197824d","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/SharedTypes/ApprovalEventDTO.gen.cs","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FApprovalEventDTO.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FApprovalEventDTO.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FApprovalEventDTO.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,23 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using MyProject.Contracts.SharedTypes;\n+\n+namespace MyProject.Contracts.SharedTypes\n+{\n+    public partial class ApprovalEventDTO : ApprovalEventDTOBase { }\n+\n+    [Event(\"Approval\")]\n+    public class ApprovalEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"_owner\", 1, true )]\n+        public virtual string Owner { get; set; }\n+        [Parameter(\"address\", \"_spender\", 2, true )]\n+        public virtual string Spender { get; set; }\n+        [Parameter(\"uint256\", \"_value\", 3, false )]\n+        public virtual BigInteger Value { get; set; }\n+    }\n+}"},{"sha":"1b68f6823aae96a1c2133ea3832fa8481600d0b2","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/SharedTypes/TransferEventDTO.gen.cs","status":"added","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FTransferEventDTO.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FTransferEventDTO.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FSharedTypes%2FTransferEventDTO.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,23 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using MyProject.Contracts.SharedTypes;\n+\n+namespace MyProject.Contracts.SharedTypes\n+{\n+    public partial class TransferEventDTO : TransferEventDTOBase { }\n+\n+    [Event(\"Transfer\")]\n+    public class TransferEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"_from\", 1, true )]\n+        public virtual string From { get; set; }\n+        [Parameter(\"address\", \"_to\", 2, true )]\n+        public virtual string To { get; set; }\n+        [Parameter(\"uint256\", \"_value\", 3, false )]\n+        public virtual BigInteger Value { get; set; }\n+    }\n+}"},{"sha":"73f6eca75688bc3c8981b6343f9562ab1ef4d4db","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/Standard_Token/ContractDefinition/StandardTokendefinition.gen.cs","status":"modified","additions":2,"deletions":26,"changes":28,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FContractDefinition%2FStandardTokendefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,8 @@\n using Nethereum.Contracts.CQS;\n using Nethereum.Contracts;\n using System.Threading;\n+using MyProject.Contracts.Standard_Token.ContractDefinition;\n+using MyProject.Contracts.SharedTypes;\n \n namespace MyProject.Contracts.Standard_Token.ContractDefinition\n {\n@@ -141,32 +143,6 @@ public class TransferFromFunctionBase : FunctionMessage\n         public virtual BigInteger Value { get; set; }\n     }\n \n-    public partial class ApprovalEventDTO : ApprovalEventDTOBase { }\n-\n-    [Event(\"Approval\")]\n-    public class ApprovalEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"address\", \"_owner\", 1, true )]\n-        public virtual string Owner { get; set; }\n-        [Parameter(\"address\", \"_spender\", 2, true )]\n-        public virtual string Spender { get; set; }\n-        [Parameter(\"uint256\", \"_value\", 3, false )]\n-        public virtual BigInteger Value { get; set; }\n-    }\n-\n-    public partial class TransferEventDTO : TransferEventDTOBase { }\n-\n-    [Event(\"Transfer\")]\n-    public class TransferEventDTOBase : IEventDTO\n-    {\n-        [Parameter(\"address\", \"_from\", 1, true )]\n-        public virtual string From { get; set; }\n-        [Parameter(\"address\", \"_to\", 2, true )]\n-        public virtual string To { get; set; }\n-        [Parameter(\"uint256\", \"_value\", 3, false )]\n-        public virtual BigInteger Value { get; set; }\n-    }\n-\n     public partial class AllowanceOutputDTO : AllowanceOutputDTOBase { }\n \n     [FunctionOutput]"},{"sha":"293b936b057597b343e0fafb0f945a2c6adf0195","filename":"generators/Nethereum.Generators.JavaScript/examples/testAbi/codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts/Standard_Token/StandardTokenService.gen.cs","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FStandardTokenService.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FStandardTokenService.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fexamples%2FtestAbi%2FcodeGenNodeTest%2FGeneratorSets%2FExample2%2FMyProject.Contracts%2FStandard_Token%2FStandardTokenService.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -11,6 +11,7 @@\n using Nethereum.Contracts;\n using System.Threading;\n using MyProject.Contracts.Standard_Token.ContractDefinition;\n+using MyProject.Contracts.SharedTypes;\n \n namespace MyProject.Contracts.Standard_Token\n {"},{"sha":"c91b506037abe8caee9a8cb36b66752903da7c30","filename":"generators/Nethereum.Generators.JavaScript/nethereum-codegen.esproj","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fnethereum-codegen.esproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fnethereum-codegen.esproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fnethereum-codegen.esproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,5 +7,6 @@\n   </PropertyGroup>\n   <ItemGroup>\n     <Folder Include=\"codeGenNodeTest\\\" />\n+    <Folder Include=\"examples\\testAbi\\codeGenNodeTest\\GeneratorSets\\Example1\\MyProject.Blazor\\\" />\n   </ItemGroup>\n </Project>\n\\ No newline at end of file"},{"sha":"82160019538e349b2c8f988f6ea05a0a4148c2ab","filename":"generators/Nethereum.Generators.JavaScript/null/ERC20/Erc20ServiceMudExt.gen.cs","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fnull%2FERC20%2FErc20ServiceMudExt.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fnull%2FERC20%2FErc20ServiceMudExt.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fnull%2FERC20%2FErc20ServiceMudExt.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,62 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Mud.Contracts.Core.Systems;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.ABI.Model;\n+using Nethereum.ABI.FunctionEncoding;\n+using Nethereum.Contracts.Create2Deployment;\n+using Nethereum.Mud;\n+using Nethereum.Web3;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts.ContractHandlers;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.Unity.Contracts.Standards.ERC20.ContractDefinition;\n+\n+namespace Nethereum.Unity.Contracts.Standards.ERC20\n+{\n+    public class Erc20ServiceResource : SystemResource\n+    {\n+        public Erc20ServiceResource() : base(\"Erc20\") { }\n+    }\n+    public partial class Erc20Service: ISystemService<Erc20ServiceResource> \n+    {\n+        public IResource Resource => this.GetResource();\n+\n+        public ISystemServiceResourceRegistration SystemServiceResourceRegistrator\n+        {\n+            get\n+            {\n+                return this.GetSystemServiceResourceRegistration<Erc20ServiceResource, Erc20Service>();\n+            }\n+        }\n+        \n+\n+        public virtual List<FunctionABI> GetSystemFunctionABIs()\n+        {\n+            return GetAllFunctionABIs();\n+        }\n+\n+        public virtual string CalculateCreate2Address(string deployerAddress, string salt, params ByteCodeLibrary[] byteCodeLibraries)\n+        {\n+            return new Erc20Deployment().CalculateCreate2Address(deployerAddress, salt, byteCodeLibraries);\n+        }\n+\n+        public virtual Task<Create2ContractDeploymentTransactionResult> DeployCreate2ContractAsync(string deployerAddress, string salt, params ByteCodeLibrary[] byteCodeLibraries)\n+        {\n+            var create2ProxyDeployerService = Web3.Eth.Create2DeterministicDeploymentProxyService;\n+            var deployment = new Erc20Deployment();\n+            return create2ProxyDeployerService.DeployContractRequestAsync(deployment, deployerAddress, salt, byteCodeLibraries);\n+        }\n+        public virtual Task<Create2ContractDeploymentTransactionReceiptResult> DeployCreate2ContractAndWaitForReceiptAsync(string deployerAddress, string salt, ByteCodeLibrary[] byteCodeLibraries, CancellationToken cancellationToken = default)\n+        {\n+            var create2ProxyDeployerService = Web3.Eth.Create2DeterministicDeploymentProxyService;\n+            var deployment = new Erc20Deployment();\n+            return create2ProxyDeployerService.DeployContractRequestAndWaitForReceiptAsync(deployment, deployerAddress, salt, byteCodeLibraries, cancellationToken);\n+        }\n+    }\n+}"},{"sha":"99d531a4634f458113b0afad9d7c603b50f416ed","filename":"generators/Nethereum.Generators.JavaScript/package-lock.json","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fpackage-lock.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fpackage-lock.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fpackage-lock.json?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,12 +1,12 @@\n {\n   \"name\": \"nethereum-codegen\",\n-  \"version\": \"2.0.5\",\n+  \"version\": \"3.0.0\",\n   \"lockfileVersion\": 3,\n   \"requires\": true,\n   \"packages\": {\n     \"\": {\n       \"name\": \"nethereum-codegen\",\n-      \"version\": \"2.0.5\",\n+      \"version\": \"3.0.0\",\n       \"license\": \"MIT\",\n       \"dependencies\": {\n         \"fs-extra\": \"^5.0.0\""},{"sha":"71d9fac21cd2248496944bc57715723959d604c3","filename":"generators/Nethereum.Generators.JavaScript/package.json","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fpackage.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.JavaScript%2Fpackage.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.JavaScript%2Fpackage.json?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,6 +1,6 @@\n {\n   \"name\": \"nethereum-codegen\",\n-  \"version\": \"2.0.6\",\n+  \"version\": \"3.0.4\",\n   \"description\": \"Code generator of Nethereum and Ethereum integration classes and projects \",\n   \"main\": \"app.js\",\n   \"scripts\": {"},{"sha":"cc70756174fc8c749199338f6caa4fdf95966eb3","filename":"generators/Nethereum.Generators.Net/ContractGenerator.cs","status":"modified","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.Net%2FContractGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -85,6 +85,8 @@ public List<string> GenerateAllClassesInternal(\n             string serviceNamespace,\n             string cqsNamespace,\n             string dtoNamespace,\n+            string sharedTypesNamespace,\n+            string[] sharedGeneratedTypes,\n             string basePath,\n             string pathSeparator,\n             int codeGenLang,\n@@ -98,6 +100,8 @@ public List<string> GenerateAllClassesInternal(\n                 serviceNamespace,\n                 cqsNamespace,\n                 dtoNamespace,\n+                sharedTypesNamespace,\n+                sharedGeneratedTypes,\n                 basePath,\n                 pathSeparator,\n                 (CodeGenLanguage)codeGenLang\n@@ -116,6 +120,8 @@ public List<string> GenerateUnityRequests(\n             string bytecode,\n             string contractName,\n             string baseNamespace,\n+            string sharedTypesNamespace,\n+            string[] sharedGeneratedTypes,\n             string basePath,\n             string pathSeparator)\n         {\n@@ -127,6 +133,8 @@ public List<string> GenerateUnityRequests(\n                 contractName,\n                 $\"{contractName}.ContractDefinition\",\n                 $\"{contractName}.ContractDefinition\",\n+                sharedTypesNamespace,\n+                sharedGeneratedTypes,\n                 basePath,\n                 pathSeparator,\n                 0\n@@ -142,6 +150,8 @@ public List<string> GenerateMudService(\n             string contractName,\n             string baseNamespace,\n             string basePath,\n+            string sharedTypesNamespace,\n+            string[] sharedGeneratedTypes,\n             string pathSeparator,\n             int codeGenLang,\n             string mudNamespace)\n@@ -154,6 +164,8 @@ public List<string> GenerateMudService(\n                 contractName,\n                 $\"{contractName}.ContractDefinition\",\n                 $\"{contractName}.ContractDefinition\",\n+                sharedTypesNamespace,\n+                sharedGeneratedTypes,\n                 basePath,\n                 pathSeparator,\n                 (CodeGenLanguage)codeGenLang\n@@ -183,6 +195,39 @@ public List<string> GenerateMudTables(\n             return OutputGeneratedFiles(generatedFiles);\n         }\n \n+        public string GenerateBlazorServicePage(ContractABI abi,\n+            string contractName,\n+            string baseNamespace,\n+            string serviceNamespace,\n+            string cqsNamespace,\n+            string dtoNamespace,\n+            string sharedTypesNamespace,\n+            string basePath,\n+            string pathSeparator,\n+            int codeGenLang,\n+            string blazorNamespace\n+            )\n+        {\n+            var blazorGenerator = new BlazorPagesGenerator(\n+                abi,\n+                contractName,\n+                baseNamespace,\n+                serviceNamespace,\n+                cqsNamespace,\n+                dtoNamespace,\n+                sharedTypesNamespace,\n+                CodeGenLanguage.CSharp,\n+                basePath,\n+                pathSeparator,\n+                blazorNamespace\n+\n+            );\n+\n+            var generatedFile = blazorGenerator.GenerateFile();\n+            var outputFiles = OutputGeneratedFiles(new[] { generatedFile });\n+            return outputFiles[0];\n+        }\n+\n         private List<string> OutputGeneratedFiles(IEnumerable<GeneratedFile> generatedFiles)\n         {\n             var outputFiles = new List<string>();"},{"sha":"c41bb5f9375df16e3b4b9ca8ec73b7fc10825b7f","filename":"generators/Nethereum.Generators.Net/ContractLibrary/ContractLibraryWriter.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractLibrary%2FContractLibraryWriter.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractLibrary%2FContractLibraryWriter.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.Net%2FContractLibrary%2FContractLibraryWriter.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -10,7 +10,7 @@ public void WriteClasses(GenerateClassesCommand command)\n             var generator = new ContractProjectGenerator(\n                 contractAbi,\n                 command.ContractName, command.ContractByteCode, command.BaseNamespace,\n-                command.ServiceNamespace, command.CqsNamespace, command.DtoNamesapce, command.BasePath,\n+                command.ServiceNamespace, command.CqsNamespace, command.DtoNamesapce, command.SharedTypesNamespace, command.SharedGeneratedTypes, command.BasePath,\n                 command.PathDelimiter, command.CodeGenLanguage);\n             var generatedClasses = generator.GenerateAll();\n            GeneratedFileWriter.WriteFilesToDisk(generatedClasses);"},{"sha":"c19fd276330ed0d1d7821d2ba75d79f58cbc73e7","filename":"generators/Nethereum.Generators.Net/ContractLibrary/GenerateClassesCommand.cs","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractLibrary%2FGenerateClassesCommand.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FContractLibrary%2FGenerateClassesCommand.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.Net%2FContractLibrary%2FGenerateClassesCommand.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -11,11 +11,17 @@ public class GenerateClassesCommand\n         public string ServiceNamespace { get; set; }\n         public string CqsNamespace { get; set; }\n         public string DtoNamesapce { get; set; }\n+\n+        public string SharedTypesNamespace { get; set; }\n+\n+        public string[] SharedGeneratedTypes { get; set; }  \n+\n         public string PathDelimiter { get; set; }\n         public CodeGenLanguage CodeGenLanguage { get; }\n         public string BaseNamespace { get; set; }\n \n-        public GenerateClassesCommand(string contractByteCode, string abi, string basePath,  string baseNamespace, string contractName, string serviceNamespace, string cqsNamespace, string dtoNamesapce, string pathDelimiter, CodeGenLanguage codeGenLanguage)\n+        public GenerateClassesCommand(string contractByteCode, string abi, string basePath,  string baseNamespace, string contractName, string serviceNamespace, string cqsNamespace, string dtoNamesapce, string sharedTypesNamespace,\n+            string[] sharedGeneratedTypes, string pathDelimiter, CodeGenLanguage codeGenLanguage)\n         {\n             ContractByteCode = contractByteCode;\n             Abi = abi;\n@@ -27,10 +33,12 @@ public GenerateClassesCommand(string contractByteCode, string abi, string basePa\n             DtoNamesapce = dtoNamesapce;\n             PathDelimiter = pathDelimiter;\n             CodeGenLanguage = codeGenLanguage;\n+            SharedTypesNamespace = sharedTypesNamespace;\n+            SharedGeneratedTypes = sharedGeneratedTypes;\n         }\n \n         public GenerateClassesCommand(string contractByteCode, string abi, string basePath, string baseNamespace, string contractName, string pathSeparator, CodeGenLanguage codeGenLanguage) \n-            : this(contractByteCode, abi, basePath, baseNamespace, contractName, (string)DefaultNamespaceService.SetDefaultService(contractName), (string)DefaultNamespaceService.SetDefaultCqs(contractName), (string)DefaultNamespaceService.SetDefaultDto(contractName), pathSeparator, codeGenLanguage)\n+            : this(contractByteCode, abi, basePath, baseNamespace, contractName, (string)DefaultNamespaceService.SetDefaultService(contractName), (string)DefaultNamespaceService.SetDefaultCqs(contractName), (string)DefaultNamespaceService.SetDefaultDto(contractName), null, null, pathSeparator, codeGenLanguage)\n         {\n \n         }"},{"sha":"fa829b2b95b4f5618fa6c27b1b25d9040af7ccda","filename":"generators/Nethereum.Generators.Net/GeneratorSetConfig.cs","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FGeneratorSetConfig.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FGeneratorSetConfig.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.Net%2FGeneratorSetConfig.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -16,5 +16,8 @@ public class GeneratorConfig\n         public int CodeGenLang { get; set; } = 0;\n         public string GeneratorType { get; set; }\n         public string MudNamespace { get; set; } = \"\";\n+        public string SharedTypesNamespace { get; set; } = \"\";\n+        public string[] SharedTypes { get; set; } = null;\n+        public string BlazorNamespace { get; set; } = \"\";\n     }\n }"},{"sha":"b364413c25769049e8047433f88fe6b2b821063c","filename":"generators/Nethereum.Generators.Net/GeneratorSetProcessor.cs","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FGeneratorSetProcessor.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.Net%2FGeneratorSetProcessor.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.Net%2FGeneratorSetProcessor.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -120,6 +120,8 @@ private List<string> ProcessGeneratorConfig(GeneratorConfig config, string fileP\n                         $\"{contractName}\",\n                         $\"{contractName}.ContractDefinition\",\n                         $\"{contractName}.ContractDefinition\",\n+                        config.SharedTypesNamespace,\n+                        config.SharedTypes,\n                         absolutePath, \n                         Path.DirectorySeparatorChar.ToString(),\n                         config.CodeGenLang\n@@ -132,6 +134,8 @@ private List<string> ProcessGeneratorConfig(GeneratorConfig config, string fileP\n                         bytecode,\n                         contractName,\n                         config.BaseNamespace,\n+                        config.SharedTypesNamespace,\n+                        config.SharedTypes,\n                         absolutePath, \n                         Path.DirectorySeparatorChar.ToString()\n                     ));\n@@ -144,6 +148,8 @@ private List<string> ProcessGeneratorConfig(GeneratorConfig config, string fileP\n                         contractName,\n                         config.BaseNamespace,\n                         absolutePath,\n+                        config.SharedTypesNamespace,\n+                        config.SharedTypes,\n                         Path.DirectorySeparatorChar.ToString(),\n                         config.CodeGenLang,\n                         config.MudNamespace\n@@ -161,6 +167,22 @@ private List<string> ProcessGeneratorConfig(GeneratorConfig config, string fileP\n                     ));\n                     break;\n \n+                case \"BlazorPageService\":\n+                    files.Add(_contractGenerator.GenerateBlazorServicePage(\n+                        abi,\n+                        contractName,\n+                        config.BaseNamespace,\n+                        $\"{contractName}\",\n+                        $\"{contractName}.ContractDefinition\",\n+                        $\"{contractName}.ContractDefinition\",\n+                        config.SharedTypesNamespace,\n+                        absolutePath,\n+                        Path.DirectorySeparatorChar.ToString(),\n+                        config.CodeGenLang,\n+                        config.BlazorNamespace\n+                    ));\n+                    break;\n+\n                 default:\n                     throw new InvalidOperationException($\"Unknown generator type: {config.GeneratorType}\");\n             }"},{"sha":"16f4f87764d52b45eb117d9671fc35a2566fc001","filename":"generators/Nethereum.Generators.UnitTests/Tests/CSharp/ContractProjectGeneratorTests.cs","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FContractProjectGeneratorTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FContractProjectGeneratorTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FContractProjectGeneratorTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -24,6 +24,8 @@ public ContractProjectGeneratorTests()\n                 \"StandardContract.Service\",\n                 \"StandardContract.CQS\",\n                 \"StandardContract.DTO\", \n+                null,\n+                null,\n                 @\"c:\\Temp\\\",\n                 \"\\\\\",\n                 CodeGenLanguage.CSharp);"},{"sha":"0686863bd2a3ae90baed67d333168d5170b60ffc","filename":"generators/Nethereum.Generators.UnitTests/Tests/CSharp/EventDTOGeneratorTests.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FEventDTOGeneratorTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FEventDTOGeneratorTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FEventDTOGeneratorTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -12,7 +12,7 @@ static EventDTOGenerator CreateGenerator()\n             var contractAbi = new ContractABI();\n             var eventAbi = new EventABI(\"ItemAdded\", contractAbi){ InputParameters = new[] { new ParameterABI(\"uint256\", \"itemId\") } };\n             contractAbi.Events = new EventABI[] { eventAbi };\n-            return new EventDTOGenerator(eventAbi, \"DefaultNamespace\", CodeGenLanguage.CSharp);\n+            return new EventDTOGenerator(eventAbi, \"DefaultNamespace\", null, CodeGenLanguage.CSharp);\n         }\n \n         public EventDTOGeneratorTests():base(CreateGenerator(), \"CSharp\")"},{"sha":"d8f3823bd55fd09a669bd3e43d5af08166f8915e","filename":"generators/Nethereum.Generators.UnitTests/Tests/CSharp/FunctionCQSMessageGeneratorTests.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionCQSMessageGeneratorTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionCQSMessageGeneratorTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionCQSMessageGeneratorTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -18,7 +18,7 @@ static FunctionCQSMessageGenerator CreateGenerator()\n             };\n             contractAbi.Functions = new FunctionABI[] {functionAbi};\n \n-            return new FunctionCQSMessageGenerator(functionAbi, \"DefaultNamespace\", \"FunctionOutput\", CodeGenLanguage.CSharp);\n+            return new FunctionCQSMessageGenerator(functionAbi, \"DefaultNamespace\", null, \"FunctionOutput\", CodeGenLanguage.CSharp);\n         }\n \n "},{"sha":"30d60aba6dcf22d122ec59e85bc7e3a1e5980134","filename":"generators/Nethereum.Generators.UnitTests/Tests/CSharp/FunctionOutputDTOGeneratorTests.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionOutputDTOGeneratorTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionOutputDTOGeneratorTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FFunctionOutputDTOGeneratorTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -18,7 +18,7 @@ static FunctionOutputDTOGenerator CreateGenerator()\n             };\n             contractAbi.Functions = new FunctionABI[] { functionAbi };\n \n-            return new FunctionOutputDTOGenerator(functionAbi, \"DefaultNamespace\", CodeGenLanguage.CSharp);\n+            return new FunctionOutputDTOGenerator(functionAbi, \"DefaultNamespace\", null, CodeGenLanguage.CSharp);\n         }\n \n         public FunctionOutputDTOGeneratorTests():base(CreateGenerator(), \"CSharp\")"},{"sha":"774165262a1a4145b04c9fa840f775a5436958a8","filename":"generators/Nethereum.Generators.UnitTests/Tests/CSharp/ServiceGeneratorTests.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FServiceGeneratorTests.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FServiceGeneratorTests.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FCSharp%2FServiceGeneratorTests.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -34,7 +34,7 @@ static ServiceGenerator CreateGenerator()\n             };\n \n \n-            return new ServiceGenerator(contractABI, \"StandardContract\", \"0x123456\", \"DefaultNamespace\", \"CQS\", \"Functions\",  CodeGenLanguage.CSharp);\n+            return new ServiceGenerator(contractABI, \"StandardContract\", \"0x123456\", \"DefaultNamespace\", \"CQS\", \"Functions\", null, CodeGenLanguage.CSharp);\n         }\n \n "},{"sha":"093cdd372a36b93fdb3f709da97a0efbe03b0cbd","filename":"generators/Nethereum.Generators.UnitTests/Tests/ConfigSetGeneratorTest.cs","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FConfigSetGeneratorTest.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators.UnitTests%2FTests%2FConfigSetGeneratorTest.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators.UnitTests%2FTests%2FConfigSetGeneratorTest.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -26,6 +26,12 @@ public void ShouldGenerateFilesFromConfigSet()\n                         \"\"codeGenLang\"\": 0,\n                         \"\"generatorType\"\": \"\"ContractDefinition\"\"\n                     },\n+                    {\n+                        \"\"baseNamespace\"\": \"\"MyProject.Contracts\"\",\n+                        \"\"basePath\"\": \"\"codeGenNodeTest/GeneratorSets/Example1/MyProject.Blazor\"\",\n+                        \"\"codeGenLang\"\": 0,\n+                        \"\"generatorType\"\": \"\"BlazorPageService\"\"\n+                    },\n                     {\n                         \"\"baseNamespace\"\": \"\"MyProject.Contracts\"\",\n                         \"\"basePath\"\": \"\"codeGenNodeTest/GeneratorSets/Example2/MyProject.Contracts\"\","},{"sha":"545b3707670df3824d9d27fd350c02fd20b580c0","filename":"generators/Nethereum.Generators/AllMessages/AllMessagesGenerator.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,10 +9,10 @@ public class AllMessagesGenerator : MultipleClassGeneratorBase<MultipleClassFile\n     {\n         private readonly IEnumerable<IClassGenerator> _classGenerators;\n \n-        public AllMessagesGenerator(IEnumerable<IClassGenerator> classGenerators, string contractName, string @namespace, CodeGenLanguage codeGenLanguage)\n+        public AllMessagesGenerator(IEnumerable<IClassGenerator> classGenerators, string contractName, string @namespace, string dtoNamespace, string sharedNamespace, CodeGenLanguage codeGenLanguage)\n         {\n             _classGenerators = classGenerators;\n-            Model = new AllMessagesModel(contractName, @namespace);\n+            Model = new AllMessagesModel(contractName, @namespace, dtoNamespace, sharedNamespace);\n             Model.CodeGenLanguage = codeGenLanguage;\n             InitialiseTemplate(codeGenLanguage);\n         }"},{"sha":"826ca61969a6207c9d629a9cb220b13ffd8c2599","filename":"generators/Nethereum.Generators/AllMessages/AllMessagesModel.cs","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FAllMessages%2FAllMessagesModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,21 +4,18 @@\n \n namespace Nethereum.Generators.Service\n {\n-\n-\n     public class AllMessagesModel:FileModel\n     {\n-   \n         public ContractDeploymentCQSMessageModel ContractDeploymentCQSMessageModel { get; }\n \n         public AllMessagesModel(string contractName, \n-                             string @namespace):\n+                             string @namespace, string dtoNamespace, string sharedNamespace):\n             base(@namespace, contractName + \"Definition\")\n         {\n-            InitialiseNamespaceDependencies();\n+            InitialiseNamespaceDependencies(dtoNamespace, sharedNamespace);\n         }\n \n-        private void InitialiseNamespaceDependencies()\n+        private void InitialiseNamespaceDependencies(string dtoNamespace, string sharedNamespace)\n         {\n             NamespaceDependencies.AddRange(new[] {\n                 \"System\",\n@@ -30,7 +27,9 @@ private void InitialiseNamespaceDependencies()\n                 \"Nethereum.RPC.Eth.DTOs\",\n                 \"Nethereum.Contracts.CQS\",\n                 \"Nethereum.Contracts\",\n-                \"System.Threading\" });\n+                \"System.Threading\",\n+                dtoNamespace,\n+                sharedNamespace});\n         }\n     }\n }"},{"sha":"a41cf02d2be22e8294c0da2c11e73cfe71f38f29","filename":"generators/Nethereum.Generators/BlazorPagesGenerator.cs","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorPagesGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorPagesGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FBlazorPagesGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,83 @@\n+\n+using Nethereum.Generators.Core;\n+using Nethereum.Generators.Model;\n+using Nethereum.Generators.CQS;\n+using Nethereum.Generators.Service;\n+\n+namespace Nethereum.Generators\n+{\n+    public class BlazorPagesGenerator\n+    {\n+        public ContractABI ContractABI { get; }\n+        public string Namespace { get; }\n+        public string BaseOutputPath { get; }\n+        public string PathDelimiter { get; }\n+        public string ContractName { get; }\n+        public string BaseNamespace { get; }\n+        public string ServiceNamespace { get; }\n+        public string CQSNamespace { get; }\n+        public string DTONamespace { get; }\n+        public CodeGenLanguage CodeGenLanguage { get; }\n+        public string SharedTypesNamespace { get; }\n+\n+        public ContractDeploymentCQSMessageModel ContractDeploymentCQSMessageModel { get; }\n+\n+        public BlazorPagesGenerator(ContractABI contractABI, string contractName,  string baseNamespace, \n+                                                            string serviceNamespace, string cqsNamespace, \n+                                                            string dtoNamespace, string sharedTypesNamespace, \n+                                                            CodeGenLanguage codeGenLanguage, string baseOutputPath, string pathDelimiter, \n+            string @namespace)\n+        {\n+            ContractABI = contractABI;\n+            ContractName = contractName;\n+            Namespace = @namespace;\n+            BaseNamespace = baseNamespace;\n+            ServiceNamespace = serviceNamespace;\n+            CQSNamespace = cqsNamespace;\n+            DTONamespace = dtoNamespace;\n+            SharedTypesNamespace = sharedTypesNamespace;\n+            CodeGenLanguage = codeGenLanguage;\n+            BaseOutputPath = baseOutputPath;\n+            PathDelimiter = pathDelimiter;\n+        }\n+\n+        public GeneratedFile GenerateFile()\n+        {\n+            var pageNamespace = GetFullNamespace(Namespace);\n+            var serviceNamespace = GetFullNamespace(ServiceNamespace);\n+            var dtoNamespace = GetFullNamespace(DTONamespace);\n+            var cqsNamespace = GetFullNamespace(CQSNamespace);\n+\n+            string sharedTypesFullNamespace = null;\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n+            var fullPath = BaseOutputPath;\n+            System.Console.WriteLine($\"Generating Blazor Service Page for {ContractName} in {fullPath}\");\n+            //parameters console\n+            System.Console.WriteLine(\"PageNamespace: \" + pageNamespace);\n+            System.Console.WriteLine(\"ServiceNamespace: \" + serviceNamespace);\n+            System.Console.WriteLine(\"CQSNamespace: \" + cqsNamespace);\n+            System.Console.WriteLine(\"DtoNamespace: \" + dtoNamespace);\n+            System.Console.WriteLine(\"SharedTypesNamespace: \" + sharedTypesFullNamespace);\n+            System.Console.WriteLine(\"BaseOutputPath: \" + BaseOutputPath);\n+            System.Console.WriteLine(\"PathDelimiter: \" + PathDelimiter);\n+            System.Console.WriteLine(\"CodeGenLanguage: \" + CodeGenLanguage);\n+\n+            var generator = new BlazorPageServiceGenerator(ContractABI, ContractName, pageNamespace, serviceNamespace, dtoNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n+            System.Console.WriteLine($\"Generating Blazor Service Page Content for {ContractName} in {fullPath}\");\n+            return  generator.GenerateFileContent(fullPath);\n+\n+        }\n+\n+        public string GetFullNamespace(string @namespace)\n+        {\n+            if (string.IsNullOrEmpty(BaseNamespace)) return @namespace;\n+            if (string.IsNullOrEmpty(@namespace)) return BaseNamespace;\n+            return BaseNamespace + \".\" + @namespace.TrimStart('.');\n+        }\n+\n+    }\n+}"},{"sha":"98276d81a6a679508838a53ea9f578c496006d55","filename":"generators/Nethereum.Generators/BlazorServicePage/BlazorPageServiceGenerator.cs","status":"added","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,31 @@\n+\n+using Nethereum.Generators.Core;\n+using Nethereum.Generators.CQS;\n+using Nethereum.Generators.Model;\n+using System;\n+\n+namespace Nethereum.Generators.Service\n+{\n+    \n+    public class BlazorPageServiceGenerator : ClassGeneratorBase<BlazorPageServiceModel>\n+    {\n+        public  ContractABI ContractABI { get; }\n+\n+        public BlazorPageServiceGenerator(ContractABI contractABI, string contractName, string @namespace, string cqsNamespace, string functionOutputNamespace, string sharedNamespace, CodeGenLanguage codeGenLanguage)\n+        {\n+     \n+            ContractABI = contractABI;\n+            ClassModel = new BlazorPageServiceModel(contractABI, contractName, @namespace, cqsNamespace, functionOutputNamespace, sharedNamespace);\n+     \n+            ClassModel.CodeGenLanguage = CodeGenLanguage.Razor;\n+     \n+            InitialiseTemplate();\n+     \n+        }\n+\n+        public void InitialiseTemplate()\n+        {\n+            ClassTemplate = new BlazorPageServiceCSharpRazorTemplate(ClassModel);\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"f0a6ebc25ded9f0ee6900ebea1105821c014d544","filename":"generators/Nethereum.Generators/BlazorServicePage/BlazorPageServiceModel.cs","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FBlazorServicePage%2FBlazorPageServiceModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,55 @@\n+using Nethereum.Generators.Core;\n+using Nethereum.Generators.CQS;\n+using Nethereum.Generators.Model;\n+\n+namespace Nethereum.Generators.Service\n+{\n+    public class BlazorPageServiceModel:TypeMessageModel\n+    {\n+        public ContractABI ContractABI { get; }\n+        public string CQSNamespace { get; }\n+        public string FunctionOutputNamespace { get; }\n+        public string ContractName { get; }\n+\n+        public string GetServiceTypeName()\n+        {\n+           return ServiceModel.GetDefaultTypeName(ContractName);\n+        }\n+\n+        public string GetContractDeploymentTypeName()\n+        {\n+            return ContractDeploymentCQSMessageModel.GetDefaultTypeName(ContractName);\n+        }\n+\n+        public BlazorPageServiceModel(ContractABI contractABI, string contractName, \n+                            string @namespace, \n+                            string cqsNamespace, string functionOutputNamespace, string sharedTypesFullNamespace) :\n+            base(@namespace, contractName, \"Page\") // we need to duplicate the name due to typescript\n+        {\n+            ContractABI = contractABI;\n+            CQSNamespace = cqsNamespace;\n+            ContractName = contractName;\n+            FunctionOutputNamespace = functionOutputNamespace;\n+            InitialiseNamespaceDependencies();\n+\n+\n+            if (!string.IsNullOrEmpty(cqsNamespace))\n+                NamespaceDependencies.Add(cqsNamespace);\n+\n+            if (!string.IsNullOrEmpty(functionOutputNamespace))\n+                NamespaceDependencies.Add(functionOutputNamespace);\n+\n+            if (!string.IsNullOrEmpty(sharedTypesFullNamespace))\n+                NamespaceDependencies.Add(sharedTypesFullNamespace);\n+        }\n+\n+        private void InitialiseNamespaceDependencies()\n+        {\n+            NamespaceDependencies.AddRange(new[] {\n+                \"Nethereum.MudBlazorComponents\",\n+                \"System.Numerics\",\n+                \"Nethereum.UI\" });\n+        }\n+    }\n+}\n+ \n\\ No newline at end of file"},{"sha":"59ada1fe80bf2e5cb15bb190c846f8118fcbb15e","filename":"generators/Nethereum.Generators/BlazorServicePage/CSharp/BlazorFunctionComponentsTemplate.cs","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorFunctionComponentsTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorFunctionComponentsTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorFunctionComponentsTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,111 @@\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+using Nethereum.Generators.Core;\n+using Nethereum.Generators.CQS;\n+using Nethereum.Generators.DTOs;\n+using Nethereum.Generators.Model;\n+\n+namespace Nethereum.Generators.Service\n+{\n+    public class BlazorFunctionComponentsTemplate\n+    {\n+        private readonly BlazorPageServiceModel _model;\n+        private readonly ITypeConvertor _typeConvertor;\n+        private readonly CommonGenerators _commonGenerators;\n+\n+        public BlazorFunctionComponentsTemplate(BlazorPageServiceModel model)\n+        {\n+            _model = model;\n+            _typeConvertor = new ABITypeToCSharpType();\n+            _commonGenerators = new CommonGenerators();\n+        }\n+\n+        public string GenerateComponents(bool includeDeploymentComponent = false)\n+        {\n+            var components = new List<string>();\n+\n+            if (includeDeploymentComponent)\n+            {\n+                var deploymentComponent = GenerateDeploymentComponent();\n+                if (!string.IsNullOrWhiteSpace(deploymentComponent))\n+                {\n+                    components.Add(deploymentComponent);\n+                }\n+            }\n+\n+            components.AddRange(_model.ContractABI.Functions\n+                .Select(GenerateComponent)\n+                .Where(x => !string.IsNullOrWhiteSpace(x)));\n+\n+            return string.Join(Environment.NewLine + Environment.NewLine, components);\n+        }\n+\n+        public string GenerateComponent(FunctionABI functionABI)\n+        {\n+            var functionModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.CSharp);\n+            var functionCqsModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace, null);\n+            var outputDtoModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace, null);\n+\n+            var messageType = functionCqsModel.GetTypeName();\n+            var serviceType = $\"typeof({_model.GetServiceTypeName()})\";\n+            var functionNameUpper = _commonGenerators.GenerateClassName(functionABI.Name);\n+            var title = functionABI.Name;\n+\n+            if (functionModel.IsTransaction())\n+            {\n+                return\n+$@\"{SpaceUtils.Two___Tabs}<TransactionFunctionComponent TFunctionMessage=\"\"{messageType}\"\"\n+{SpaceUtils.Three____Tabs}Title=\"\"{title}\"\"\n+{SpaceUtils.Three____Tabs}ContractAddress=\"\"@ContractAddress\"\"\n+{SpaceUtils.Three____Tabs}HostProvider=\"\"selectedHostProviderService\"\"\n+{SpaceUtils.Three____Tabs}ServiceType=\"\"{serviceType}\"\"\n+{SpaceUtils.Three____Tabs}ServiceRequestMethodName=\"\"{functionNameUpper}RequestAsync\"\"\n+{SpaceUtils.Three____Tabs}ServiceRequestAndWaitForReceiptMethodName=\"\"{functionNameUpper}RequestAndWaitForReceiptAsync\"\" />\";\n+            }\n+\n+            if (!functionModel.IsTransaction())\n+            {\n+                string outputType;\n+                if (functionModel.IsMultipleOutput())\n+                {\n+                    outputType = outputDtoModel.GetTypeName();\n+                }\n+                else if (functionModel.IsSingleOutput())\n+                {\n+                    outputType = functionModel.GetSingleOutputReturnType();\n+                }\n+                else\n+                {\n+                    return null;\n+                }\n+\n+                return\n+$@\"{SpaceUtils.Two___Tabs}<QueryFunctionComponent TFunctionMessage=\"\"{messageType}\"\" TFunctionOutput=\"\"{outputType}\"\"\n+{SpaceUtils.Three____Tabs}Title=\"\"{title}\"\"\n+{SpaceUtils.Three____Tabs}ContractAddress=\"\"@ContractAddress\"\"\n+{SpaceUtils.Three____Tabs}HostProvider=\"\"selectedHostProviderService\"\"\n+{SpaceUtils.Three____Tabs}ServiceType=\"\"{serviceType}\"\"\n+{SpaceUtils.Three____Tabs}ServiceMethodName=\"\"{functionNameUpper}QueryAsync\"\" />\";\n+            }\n+            return null;\n+        }\n+\n+        public string GenerateDeploymentComponent()\n+        {\n+           \n+            if (string.IsNullOrWhiteSpace(_model.GetContractDeploymentTypeName()))\n+                return null;\n+\n+            var deploymentType = _model.GetContractDeploymentTypeName();\n+            var serviceType = $\"typeof({_model.GetServiceTypeName()})\";\n+\n+            return\n+$@\"{SpaceUtils.Two___Tabs}<ContractDeploymentComponent TDeploymentMessage=\"\"{deploymentType}\"\"\n+{SpaceUtils.Three____Tabs}HostProvider=\"\"selectedHostProviderService\"\"\n+{SpaceUtils.Three____Tabs}ServiceType=\"\"{serviceType}\"\"\n+{SpaceUtils.Three____Tabs}ContractAddressChanged=\"\"ContractAddressChanged\"\" />\";\n+        }\n+    }\n+}"},{"sha":"a7050723ef966aa49c4bf2dd24a7eeb5c33b25fe","filename":"generators/Nethereum.Generators/BlazorServicePage/CSharp/BlazorPageServiceCSharpRazorTemplate.cs","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorPageServiceCSharpRazorTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorPageServiceCSharpRazorTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FBlazorServicePage%2FCSharp%2FBlazorPageServiceCSharpRazorTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,53 @@\n+using Nethereum.Generators.Core;\n+using Nethereum.Generators.CQS;\n+\n+namespace Nethereum.Generators.Service\n+{\n+\n+    public class BlazorPageServiceCSharpRazorTemplate: ClassTemplateBase\n+    {\n+        private BlazorFunctionComponentsTemplate _blazorFunctionComponentsTemplate;\n+        public BlazorPageServiceModel Model => (BlazorPageServiceModel)ClassModel;\n+\n+        public BlazorPageServiceCSharpRazorTemplate(BlazorPageServiceModel model): base(model)\n+        {\n+            System.Console.WriteLine(\"Initialising BlazorPageServiceCSharpRazorTemplate\");\n+            _blazorFunctionComponentsTemplate = new BlazorFunctionComponentsTemplate(model);\n+            ClassFileTemplate = new RazorClassFileTemplate(Model, this);\n+            System.Console.WriteLine(\"Finished Initialising BlazorPageServiceCSharpRazorTemplate\");\n+        }\n+\n+        public override string GenerateClass()\n+        {\n+\n+            var components = _blazorFunctionComponentsTemplate.GenerateComponents(includeDeploymentComponent: true);\n+\n+            return\n+$@\"@page \"\"/{Model.ContractName.ToLowerInvariant()}\"\"\n+@page \"\"/{Model.ContractName.ToLowerInvariant()}/{{ContractAddress}}\"\"\n+\n+@inject SelectedEthereumHostProviderService selectedHostProviderService\n+\n+<MudContainer MaxWidth=\"\"MaxWidth.Medium\"\" Class=\"\"mt-4\"\">\n+\n+{SpaceUtils.Two___Tabs}<MudText Typo=\"\"Typo.h5\"\" Class=\"\"mb-4\"\">{Model.ContractName}</MudText>\n+\n+{SpaceUtils.Two___Tabs}<MudTextField @bind-Value=\"\"ContractAddress\"\" Label=\"\"{Model.ContractName} Contract Address\"\" Variant=\"\"Variant.Outlined\"\" Class=\"\"mb-4\"\" />\n+\n+{components}\n+\n+</MudContainer>\n+\n+@code\n+{SpaceUtils.One__Tab}{{\n+{SpaceUtils.One__Tab}[Parameter]\n+{SpaceUtils.One__Tab}public string ContractAddress {{ get; set; }}\n+\n+{SpaceUtils.Two___Tabs}private void ContractAddressChanged(string address)\n+{SpaceUtils.Two___Tabs}{{\n+{SpaceUtils.Three____Tabs}ContractAddress = address;\n+{SpaceUtils.Two___Tabs}}}\n+{SpaceUtils.One__Tab}}}\";\n+        }\n+    }\n+}"},{"sha":"1b682b67b48368715635388727ba6317fa882843","filename":"generators/Nethereum.Generators/CQS/CSharp/ContractDeploymentCQSMessageCSharpTemplate.cs","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FContractDeploymentCQSMessageCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FContractDeploymentCQSMessageCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FContractDeploymentCQSMessageCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,7 +4,7 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class ContractDeploymentCQSMessageCSharpTemplate : ClassTemplateBase<ContractDeploymentCQSMessageModel>\n+    public class ContractDeploymentCQSMessageCSharpTemplate : ClassTemplateBase\n     {\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiFunctionDtocSharpTemplate;\n \n@@ -14,9 +14,11 @@ public ContractDeploymentCQSMessageCSharpTemplate(ContractDeploymentCQSMessageMo\n             ClassFileTemplate = new CSharpClassFileTemplate(model, this);\n         }\n \n+        public ContractDeploymentCQSMessageModel Model => (ContractDeploymentCQSMessageModel)ClassModel;\n+\n         public override string GenerateClass()\n         {\n-            var typeName = Model.GetTypeName();\n+            var typeName = ClassModel.GetTypeName();\n             return\n                 $@\"{GetPartialMainClass()}\n \n@@ -31,7 +33,7 @@ public override string GenerateClass()\n \n         public string GetPartialMainClass()\n         {\n-            var typeName = Model.GetTypeName();\n+            var typeName = ClassModel.GetTypeName();\n \n             return $@\"{SpaceUtils.One__Tab}public partial class {typeName} : {typeName}Base\n {SpaceUtils.One__Tab}{{"},{"sha":"ca4b3909c0ef1d98cae259f60af619010bb12b0a","filename":"generators/Nethereum.Generators/CQS/CSharp/FunctionCQSMessageCSharpTemplate.cs","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FFunctionCQSMessageCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FFunctionCQSMessageCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FCSharp%2FFunctionCQSMessageCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,8 +4,10 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class FunctionCQSMessageCSharpTemplate : ClassTemplateBase<FunctionCQSMessageModel>\n+    public class FunctionCQSMessageCSharpTemplate : ClassTemplateBase\n     {\n+        public FunctionCQSMessageModel Model => (FunctionCQSMessageModel)ClassModel;\n+\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiFunctionDtocSharpTemplate;\n         private FunctionOutputDTOModel _functionOutputDTOModel;\n         private FunctionABIModel _functionABIModel;\n@@ -18,6 +20,7 @@ public FunctionCQSMessageCSharpTemplate(FunctionCQSMessageModel model, FunctionO\n             ClassFileTemplate = new CSharpClassFileTemplate(model, this);\n         }\n \n+\n         public override string GenerateClass()\n         {\n             var functionABI = Model.FunctionABI;"},{"sha":"7d8191b7027a683ca7d96b60652e75a4c61ddc3f","filename":"generators/Nethereum.Generators/CQS/ContractDeploymentCQSMessageGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,7 +4,7 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class ContractDeploymentCQSMessageGenerator: ClassGeneratorBase<ClassTemplateBase<ContractDeploymentCQSMessageModel>, ContractDeploymentCQSMessageModel>\n+    public class ContractDeploymentCQSMessageGenerator: ClassGeneratorBase<ContractDeploymentCQSMessageModel>\n     {\n         public ContractDeploymentCQSMessageGenerator(ConstructorABI abi, string namespaceName, string byteCode, string contractName, CodeGenLanguage codeGenLanguage)\n         {"},{"sha":"30b2f25fb4e5afcc6b7fdc7b220fbcdee27abb13","filename":"generators/Nethereum.Generators/CQS/ContractDeploymentCQSMessageModel.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FContractDeploymentCQSMessageModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,11 @@ public class ContractDeploymentCQSMessageModel:TypeMessageModel\n         public ConstructorABI ConstructorABI { get; }\n         public string ByteCode { get; }\n \n+        public static string GetDefaultTypeName(string name)\n+        {\n+           return GetDefaultTypeName(name, \"Deployment\");\n+        }\n+\n         public ContractDeploymentCQSMessageModel(ConstructorABI constructorABI, string @namespace, string byteCode, string contractName)\n             :base(@namespace, contractName, \"Deployment\")\n         {"},{"sha":"ef0068a95a35c05ce1ca184ce86a7add829a9b5e","filename":"generators/Nethereum.Generators/CQS/FSharp/ContractDeploymentCQSMessageFSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FContractDeploymentCQSMessageFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FContractDeploymentCQSMessageFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FContractDeploymentCQSMessageFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,7 +3,7 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class ContractDeploymentCQSMessageFSharpTemplate : ClassTemplateBase<ContractDeploymentCQSMessageModel>\n+    public class ContractDeploymentCQSMessageFSharpTemplate : ClassTemplateBase\n     {\n         private ParameterABIFunctionDTOFSharpTemplate _parameterAbiFunctionDtoFSharpTemplate;\n \n@@ -12,6 +12,7 @@ public ContractDeploymentCQSMessageFSharpTemplate(ContractDeploymentCQSMessageMo\n             _parameterAbiFunctionDtoFSharpTemplate = new ParameterABIFunctionDTOFSharpTemplate();\n             ClassFileTemplate = new FSharpClassFileTemplate(model, this);\n         }\n+        public ContractDeploymentCQSMessageModel Model => (ContractDeploymentCQSMessageModel)ClassModel;\n \n         public override string GenerateClass()\n         {"},{"sha":"95e2515112803cc2e2f8329a79f096b1985c1883","filename":"generators/Nethereum.Generators/CQS/FSharp/FunctionCQSMessageFSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FFunctionCQSMessageFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FFunctionCQSMessageFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FFSharp%2FFunctionCQSMessageFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class FunctionCQSMessageFSharpTemplate : ClassTemplateBase<FunctionCQSMessageModel>\n+    public class FunctionCQSMessageFSharpTemplate : ClassTemplateBase\n     {\n+        public FunctionCQSMessageModel Model => (FunctionCQSMessageModel)ClassModel;\n+\n         private ParameterABIFunctionDTOFSharpTemplate _parameterAbiFunctionDtoFSharpTemplate;\n         private FunctionOutputDTOModel _functionOutputDTOModel;\n         private FunctionABIModel _functionABIModel;"},{"sha":"ada3553f2440d57a73dd71a3ce42f2e1ffa31bf9","filename":"generators/Nethereum.Generators/CQS/FunctionCQSMessageGenerator.cs","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,19 +6,19 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class FunctionCQSMessageGenerator : ClassGeneratorBase<ClassTemplateBase<FunctionCQSMessageModel>, FunctionCQSMessageModel>\n+    public class FunctionCQSMessageGenerator : ClassGeneratorBase<FunctionCQSMessageModel>\n     {\n         public FunctionABI FunctionABI { get; }\n         public string MudNamespace { get; set; }\n \n-        public FunctionCQSMessageGenerator(FunctionABI functionABI, string @namespace, string namespaceFunctionOutput, CodeGenLanguage codeGenLanguage, string mudNamespace = null)\n+        public FunctionCQSMessageGenerator(FunctionABI functionABI, string @namespace, string namespaceFunctionOutput, string sharedTypesNamespace, CodeGenLanguage codeGenLanguage, string mudNamespace = null)\n         {\n             FunctionABI = functionABI;\n             MudNamespace = mudNamespace;\n-            ClassModel = new FunctionCQSMessageModel(FunctionABI, @namespace);\n+            ClassModel = new FunctionCQSMessageModel(FunctionABI, @namespace, sharedTypesNamespace);\n             ClassModel.NamespaceDependencies.Add(namespaceFunctionOutput);\n             ClassModel.CodeGenLanguage = codeGenLanguage;\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, namespaceFunctionOutput);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, namespaceFunctionOutput, sharedTypesNamespace);\n             InitialiseTemplate(codeGenLanguage, functionOutputDTOModel);\n         }\n "},{"sha":"f1b9526511106713c40f61ab4adabbe58b3fb606","filename":"generators/Nethereum.Generators/CQS/FunctionCQSMessageModel.cs","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FFunctionCQSMessageModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,16 +7,16 @@ public class FunctionCQSMessageModel:TypeMessageModel\n     {\n         public FunctionABI FunctionABI { get; }\n         \n-        public FunctionCQSMessageModel(FunctionABI functionABI, string @namespace):\n+        public FunctionCQSMessageModel(FunctionABI functionABI, string @namespace, string sharedTypesNamespace) :\n             base(@namespace, functionABI.GetFunctionTypeNameBasedOnOverloads(), \"Function\")\n         {\n             FunctionABI = functionABI;\n-            InitisialiseNamespaceDependencies();\n+            InitialiseNamespaceDependencies(sharedTypesNamespace);\n         }\n \n-        private void InitisialiseNamespaceDependencies()\n+        private void InitialiseNamespaceDependencies(string sharedTypesNamespace)\n         {\n-            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.Contracts\", \"Nethereum.ABI.FunctionEncoding.Attributes\" });\n+            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.Contracts\", \"Nethereum.ABI.FunctionEncoding.Attributes\", sharedTypesNamespace });\n         }\n \n "},{"sha":"6cfb882afa69bc212366b408f59544d341597b85","filename":"generators/Nethereum.Generators/CQS/Vb/ContractDeploymentCQSMessageVbTemplate.cs","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FVb%2FContractDeploymentCQSMessageVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FVb%2FContractDeploymentCQSMessageVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FVb%2FContractDeploymentCQSMessageVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class ContractDeploymentCQSMessageVbTemplate : ClassTemplateBase<ContractDeploymentCQSMessageModel>\n+    public class ContractDeploymentCQSMessageVbTemplate : ClassTemplateBase\n     {\n+        public ContractDeploymentCQSMessageModel Model => (ContractDeploymentCQSMessageModel)ClassModel;\n+\n         private ParameterABIFunctionDTOVbTemplate _parameterAbiFunctionDtovbTemplate;\n \n         public ContractDeploymentCQSMessageVbTemplate(ContractDeploymentCQSMessageModel model) : base(model)\n@@ -13,9 +15,11 @@ public ContractDeploymentCQSMessageVbTemplate(ContractDeploymentCQSMessageModel\n             ClassFileTemplate = new VbClassFileTemplate(model, this);\n         }\n \n+        \n+\n         public override string GenerateClass()\n         {\n-            var typeName = Model.GetTypeName();\n+            var typeName = ClassModel.GetTypeName();\n             return\n                 $@\"{GetPartialMainClass()}\n \n@@ -39,7 +43,7 @@ public override string GenerateClass()\n \n         public string GetPartialMainClass()\n         {\n-            var typeName = Model.GetTypeName();\n+            var typeName = ClassModel.GetTypeName();\n \n             return $@\"{SpaceUtils.One__Tab}Public Partial Class {typeName}\n {SpaceUtils.One__Tab} Inherits {typeName}Base"},{"sha":"01f16bb5d265102652ab6cd8a25e88666a5abc62","filename":"generators/Nethereum.Generators/CQS/Vb/FunctionCQSMessageVbTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FVb%2FFunctionCQSMessageVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCQS%2FVb%2FFunctionCQSMessageVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCQS%2FVb%2FFunctionCQSMessageVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.CQS\n {\n-    public class FunctionCQSMessageVbTemplate : ClassTemplateBase<FunctionCQSMessageModel>\n+    public class FunctionCQSMessageVbTemplate : ClassTemplateBase\n     {\n+        public FunctionCQSMessageModel Model => (FunctionCQSMessageModel)ClassModel;\n+\n         private ParameterABIFunctionDTOVbTemplate _parameterAbiFunctionDtovbTemplate;\n         private FunctionOutputDTOModel _functionOutputDTOModel;\n         private FunctionABIModel _functionABIModel;"},{"sha":"907e2359066be1e44dff646a845da491bef72b3a","filename":"generators/Nethereum.Generators/Console/CSharp/ConsoleCSharpTemplate.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FConsoleCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FConsoleCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FConsoleCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,21 +3,21 @@\n \n namespace Nethereum.Generators.Console.CSharp\n {\n-    public class ConsoleCSharpTemplate: ClassTemplateBase<ConsoleModel>\n+    public class ConsoleCSharpTemplate: ClassTemplateBase\n     {\n         private FunctionMockupMethodCSharpTemplate _functionMockupMethodCSharp;\n         private ContractDeploymentMockUpMethodCSharpTemplate _deploymentMockUpMethodCSharpTemplate;\n         public ConsoleCSharpTemplate(ConsoleModel model):base(model)\n         {\n             _functionMockupMethodCSharp = new FunctionMockupMethodCSharpTemplate(model.ContractABI);\n             _deploymentMockUpMethodCSharpTemplate = new ContractDeploymentMockUpMethodCSharpTemplate(model.ContractDeploymentCQSMessageModel);\n-            ClassFileTemplate = new CSharpClassFileTemplate(Model, this);\n+            ClassFileTemplate = new CSharpClassFileTemplate(ClassModel, this);\n         }\n \n         public override string GenerateClass()\n         {\n             return\n-                $@\"{SpaceUtils.One__Tab}public class {Model.GetTypeName()}\n+                $@\"{SpaceUtils.One__Tab}public class {ClassModel.GetTypeName()}\n {SpaceUtils.One__Tab}{{\n {SpaceUtils.Two___Tabs}public static async Task Main()\n {SpaceUtils.Two___Tabs}{{"},{"sha":"5f256dd7858465eedec7d3801043fbad6d070206","filename":"generators/Nethereum.Generators/Console/CSharp/FunctionMockupMethodCSharpTemplate.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FFunctionMockupMethodCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FFunctionMockupMethodCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FConsole%2FCSharp%2FFunctionMockupMethodCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -39,8 +39,8 @@ private string GetFunctionDisplay(FunctionABI functionAbi)\n \n         public string GenerateMethod(FunctionABI functionABI)\n         {\n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, null);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, null);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, null, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, null, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.CSharp);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"85f6520bb448cc52e41f9db12af85578941729ff","filename":"generators/Nethereum.Generators/Console/ConsoleGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FConsoleGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FConsoleGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FConsole%2FConsoleGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,7 +8,7 @@\n \n namespace Nethereum.Generators.Console\n {\n-    public class ConsoleGenerator : ClassGeneratorBase<ClassTemplateBase<ConsoleModel>, ConsoleModel>\n+    public class ConsoleGenerator : ClassGeneratorBase<ConsoleModel>\n     {\n         public  ContractABI ContractABI { get; }\n "},{"sha":"a3c72389c37e2009f2037a7206a8eadb861ff79b","filename":"generators/Nethereum.Generators/Console/Vb/ConsoleVbTemplate.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FVb%2FConsoleVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FVb%2FConsoleVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FConsole%2FVb%2FConsoleVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,15 +3,15 @@\n \n namespace Nethereum.Generators.Console.Vb\n {\n-    public class ConsoleVbTemplate: ClassTemplateBase<ConsoleModel>\n+    public class ConsoleVbTemplate: ClassTemplateBase\n     {\n         private FunctionMockupMethodVbTemplate _functionMockupMethodVb;\n         private ContractDeploymentMockUpMethodVbTemplate _contractDeploymentMockUpMethodVb;\n         public ConsoleVbTemplate(ConsoleModel model):base(model)\n         {\n             _functionMockupMethodVb = new FunctionMockupMethodVbTemplate(model.ContractABI);\n             _contractDeploymentMockUpMethodVb = new ContractDeploymentMockUpMethodVbTemplate(model.ContractDeploymentCQSMessageModel);\n-            ClassFileTemplate = new VbClassFileTemplate(Model, this);\n+            ClassFileTemplate = new VbClassFileTemplate(ClassModel, this);\n         }\n \n         public override string GenerateClass()"},{"sha":"c75d6d3e524801cf1cb7eab1b1adeb832ace5dce","filename":"generators/Nethereum.Generators/Console/Vb/FunctionMockupMethodVbTemplate.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FVb%2FFunctionMockupMethodVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FConsole%2FVb%2FFunctionMockupMethodVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FConsole%2FVb%2FFunctionMockupMethodVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -40,8 +40,8 @@ private string GetFunctionDisplay(FunctionABI functionAbi)\n \n         public string GenerateMethod(FunctionABI functionABI)\n         {\n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, null);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, null);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, null, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, null, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.Vb);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"f64e8e2fad8ff748621bfd7533968ab525944c14","filename":"generators/Nethereum.Generators/ContractProjectGenerator.cs","status":"modified","additions":237,"deletions":14,"changes":251,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FContractProjectGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FContractProjectGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FContractProjectGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -15,6 +15,7 @@ namespace Nethereum.Generators\n \n     public class ContractProjectGenerator\n     {\n+       \n         public ContractABI ContractABI { get; }\n         public string ContractName { get; }\n         public string ByteCode { get; }\n@@ -29,6 +30,9 @@ public class ContractProjectGenerator\n         private string ProjectName { get; }\n \n         public string MudNamespace { get; set; }\n+        public string[] SharedGeneratedTypes { get; }\n+\n+        public string SharedTypesNamespace { get; }\n \n         public ContractProjectGenerator(ContractABI contractABI,\n             string contractName,\n@@ -37,6 +41,8 @@ public ContractProjectGenerator(ContractABI contractABI,\n             string serviceNamespace,\n             string cqsNamespace,\n             string dtoNamespace,\n+            string sharedTypesNamespace,\n+            string[] sharedGeneratedTypes,\n             string baseOutputPath,\n             string pathDelimiter,\n             CodeGenLanguage codeGenLanguage)\n@@ -59,34 +65,152 @@ public ContractProjectGenerator(ContractABI contractABI,\n                         BaseOutputPath.LastIndexOf(PathDelimiter) + PathDelimiter.Length);\n                 }\n             }\n+\n+            if (sharedGeneratedTypes == null)\n+            {\n+                SharedGeneratedTypes = new string[0];\n+            }\n+            else\n+            {\n+                SharedGeneratedTypes = sharedGeneratedTypes;\n+            }\n+\n+            \n+            SharedTypesNamespace = sharedTypesNamespace;\n+            \n         }\n \n         public GeneratedFile[] GenerateAllMessagesFileAndService()\n         {\n             var generated = new List<GeneratedFile>();\n             generated.Add(GenerateAllMessages());\n+            //always individual files for structs\n             generated.AddRange(GenerateAllStructs());\n+            \n+            if (AreFunctionsSharedGenerated())\n+            {\n+                generated.AddRange(GenerateAllFunctionDTOs());\n+                generated.AddRange(GenerateCQSFunctionMessages());\n+            }\n+\n+            if (AreEventsSharedGenerated())\n+            {\n+                generated.AddRange(GenerateAllEventDTOs());\n+            }\n+\n+            if (AreErrorsSharedGenerated())\n+            {\n+                generated.AddRange(GenerateAllErrorDTOs());\n+            }\n             generated.Add(GenerateService(singleMessagesFile:true));\n             return generated.ToArray();\n         }\n \n+        public bool AreStructsSharedGenerated()\n+        {\n+           if(!string.IsNullOrEmpty(SharedTypesNamespace))\n+           {\n+               return true;\n+           }\n+           return false;\n+        }\n+\n+        public bool HasSharingSettings()\n+        {\n+            return !string.IsNullOrEmpty(SharedTypesNamespace) && SharedGeneratedTypes != null && SharedGeneratedTypes.Length > 0;\n+        }\n \n-        public GeneratedFile GenerateAllMessages()\n+        public bool AreFunctionsSharedGenerated()\n+        {\n+            if(HasSharingSettings())\n+            {\n+                for(int i = 0; i < SharedGeneratedTypes.Length; i++)\n+                {\n+                    if (SharedGeneratedTypes[i].ToLower() == \"functions\")\n+                    {\n+                        return true;\n+                    }\n+                }\n+            }\n+            return false;\n+        }\n+\n+        public bool AreErrorsSharedGenerated()\n+        {\n+            if (HasSharingSettings())\n+            {\n+                for (int i = 0; i < SharedGeneratedTypes.Length; i++)\n+                {\n+                    if (SharedGeneratedTypes[i].ToLower() == \"errors\")\n+                    {\n+                        return true;\n+                    }\n+                }\n+            }\n+            return false;\n+        }\n+\n+        public bool AreEventsSharedGenerated()\n+        {\n+            if (HasSharingSettings())\n+            {\n+                for (int i = 0; i < SharedGeneratedTypes.Length; i++)\n+                {\n+                    if (SharedGeneratedTypes[i].ToLower() == \"events\")\n+                    {\n+                        return true;\n+                    }\n+                }\n+            }\n+            return false;\n+        }\n+\n+        public GeneratedFile GenerateAllMessages(bool generateStructs = false)\n         {\n             var cqsFullNamespace = GetFullNamespace(CQSNamespace);\n-            var cqsFullPath = GetFullPath(CQSNamespace); ;\n+            var cqsFullPath = GetFullPath(CQSNamespace);\n+            var dtoFullNamespace = GetFullNamespace(DTONamespace);\n+            string sharedTypesFullNamespace = null;\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n \n             var generators = new List<IClassGenerator>();\n             generators.Add(GetCQSMessageDeploymentGenerator());\n-            generators.AddRange(GetAllCQSFunctionMessageGenerators());\n-            generators.AddRange(GetAllEventDTOGenerators());\n-            generators.AddRange(GetAllErrorDTOGenerators());\n-            generators.AddRange(GetAllFunctionDTOsGenerators());\n+\n+            if (!AreFunctionsSharedGenerated())\n+            {\n+                generators.AddRange(GetAllCQSFunctionMessageGenerators());\n+                generators.AddRange(GetAllFunctionDTOsGenerators());\n+            }\n+\n+            if (!AreEventsSharedGenerated())\n+            {\n+                generators.AddRange(GetAllEventDTOGenerators());\n+            }\n+\n+            if (generateStructs) \n+            { \n+                if (!AreStructsSharedGenerated())\n+                {\n+                    generators.AddRange(GetAllStructTypeGenerators());\n+                }\n+            }\n+\n+            if (!AreErrorsSharedGenerated())\n+            {\n+                generators.AddRange(GetAllErrorDTOGenerators());\n+            }\n+            \n             //using the same namespace..\n-            var mainGenerator = new AllMessagesGenerator(generators, ContractName, cqsFullNamespace, CodeGenLanguage);\n+            var mainGenerator = new AllMessagesGenerator (generators, ContractName, cqsFullNamespace, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n             return mainGenerator.GenerateFileContent(cqsFullPath);\n         }\n \n+       \n+\n         public GeneratedFile[] GenerateAll()\n         {\n             var generated = new List<GeneratedFile>();\n@@ -106,9 +230,15 @@ public GeneratedFile GenerateService(bool singleMessagesFile = false)\n             dtoFullNamespace = singleMessagesFile ? string.Empty : FullyQualifyNamespaceFromImport(dtoFullNamespace);\n             cqsFullNamespace = FullyQualifyNamespaceFromImport(cqsFullNamespace);\n \n+            string sharedTypesFullNamespace = null;\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n             var serviceFullNamespace = GetFullNamespace(ServiceNamespace);\n             var serviceFullPath = GetFullPath(ServiceNamespace);\n-            var serviceGenerator = new ServiceGenerator(ContractABI, ContractName, ByteCode, serviceFullNamespace, cqsFullNamespace, dtoFullNamespace, CodeGenLanguage);\n+            var serviceGenerator = new ServiceGenerator(ContractABI, ContractName, ByteCode, serviceFullNamespace, cqsFullNamespace, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n             return serviceGenerator.GenerateFileContent(serviceFullPath);\n         }\n \n@@ -120,9 +250,15 @@ public GeneratedFile GenerateMudService(string mudNamespace = null, bool singleM\n             dtoFullNamespace = singleMessagesFile ? string.Empty : FullyQualifyNamespaceFromImport(dtoFullNamespace);\n             cqsFullNamespace = FullyQualifyNamespaceFromImport(cqsFullNamespace);\n \n+            string sharedTypesFullNamespace = null;\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n             var serviceFullNamespace = GetFullNamespace(ServiceNamespace);\n             var serviceFullPath = GetFullPath(ServiceNamespace);\n-            var serviceGenerator = new MudServiceGenerator(ContractABI, ContractName, ByteCode, serviceFullNamespace, cqsFullNamespace, dtoFullNamespace, CodeGenLanguage, mudNamespace);\n+            var serviceGenerator = new MudServiceGenerator(ContractABI, ContractName, ByteCode, serviceFullNamespace, cqsFullNamespace, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage, mudNamespace);\n             return serviceGenerator.GenerateFileContent(serviceFullPath);\n         }\n \n@@ -174,6 +310,12 @@ public List<GeneratedFile> GenerateAllFunctionDTOs()\n         {\n             var generators = GetAllFunctionDTOsGenerators();\n             var dtoFullPath = GetFullPath(DTONamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreFunctionsSharedGenerated())\n+            {\n+                dtoFullPath = GetFullPath(SharedTypesNamespace);\n+            }\n+\n             var generated = new List<GeneratedFile>();\n             foreach (var generator in generators)\n             {\n@@ -186,6 +328,12 @@ public List<GeneratedFile> GenerateAllStructs()\n         {\n             var generators = GetAllStructTypeGenerators();\n             var structFullPath = GetFullPath(DTONamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreStructsSharedGenerated())\n+            {\n+                structFullPath = GetFullPath(SharedTypesNamespace);\n+            }\n+            \n             var generated = new List<GeneratedFile>();\n             foreach (var generator in generators)\n             {\n@@ -194,9 +342,16 @@ public List<GeneratedFile> GenerateAllStructs()\n             return generated;\n         }\n \n+\n         public List<StructTypeGenerator> GetAllStructTypeGenerators()\n         {\n             var structTypeNamespace = GetFullNamespace(DTONamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreStructsSharedGenerated())\n+            {\n+                structTypeNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n             var generators = new List<StructTypeGenerator>();\n             foreach (var structAbi in ContractABI.Structs)\n             {\n@@ -209,10 +364,21 @@ public List<StructTypeGenerator> GetAllStructTypeGenerators()\n         public List<FunctionOutputDTOGenerator> GetAllFunctionDTOsGenerators()\n         {\n             var dtoFullNamespace = GetFullNamespace(DTONamespace);\n+            string sharedTypesFullNamespace = null;\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                if (AreFunctionsSharedGenerated())\n+                {\n+                    dtoFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+                }\n+\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n             var generators = new List<FunctionOutputDTOGenerator>();\n             foreach (var functionABI in ContractABI.Functions)\n             {\n-                var functionOutputDTOGenerator = new FunctionOutputDTOGenerator(functionABI, dtoFullNamespace, CodeGenLanguage);\n+                var functionOutputDTOGenerator = new FunctionOutputDTOGenerator(functionABI, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n                 generators.Add(functionOutputDTOGenerator);\n             }\n             return generators;\n@@ -222,6 +388,12 @@ public List<GeneratedFile> GenerateAllEventDTOs()\n         {\n             var generators = GetAllEventDTOGenerators();\n             var dtoFullPath = GetFullPath(DTONamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreEventsSharedGenerated())\n+            {\n+                dtoFullPath = GetFullPath(SharedTypesNamespace);\n+            }\n+\n             var generated = new List<GeneratedFile>();\n             foreach (var generator in generators)\n             {\n@@ -234,6 +406,12 @@ public List<GeneratedFile> GenerateAllErrorDTOs()\n         {\n             var generators = GetAllErrorDTOGenerators();\n             var dtoFullPath = GetFullPath(DTONamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreErrorsSharedGenerated())\n+            {\n+                dtoFullPath = GetFullPath(SharedTypesNamespace);\n+            }\n+\n             var generated = new List<GeneratedFile>();\n             foreach (var generator in generators)\n             {\n@@ -245,10 +423,22 @@ public List<GeneratedFile> GenerateAllErrorDTOs()\n         public List<EventDTOGenerator> GetAllEventDTOGenerators()\n         {\n             var dtoFullNamespace = GetFullNamespace(DTONamespace);\n+            string sharedTypesFullNamespace = null;\n+            \n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                if(AreEventsSharedGenerated())\n+                {\n+                    dtoFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+                }\n+\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n             var generators = new List<EventDTOGenerator>();\n             foreach (var eventABI in ContractABI.Events)\n             {\n-                var generator = new EventDTOGenerator(eventABI, dtoFullNamespace, CodeGenLanguage);\n+                var generator = new EventDTOGenerator(eventABI, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n                 generators.Add(generator);\n             }\n             return generators;\n@@ -257,10 +447,23 @@ public List<EventDTOGenerator> GetAllEventDTOGenerators()\n         public List<ErrorDTOGenerator> GetAllErrorDTOGenerators()\n         {\n             var dtoFullNamespace = GetFullNamespace(DTONamespace);\n+            string sharedTypesFullNamespace = null;\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                if (AreErrorsSharedGenerated())\n+                {\n+                    dtoFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+                }\n+\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n+\n             var generators = new List<ErrorDTOGenerator>();\n             foreach (var errorABI in ContractABI.Errors)\n             {\n-                var generator = new ErrorDTOGenerator(errorABI, dtoFullNamespace, CodeGenLanguage);\n+                var generator = new ErrorDTOGenerator(errorABI, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage);\n                 generators.Add(generator);\n             }\n             return generators;\n@@ -269,7 +472,13 @@ public List<ErrorDTOGenerator> GetAllErrorDTOGenerators()\n         public List<GeneratedFile> GenerateCQSFunctionMessages()\n         {\n             var generators = GetAllCQSFunctionMessageGenerators();\n-            var cqsFullPath = GetFullPath(CQSNamespace);;\n+            var cqsFullPath = GetFullPath(CQSNamespace);\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace) && AreFunctionsSharedGenerated())\n+            {\n+                cqsFullPath = GetFullPath(SharedTypesNamespace);\n+            }\n+\n             var generated = new List<GeneratedFile>();\n             foreach (var generator in generators)\n             {\n@@ -286,10 +495,24 @@ public List<FunctionCQSMessageGenerator> GetAllCQSFunctionMessageGenerators()\n \n             dtoFullNamespace = FullyQualifyNamespaceFromImport(dtoFullNamespace);\n \n+            string sharedTypesFullNamespace = null;\n+\n+            if (!string.IsNullOrEmpty(SharedTypesNamespace))\n+            {\n+                if (AreFunctionsSharedGenerated())\n+                {\n+                    dtoFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+                    dtoFullNamespace = FullyQualifyNamespaceFromImport(dtoFullNamespace);\n+                }\n+\n+                sharedTypesFullNamespace = GetFullNamespace(SharedTypesNamespace);\n+            }\n+\n+\n             var generators = new List<FunctionCQSMessageGenerator>();\n             foreach (var functionAbi in ContractABI.Functions)\n             {\n-                var cqsGenerator = new FunctionCQSMessageGenerator(functionAbi, cqsFullNamespace, dtoFullNamespace, CodeGenLanguage, MudNamespace);\n+                var cqsGenerator = new FunctionCQSMessageGenerator(functionAbi, cqsFullNamespace, dtoFullNamespace, sharedTypesFullNamespace, CodeGenLanguage, MudNamespace);\n                 generators.Add(cqsGenerator);\n             }\n             return generators;"},{"sha":"9494ba3d4a639e1d3166e1a872bc67802c17f866","filename":"generators/Nethereum.Generators/Core/ClassGeneratorBase.cs","status":"modified","additions":4,"deletions":6,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FClassGeneratorBase.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FClassGeneratorBase.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FClassGeneratorBase.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,12 +1,10 @@\n namespace Nethereum.Generators.Core\n {\n-    public class ClassGeneratorBase<TClassTemplate, TClassModel> : IFileGenerator, IClassGenerator\n-        where TClassModel : TypeMessageModel\n-        where TClassTemplate : IClassTemplate\n-        \n+    public class ClassGeneratorBase<TMessageModel>: IFileGenerator, IClassGenerator\n+        where TMessageModel : TypeMessageModel\n     {\n-        protected TClassTemplate ClassTemplate { get; set; }\n-        public TClassModel ClassModel { get; set; }\n+        protected IClassTemplate ClassTemplate { get; set; }\n+        public TMessageModel ClassModel { get; set; }\n \n         public GeneratedFile GenerateFileContent(string outputPath)\n         {"},{"sha":"c73bff508019e0c3e174773b99fdb4e17e4b7f79","filename":"generators/Nethereum.Generators/Core/ClassTemplateBase.cs","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FClassTemplateBase.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FClassTemplateBase.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FClassTemplateBase.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,23 +3,23 @@\n namespace Nethereum.Generators.CQS\n {\n \n-    public abstract class ClassTemplateBase<TModel> : IClassTemplate\n-        where TModel: IClassModel\n+    public abstract class ClassTemplateBase: IClassTemplate\n     {\n         protected ClassFileTemplate ClassFileTemplate { get; set; }\n \n-        protected TModel Model { get; }\n+        protected IClassModel ClassModel { get; }\n \n         public abstract string GenerateClass();\n \n-        protected ClassTemplateBase(TModel model)\n+        protected ClassTemplateBase(IClassModel model)\n         {\n-            Model = model;\n+            ClassModel = model;\n         }\n \n         public string GenerateFullClass()\n         {\n             return ClassFileTemplate.GenerateFullClass();\n         }\n     }\n+\n }\n\\ No newline at end of file"},{"sha":"5179b7fd0b9542c03a44d841cdf77e7924c5e8a5","filename":"generators/Nethereum.Generators/Core/CodeGenLanguage.cs","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguage.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguage.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguage.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,6 +9,14 @@ public enum CodeGenLanguage\n         CSharp,\n         Vb,\n         Proto,\n-        FSharp\n+        FSharp,\n+        Razor\n+    }\n+\n+    public enum SharedDTOType\n+    {\n+        Functions,\n+        Events,\n+        Structs\n     }\n }"},{"sha":"26ba247647cbaca913c540a71b94e164bb92a80a","filename":"generators/Nethereum.Generators/Core/CodeGenLanguageExt.cs","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguageExt.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguageExt.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FCodeGenLanguageExt.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -122,6 +122,10 @@ public static string GetCodeOutputFileExtension(this CodeGenLanguage codeGenLang\n             {\n                 return \"fs\";\n             }\n+            else if (codeGenLanguage == CodeGenLanguage.Razor)\n+            {\n+                return \"razor\";\n+            }\n             else\n             {\n                 throw new ArgumentOutOfRangeException(nameof(codeGenLanguage), codeGenLanguage, null);"},{"sha":"7d756fe554cdd7049ff3f40ed9853d6acd5d5848","filename":"generators/Nethereum.Generators/Core/RazorClassFileTemplate.cs","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FRazorClassFileTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FRazorClassFileTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FRazorClassFileTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,26 @@\n+using Nethereum.Generators.Core;\n+\n+namespace Nethereum.Generators.CQS\n+{\n+    public class RazorClassFileTemplate : ClassFileTemplate\n+    {\n+        public RazorClassFileTemplate(IClassModel classModel, IClassTemplate classTemplate) : base(classModel, classTemplate)\n+        {\n+\n+        }\n+        public override string GenerateNamespaceDependency(string namespaceName)\n+        {\n+            return $@\"@using {namespaceName}\";\n+        }\n+        public override string GenerateFullClass()\n+        {\n+            return\n+                $@\"{GenerateNamespaceDependencies()}\n+{SpaceUtils.NoTabs}\n+{SpaceUtils.NoTabs}{ClassTemplate.GenerateClass()}\n+{SpaceUtils.NoTabs}\n+\";\n+        }\n+    }\n+\n+}\n\\ No newline at end of file"},{"sha":"d5e19c0a03f43c7e306b6b015d8308fc85dcaa9a","filename":"generators/Nethereum.Generators/Core/TypeMessageModel.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FTypeMessageModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FCore%2FTypeMessageModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FCore%2FTypeMessageModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -23,6 +23,11 @@ protected TypeMessageModel(string @namespace, string name, string classNameSuffi\n             CodeGenLanguage = CodeGenLanguage.CSharp;\n         }\n \n+        public static string GetDefaultTypeName(string name, string classNameSuffix)\n+        {\n+            return $\"{new CommonGenerators().GenerateClassName(name)}{classNameSuffix}\";\n+        }\n+\n         public virtual string GetTypeName(string name)\n         {\n             return $\"{CommonGenerators.GenerateClassName(name)}{ClassNameSuffix}\";"},{"sha":"d4ed309b34380c1787ce387558030055c023eb44","filename":"generators/Nethereum.Generators/DTOs/CSharp/ErrorDTOCSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FErrorDTOCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FErrorDTOCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FErrorDTOCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class ErrorDTOCSharpTemplate : ClassTemplateBase<ErrorDTOModel>\n+    public class ErrorDTOCSharpTemplate : ClassTemplateBase\n     {\n+        public ErrorDTOModel Model => (ErrorDTOModel)ClassModel;\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiErrorDtocSharpTemplate;\n         public ErrorDTOCSharpTemplate(ErrorDTOModel errorDTOModel) : base(errorDTOModel)\n         {"},{"sha":"4eb411fcc4f156f3552b1b388c77482ec7026708","filename":"generators/Nethereum.Generators/DTOs/CSharp/EventDTOCSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FEventDTOCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FEventDTOCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FEventDTOCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,8 +4,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class EventDTOCSharpTemplate: ClassTemplateBase<EventDTOModel>\n+    public class EventDTOCSharpTemplate: ClassTemplateBase\n     {\n+        public EventDTOModel Model => (EventDTOModel)ClassModel;\n+\n         private ParameterABIEventDTOCSharpTemplate _parameterAbiEventDtocSharpTemplate;\n         public EventDTOCSharpTemplate(EventDTOModel eventDTOModel):base(eventDTOModel)\n         {"},{"sha":"27bad5e0e0a6ec01bc8288131e65cd21498fb0b8","filename":"generators/Nethereum.Generators/DTOs/CSharp/FunctionOutputDTOCSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FFunctionOutputDTOCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FFunctionOutputDTOCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FFunctionOutputDTOCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,8 +4,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class FunctionOutputDTOCSharpTemplate: ClassTemplateBase<FunctionOutputDTOModel>\n+    public class FunctionOutputDTOCSharpTemplate: ClassTemplateBase\n     {\n+        public FunctionOutputDTOModel Model => (FunctionOutputDTOModel)ClassModel;\n+\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiFunctionDtocSharpTemplate;\n         public FunctionOutputDTOCSharpTemplate(FunctionOutputDTOModel model):base(model)\n         {"},{"sha":"42d7302ddee34bfe83f49f1b99c125dcc03182b9","filename":"generators/Nethereum.Generators/DTOs/CSharp/StructTypeCSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FStructTypeCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FStructTypeCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FCSharp%2FStructTypeCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class StructTypeCSharpTemplate : ClassTemplateBase<StructTypeModel>\n+    public class StructTypeCSharpTemplate : ClassTemplateBase\n     {\n+        public StructTypeModel Model => (StructTypeModel)ClassModel;\n+\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiFunctionDtocSharpTemplate;\n         public StructTypeCSharpTemplate(StructTypeModel model) : base(model)\n         {"},{"sha":"45fcd3048448ba05e16cf8f44d7232902f57449d","filename":"generators/Nethereum.Generators/DTOs/ErrorDTOGenerator.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,11 +5,11 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class ErrorDTOGenerator : ClassGeneratorBase<ClassTemplateBase<ErrorDTOModel>, ErrorDTOModel>\n+    public class ErrorDTOGenerator : ClassGeneratorBase<ErrorDTOModel>\n     {\n-        public ErrorDTOGenerator(ErrorABI abi, string @namespace, CodeGenLanguage codeGenLanguage)\n+        public ErrorDTOGenerator(ErrorABI abi, string @namespace, string sharedTypesNamespace, CodeGenLanguage codeGenLanguage)\n         {\n-            ClassModel = new ErrorDTOModel(abi, @namespace);\n+            ClassModel = new ErrorDTOModel(abi, @namespace, sharedTypesNamespace);\n             ClassModel.CodeGenLanguage = codeGenLanguage;\n             InitialiseTemplate(codeGenLanguage);\n         }"},{"sha":"021c0e7b2fd65133c9e681a415c937d985da8804","filename":"generators/Nethereum.Generators/DTOs/ErrorDTOModel.cs","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FErrorDTOModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,16 +7,16 @@ public class ErrorDTOModel : TypeMessageModel\n     {\n         public ErrorABI ErrorABI { get; }\n \n-        public ErrorDTOModel(ErrorABI errorABI, string @namespace)\n+        public ErrorDTOModel(ErrorABI errorABI, string @namespace, string sharedTypesNamespace)\n             : base(@namespace, errorABI.GetErrorTypeNameBasedOnOverloads(), \"Error\")\n         {\n             ErrorABI = errorABI;\n-            InitisialiseNamespaceDependencies();\n+            InitisialiseNamespaceDependencies(sharedTypesNamespace);\n         }\n \n-        private void InitisialiseNamespaceDependencies()\n+        private void InitisialiseNamespaceDependencies(string sharedTypesNamespace)\n         {\n-            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\" });\n+            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\", sharedTypesNamespace });\n         }\n \n         public bool HasParameters()"},{"sha":"d536c21ea2c6a6c77f1b1d1a712a7e5a2121c3cb","filename":"generators/Nethereum.Generators/DTOs/EventDTOGenerator.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FEventDTOGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FEventDTOGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FEventDTOGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,11 +5,11 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class EventDTOGenerator: ClassGeneratorBase<ClassTemplateBase<EventDTOModel>, EventDTOModel>\n+    public class EventDTOGenerator: ClassGeneratorBase<EventDTOModel>\n     { \n-        public EventDTOGenerator(EventABI abi, string @namespace, CodeGenLanguage codeGenLanguage)\n+        public EventDTOGenerator(EventABI abi, string @namespace, string sharedTypesNamespace, CodeGenLanguage codeGenLanguage)\n         {\n-            ClassModel = new EventDTOModel(abi, @namespace);\n+            ClassModel = new EventDTOModel(abi, @namespace, sharedTypesNamespace);\n             ClassModel.CodeGenLanguage = codeGenLanguage;\n             InitialiseTemplate(codeGenLanguage);\n         }"},{"sha":"8eda88f1594aef00d445389b9d3c70af2c90dc5c","filename":"generators/Nethereum.Generators/DTOs/EventDTOModel.cs","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FEventDTOModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FEventDTOModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FEventDTOModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,16 +7,16 @@ public class EventDTOModel:TypeMessageModel\n     {\n         public EventABI EventABI { get; }\n        \n-        public EventDTOModel(EventABI eventABI, string @namespace)\n+        public EventDTOModel(EventABI eventABI, string @namespace, string sharedTypesNamespace)\n             :base(@namespace, eventABI.GetEventTypeNameBasedOnOverloads(), \"EventDTO\")\n         {\n             EventABI = eventABI;\n-            InitisialiseNamespaceDependencies();\n+            InitisialiseNamespaceDependencies(sharedTypesNamespace);\n         }\n \n-        private void InitisialiseNamespaceDependencies()\n+        private void InitisialiseNamespaceDependencies(string sharedTypesNamespace)\n         {\n-            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\" });\n+            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\", sharedTypesNamespace });\n         }\n \n         public bool CanGenerateOutputDTO()"},{"sha":"2987110022ccd03e94e151f479a29ad23e7dd125","filename":"generators/Nethereum.Generators/DTOs/FSharp/ErrorDTOFSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FErrorDTOFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FErrorDTOFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FErrorDTOFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class ErrorDTOFSharpTemplate : ClassTemplateBase<ErrorDTOModel>\n+    public class ErrorDTOFSharpTemplate : ClassTemplateBase\n     {\n+        public ErrorDTOModel Model => (ErrorDTOModel)ClassModel;\n+\n         private ParameterABIFunctionDTOFSharpTemplate _parameterAbiErrorDtoFSharpTemplate;\n         public ErrorDTOFSharpTemplate(ErrorDTOModel errorDTOModel) : base(errorDTOModel)\n         {"},{"sha":"621829593a4aaffd0901a08bea2bafc464752d78","filename":"generators/Nethereum.Generators/DTOs/FSharp/EventDTOFSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FEventDTOFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FEventDTOFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FEventDTOFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class EventDTOFSharpTemplate : ClassTemplateBase<EventDTOModel>\n+    public class EventDTOFSharpTemplate : ClassTemplateBase\n     {\n+        public EventDTOModel Model => (EventDTOModel)ClassModel;\n+\n         private ParameterABIEventDTOFSharpTemplate _parameterAbiEventDtoFSharpTemplate;\n         public EventDTOFSharpTemplate(EventDTOModel eventDTOModel) : base(eventDTOModel)\n         {"},{"sha":"9801e29b682611ad9153a99244ff0bf63ae6f305","filename":"generators/Nethereum.Generators/DTOs/FSharp/FunctionOutputDTOFSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FFunctionOutputDTOFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FFunctionOutputDTOFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FFunctionOutputDTOFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class FunctionOutputDTOFSharpTemplate : ClassTemplateBase<FunctionOutputDTOModel>\n+    public class FunctionOutputDTOFSharpTemplate : ClassTemplateBase\n     {\n+        public FunctionOutputDTOModel Model => (FunctionOutputDTOModel)ClassModel;\n+\n         private ParameterABIFunctionDTOFSharpTemplate _parameterAbiFunctionDtoFSharpTemplate;\n         public FunctionOutputDTOFSharpTemplate(FunctionOutputDTOModel model) : base(model)\n         {"},{"sha":"dc69fe4422ee2ad76dbb0c5937dee77354e66d7c","filename":"generators/Nethereum.Generators/DTOs/FSharp/StructTypeFSharpTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FStructTypeFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FStructTypeFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFSharp%2FStructTypeFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class StructTypeFSharpTemplate : ClassTemplateBase<StructTypeModel>\n+    public class StructTypeFSharpTemplate : ClassTemplateBase\n     {\n+        public StructTypeModel Model => (StructTypeModel)ClassModel;\n+\n         private ParameterABIFunctionDTOFSharpTemplate _parameterAbiFunctionDtoFSharpTemplate;\n         public StructTypeFSharpTemplate(StructTypeModel model) : base(model)\n         {"},{"sha":"1e811a5ca0a7bfcd0669f6acc3ab2f373560ac2e","filename":"generators/Nethereum.Generators/DTOs/FunctionOutputDTOGenerator.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,12 +5,12 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class FunctionOutputDTOGenerator: ClassGeneratorBase<ClassTemplateBase<FunctionOutputDTOModel>,FunctionOutputDTOModel>\n+    public class FunctionOutputDTOGenerator: ClassGeneratorBase<FunctionOutputDTOModel>\n     {\n      \n-        public FunctionOutputDTOGenerator(FunctionABI functionABI, string @namespace, CodeGenLanguage codeGenLanguage)\n+        public FunctionOutputDTOGenerator(FunctionABI functionABI, string @namespace, string sharedTypesNamespace, CodeGenLanguage codeGenLanguage)\n         {\n-            ClassModel = new FunctionOutputDTOModel(functionABI, @namespace) {CodeGenLanguage = codeGenLanguage};\n+            ClassModel = new FunctionOutputDTOModel(functionABI, @namespace, sharedTypesNamespace) {CodeGenLanguage = codeGenLanguage};\n             InitialiseTemplate(codeGenLanguage);\n         }\n "},{"sha":"17ba18f04204f0a0baadf3d55b6e9abb2085357f","filename":"generators/Nethereum.Generators/DTOs/FunctionOutputDTOModel.cs","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FFunctionOutputDTOModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,16 +7,16 @@ public class FunctionOutputDTOModel: TypeMessageModel\n     {\n         public FunctionABI FunctionABI { get; }\n \n-        public FunctionOutputDTOModel(FunctionABI functionABI, string @namespace)\n+        public FunctionOutputDTOModel(FunctionABI functionABI, string @namespace, string sharedTypesNamespace)\n             :base(@namespace, functionABI.GetFunctionTypeNameBasedOnOverloads(), \"OutputDTO\")\n         {\n             FunctionABI = functionABI;\n-            InitisialiseNamespaceDependencies();\n+            InitialiseNamespaceDependencies(sharedTypesNamespace);\n         }\n \n-        private void InitisialiseNamespaceDependencies()\n+        private void InitialiseNamespaceDependencies(string sharedTypesNamespace)\n         {\n-            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\" });\n+            NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\", sharedTypesNamespace });\n         }\n \n         public bool CanGenerateOutputDTO()"},{"sha":"f26929c2a9dbd955d48d50c4fef1bb6e1f4691c9","filename":"generators/Nethereum.Generators/DTOs/StructTypeGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FStructTypeGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FStructTypeGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FStructTypeGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,7 +5,7 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class StructTypeGenerator : ClassGeneratorBase<ClassTemplateBase<StructTypeModel>, StructTypeModel>\n+    public class StructTypeGenerator : ClassGeneratorBase<StructTypeModel>\n     {\n \n         public StructTypeGenerator(StructABI structTypeABI, string @namespace, CodeGenLanguage codeGenLanguage)"},{"sha":"b0384ee749bcbd2a07ff9212fd679bcf6424602f","filename":"generators/Nethereum.Generators/DTOs/StructTypeModel.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FStructTypeModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FStructTypeModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FStructTypeModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -11,10 +11,10 @@ public StructTypeModel(StructABI structTypeABI, string @namespace)\n             : base(@namespace, structTypeABI.Name, \"\")\n         {\n             StructTypeABI = structTypeABI;\n-            InitisialiseNamespaceDependencies();\n+            InitialiseNamespaceDependencies();\n         }\n \n-        private void InitisialiseNamespaceDependencies()\n+        private void InitialiseNamespaceDependencies()\n         {\n             NamespaceDependencies.AddRange(new[] { \"System\", \"System.Threading.Tasks\", \"System.Collections.Generic\", \"System.Numerics\", \"Nethereum.Hex.HexTypes\", \"Nethereum.ABI.FunctionEncoding.Attributes\" });\n         }"},{"sha":"b63617068fdd3145ece22d7763f0384224e4f826","filename":"generators/Nethereum.Generators/DTOs/Vb/ErrorDTOVbTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FErrorDTOVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FErrorDTOVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FVb%2FErrorDTOVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class ErrorDTOVbTemplate : ClassTemplateBase<ErrorDTOModel>\n+    public class ErrorDTOVbTemplate : ClassTemplateBase\n     {\n+        public ErrorDTOModel Model => (ErrorDTOModel)ClassModel;\n         private ParameterABIFunctionDTOVbTemplate _parameterAbiErrorDtoVbTemplate;\n         public ErrorDTOVbTemplate(ErrorDTOModel errorDTOModel) : base(errorDTOModel)\n         {"},{"sha":"8de983956fd4e9ae8e0075b79449d1506b2f98e5","filename":"generators/Nethereum.Generators/DTOs/Vb/EventDTOVbTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FEventDTOVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FEventDTOVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FVb%2FEventDTOVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class EventDTOVbTemplate : ClassTemplateBase<EventDTOModel>\n+    public class EventDTOVbTemplate : ClassTemplateBase\n     {\n+        public EventDTOModel Model => (EventDTOModel)ClassModel;\n+\n         private ParameterABIEventDTOVbTemplate _parameterAbiEventDtoVbTemplate;\n         public EventDTOVbTemplate(EventDTOModel eventDTOModel) : base(eventDTOModel)\n         {"},{"sha":"c8d7b3e8ca0d8033be3392891a24a4b645c9d899","filename":"generators/Nethereum.Generators/DTOs/Vb/FunctionOutputDTOVbTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FFunctionOutputDTOVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FFunctionOutputDTOVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FVb%2FFunctionOutputDTOVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,10 @@\n \n namespace Nethereum.Generators.DTOs\n {\n-    public class FunctionOutputDTOVbTemplate : ClassTemplateBase<FunctionOutputDTOModel>\n+    public class FunctionOutputDTOVbTemplate : ClassTemplateBase\n     {\n+        public FunctionOutputDTOModel Model => (FunctionOutputDTOModel)ClassModel;\n+\n         private ParameterABIFunctionDTOVbTemplate _parameterAbiFunctionDtoVbTemplate;\n         public FunctionOutputDTOVbTemplate(FunctionOutputDTOModel model) : base(model)\n         {"},{"sha":"370584a28b9e54185236a2f0510a45b0af649177","filename":"generators/Nethereum.Generators/DTOs/Vb/StructTypeVbTemplate.cs","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FStructTypeVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FDTOs%2FVb%2FStructTypeVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FDTOs%2FVb%2FStructTypeVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,8 +4,10 @@\n namespace Nethereum.Generators.DTOs\n {\n \n-    public class StructTypeVbTemplate : ClassTemplateBase<StructTypeModel>\n+    public class StructTypeVbTemplate : ClassTemplateBase\n     {\n+        public StructTypeModel Model => (StructTypeModel)ClassModel;\n+\n         private ParameterABIFunctionDTOVbTemplate _parameterAbiFunctionDtoVbTemplate;\n         public StructTypeVbTemplate(StructTypeModel model) : base(model)\n         {"},{"sha":"c5baa1f9a83093218ffb84e3af830d9692459265","filename":"generators/Nethereum.Generators/MudService/CSharp/ServiceCSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FCSharp%2FServiceCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FCSharp%2FServiceCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudService%2FCSharp%2FServiceCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.MudService\n {\n-    public class MudServiceCSharpTemplate : ClassTemplateBase<MudServiceModel>\n+    public class MudServiceCSharpTemplate : ClassTemplateBase\n     {\n+        public MudServiceModel Model => (MudServiceModel)ClassModel;\n         public MudServiceCSharpTemplate(MudServiceModel model) : base(model)\n         {\n             ClassFileTemplate = new CSharpClassFileTemplate(Model, this);"},{"sha":"14e88631353b15f7ae3d55a3e596111419b8f584","filename":"generators/Nethereum.Generators/MudService/FSharp/MudServiceFSharpTemplate.cs","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FFSharp%2FMudServiceFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FFSharp%2FMudServiceFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudService%2FFSharp%2FMudServiceFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,8 +5,9 @@\n \n namespace Nethereum.Generators.MudService\n {\n-    public class MudServiceFSharpTemplate : ClassTemplateBase<MudServiceModel>\n+    public class MudServiceFSharpTemplate : ClassTemplateBase\n     {\n+        public MudServiceModel Model => (MudServiceModel)ClassModel;\n         public MudServiceFSharpTemplate(MudServiceModel model) : base(model)\n         {\n             \n@@ -18,7 +19,7 @@ public override string GenerateClass()\n            \n //            return\n //                $@\"\n-//{SpaceUtils.One__Tab}type {Model.GetTypeName()} (web3: Web3, contractAddress: string) =\n+//{SpaceUtils.One__Tab}type {ClassModel.GetTypeName()} (web3: Web3, contractAddress: string) =\n //{SpaceUtils.One__Tab}\n \n //{SpaceUtils.One__Tab}"},{"sha":"4c2b2b8b0546f8f23696da5b4da4d204b80c17b1","filename":"generators/Nethereum.Generators/MudService/MudServiceGenerator.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FMudServiceGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FMudServiceGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudService%2FMudServiceGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,14 +5,14 @@\n \n namespace Nethereum.Generators.MudService\n {\n-    public class MudServiceGenerator : ClassGeneratorBase<ClassTemplateBase<MudServiceModel>, MudServiceModel>\n+    public class MudServiceGenerator : ClassGeneratorBase<MudServiceModel>\n     {\n         public  ContractABI ContractABI { get; }\n \n-        public MudServiceGenerator(ContractABI contractABI, string contractName, string byteCode, string @namespace, string cqsNamespace, string functionOutputNamespace, CodeGenLanguage codeGenLanguage, string mudNamespace = null)\n+        public MudServiceGenerator(ContractABI contractABI, string contractName, string byteCode, string @namespace, string cqsNamespace, string functionOutputNamespace, string sharedTypesNamespace, CodeGenLanguage codeGenLanguage, string mudNamespace = null)\n         {\n             ContractABI = contractABI;\n-            ClassModel = new MudServiceModel(contractABI, contractName, byteCode, @namespace, cqsNamespace, functionOutputNamespace, mudNamespace);\n+            ClassModel = new MudServiceModel(contractABI, contractName, byteCode, @namespace, cqsNamespace, functionOutputNamespace, sharedTypesNamespace, mudNamespace);\n             ClassModel.CodeGenLanguage = codeGenLanguage;\n             InitialiseTemplate(codeGenLanguage);\n         }"},{"sha":"44b40198be0b3e90c93aef99c251ac221e669f0c","filename":"generators/Nethereum.Generators/MudService/MudServiceModel.cs","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FMudServiceModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FMudServiceModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudService%2FMudServiceModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,17 +9,19 @@ public class MudServiceModel:TypeMessageModel\n         public ContractABI ContractABI { get; }\n         public string CQSNamespace { get; }\n         public string FunctionOutputNamespace { get; }\n+        public string SharedTypesNamespace { get; }\n         public string MudNamespace { get; }\n         public ContractDeploymentCQSMessageModel ContractDeploymentCQSMessageModel { get; }\n \n         public MudServiceModel(ContractABI contractABI, string contractName, \n                             string byteCode, string @namespace, \n-                            string cqsNamespace, string functionOutputNamespace, string mudNamespace = \"\"):\n+                            string cqsNamespace, string functionOutputNamespace, string sharedTypesNamespace, string mudNamespace = \"\"):\n             base(@namespace, contractName, \"Service\")\n         {\n             ContractABI = contractABI;\n             CQSNamespace = cqsNamespace;\n             FunctionOutputNamespace = functionOutputNamespace;\n+            SharedTypesNamespace = sharedTypesNamespace;\n             MudNamespace = mudNamespace;\n             ContractDeploymentCQSMessageModel = new ContractDeploymentCQSMessageModel(contractABI.Constructor, cqsNamespace, byteCode, contractName);\n             InitialiseNamespaceDependencies();\n@@ -29,6 +31,9 @@ public MudServiceModel(ContractABI contractABI, string contractName,\n \n             if(!string.IsNullOrEmpty(functionOutputNamespace))\n                 NamespaceDependencies.Add(functionOutputNamespace);\n+\n+            if (!string.IsNullOrEmpty(sharedTypesNamespace))\n+                NamespaceDependencies.Add(sharedTypesNamespace);\n         }\n \n         public override string GetFileName(string name)"},{"sha":"10ac94e7a6c20ca172aaef42fad97d1be1e80556","filename":"generators/Nethereum.Generators/MudService/Vb/ServiceVbTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FVb%2FServiceVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudService%2FVb%2FServiceVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudService%2FVb%2FServiceVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.MudService\n {\n-    public class MudServiceVbTemplate : ClassTemplateBase<MudServiceModel>\n+    public class MudServiceVbTemplate : ClassTemplateBase\n     {\n+        public MudServiceModel Model => (MudServiceModel)ClassModel;\n         public MudServiceVbTemplate(MudServiceModel model) : base(model)\n         {\n             ClassFileTemplate = new VbClassFileTemplate(Model, this);"},{"sha":"16b588f1aaa49025f712683e6e1ea9c6dfe411d8","filename":"generators/Nethereum.Generators/MudTable/CSharp/MudTableCSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTable%2FCSharp%2FMudTableCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTable%2FCSharp%2FMudTableCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudTable%2FCSharp%2FMudTableCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,8 +7,9 @@\n \n namespace Nethereum.Generators.MudTable\n {\n-    public class MudTableCSharpTemplate : ClassTemplateBase<MudTableModel>\n+    public class MudTableCSharpTemplate : ClassTemplateBase\n     {\n+        public MudTableModel Model => (MudTableModel)ClassModel;\n         private ParameterABIFunctionDTOCSharpTemplate _parameterAbiFunctionDtocSharpTemplate;\n         public MudTableCSharpTemplate(MudTableModel model) : base(model)\n         {"},{"sha":"fe97e71b90dda9e5fd66086af8769654c456e836","filename":"generators/Nethereum.Generators/MudTable/MudTableGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTable%2FMudTableGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTable%2FMudTableGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudTable%2FMudTableGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,7 +5,7 @@\n \n namespace Nethereum.Generators.MudTable\n {\n-    public class MudTableGenerator : ClassGeneratorBase<ClassTemplateBase<MudTableModel>, MudTableModel>\n+    public class MudTableGenerator : ClassGeneratorBase<MudTableModel>\n     {\n         public MudTableGenerator(MudTable mudTable, string @namespace, CodeGenLanguage codeGenLanguage)\n         {"},{"sha":"9848fe44314b346b087eb0b09dd9a3101871f303","filename":"generators/Nethereum.Generators/MudTablesGenerator.cs","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTablesGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FMudTablesGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FMudTablesGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,6 +5,7 @@\n \n namespace Nethereum.Generators\n {\n+\n     public class MudTablesGenerator\n     {\n         public MudTable.MudTable[] MudTables;"},{"sha":"24fcbaaa3cedd88ec5e78ef47c253958fb3de0b2","filename":"generators/Nethereum.Generators/Service/CSharp/FunctionServiceMethodCSharpTemplate.cs","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FCSharp%2FFunctionServiceMethodCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FCSharp%2FFunctionServiceMethodCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FCSharp%2FFunctionServiceMethodCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -41,7 +41,7 @@ public string GenerateGetFunctionTypes()\n {SpaceUtils.Two___Tabs}{{\n {SpaceUtils.Three____Tabs}return new List<Type>\n {SpaceUtils.Three____Tabs}{{\n-{string.Join($\",{Environment.NewLine}\", functions.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new FunctionCQSMessageModel(x, _model.CQSNamespace).GetTypeName()})\"))}\n+{string.Join($\",{Environment.NewLine}\", functions.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new FunctionCQSMessageModel(x, _model.CQSNamespace, null).GetTypeName()})\"))}\n {SpaceUtils.Three____Tabs}}};\n {SpaceUtils.Two___Tabs}}}\";\n             return funtionTypesMethod;\n@@ -55,7 +55,7 @@ public string GenerateGetEventTypes()\n {SpaceUtils.Two___Tabs}{{\n {SpaceUtils.Three____Tabs}return new List<Type>\n {SpaceUtils.Three____Tabs}{{\n-{string.Join($\",{Environment.NewLine}\", events.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new EventDTOModel(x, _model.CQSNamespace).GetTypeName()})\"))}\n+{string.Join($\",{Environment.NewLine}\", events.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new EventDTOModel(x, _model.CQSNamespace, null).GetTypeName()})\"))}\n {SpaceUtils.Three____Tabs}}};\n {SpaceUtils.Two___Tabs}}}\";\n             return eventTypesMethod;\n@@ -69,16 +69,16 @@ public string GenerateGetErrorTypes()\n {SpaceUtils.Two___Tabs}{{\n {SpaceUtils.Three____Tabs}return new List<Type>\n {SpaceUtils.Three____Tabs}{{\n-{string.Join($\",{Environment.NewLine}\", errors.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new ErrorDTOModel(x, _model.CQSNamespace).GetTypeName()})\"))}\n+{string.Join($\",{Environment.NewLine}\", errors.Select(x => $\"{SpaceUtils.Four_____Tabs}typeof({new ErrorDTOModel(x, _model.CQSNamespace, null).GetTypeName()})\"))}\n {SpaceUtils.Three____Tabs}}};\n {SpaceUtils.Two___Tabs}}}\";\n             return errorsMethod;\n         }\n \n         public string GenerateMethod(FunctionABI functionABI)\n         {\n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.CSharp);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"080b035768a7fe2da98acacf4afe3d9d8302a34e","filename":"generators/Nethereum.Generators/Service/CSharp/ServiceCSharpTemplate.cs","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FCSharp%2FServiceCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FCSharp%2FServiceCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FCSharp%2FServiceCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,15 +3,15 @@\n \n namespace Nethereum.Generators.Service\n {\n-    public class ServiceCSharpTemplate: ClassTemplateBase<ServiceModel>\n+    public class ServiceCSharpTemplate: ClassTemplateBase\n     {\n         private FunctionServiceMethodCSharpTemplate _functionServiceMethodCSharpTemplate;\n         private ContractDeploymentServiceMethodsCSharpTemplate _deploymentServiceMethodsCSharpTemplate;\n         public ServiceCSharpTemplate(ServiceModel model):base(model)\n         {\n             _functionServiceMethodCSharpTemplate = new FunctionServiceMethodCSharpTemplate(model);\n             _deploymentServiceMethodsCSharpTemplate = new ContractDeploymentServiceMethodsCSharpTemplate(model);\n-            ClassFileTemplate = new CSharpClassFileTemplate(Model, this);\n+            ClassFileTemplate = new CSharpClassFileTemplate(ClassModel, this);\n         }\n \n         public override string GenerateClass()\n@@ -27,11 +27,11 @@ public override string GenerateClass()\n         public string GenerateMainClass()\n         {\n             return\n-                $@\"{SpaceUtils.One__Tab}public partial class {Model.GetTypeName()}: {Model.GetTypeName()}Base\n+                $@\"{SpaceUtils.One__Tab}public partial class {ClassModel.GetTypeName()}: {ClassModel.GetTypeName()}Base\n {SpaceUtils.One__Tab}{{\n {_deploymentServiceMethodsCSharpTemplate.GenerateMethods()}\n {SpaceUtils.NoTabs}\n-{SpaceUtils.Two___Tabs}public {Model.GetTypeName()}(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+{SpaceUtils.Two___Tabs}public {ClassModel.GetTypeName()}(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n {SpaceUtils.Two___Tabs}{{\n {SpaceUtils.Two___Tabs}}}\n \n@@ -42,10 +42,10 @@ public string GenerateMainClass()\n         public string GenerateBaseClass()\n         {\n             return\n-                $@\"{SpaceUtils.One__Tab}public partial class {Model.GetTypeName()}Base: ContractWeb3ServiceBase\n+                $@\"{SpaceUtils.One__Tab}public partial class {ClassModel.GetTypeName()}Base: ContractWeb3ServiceBase\n {SpaceUtils.One__Tab}{{\n {SpaceUtils.NoTabs}\n-{SpaceUtils.Two___Tabs}public {Model.GetTypeName()}Base(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+{SpaceUtils.Two___Tabs}public {ClassModel.GetTypeName()}Base(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n {SpaceUtils.Two___Tabs}{{\n {SpaceUtils.Two___Tabs}}}\n {SpaceUtils.NoTabs}"},{"sha":"fd583898454dfc9b4ef51390d0f26c6c7c19c0df","filename":"generators/Nethereum.Generators/Service/FSharp/FunctionServiceMethodFSharpTemplate.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FFSharp%2FFunctionServiceMethodFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FFSharp%2FFunctionServiceMethodFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FFSharp%2FFunctionServiceMethodFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -29,8 +29,8 @@ public string GenerateMethods()\n         public string GenerateMethod(FunctionABI functionABI)\n         {\n \n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.FSharp);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"fd186e1f04cdc9ca1cc3d4e618a5168b0023160a","filename":"generators/Nethereum.Generators/Service/FSharp/ServiceFSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FFSharp%2FServiceFSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FFSharp%2FServiceFSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FFSharp%2FServiceFSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.Service\n {\n-    public class ServiceFSharpTemplate : ClassTemplateBase<ServiceModel>\n+    public class ServiceFSharpTemplate : ClassTemplateBase\n     {\n+        public ServiceModel Model => (ServiceModel)ClassModel;\n         private FunctionServiceMethodFSharpTemplate _functionServiceMethodFSharpTemplate;\n         private ContractDeploymentServiceMethodsFSharpTemplate _deploymentServiceMethodsFSharpTemplate;\n         public ServiceFSharpTemplate(ServiceModel model) : base(model)"},{"sha":"87c19e80ecae7d393a57d647cc983b1e3457f446","filename":"generators/Nethereum.Generators/Service/ServiceGenerator.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FServiceGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FServiceGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FServiceGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,14 +5,14 @@\n \n namespace Nethereum.Generators.Service\n {\n-    public class ServiceGenerator : ClassGeneratorBase<ClassTemplateBase<ServiceModel>, ServiceModel>\n+    public class ServiceGenerator : ClassGeneratorBase<ServiceModel>\n     {\n         public  ContractABI ContractABI { get; }\n \n-        public ServiceGenerator(ContractABI contractABI, string contractName, string byteCode, string @namespace, string cqsNamespace, string functionOutputNamespace, CodeGenLanguage codeGenLanguage)\n+        public ServiceGenerator(ContractABI contractABI, string contractName, string byteCode, string @namespace, string cqsNamespace, string functionOutputNamespace, string sharedTypesFullNamespace, CodeGenLanguage codeGenLanguage)\n         {\n             ContractABI = contractABI;\n-            ClassModel = new ServiceModel(contractABI, contractName, byteCode, @namespace, cqsNamespace, functionOutputNamespace);\n+            ClassModel = new ServiceModel(contractABI, contractName, byteCode, @namespace, cqsNamespace, functionOutputNamespace, sharedTypesFullNamespace);\n             ClassModel.CodeGenLanguage = codeGenLanguage;\n             InitialiseTemplate(codeGenLanguage);\n         }"},{"sha":"cef4ed5d73b059cea69e95cfd24426d8eac24755","filename":"generators/Nethereum.Generators/Service/ServiceModel.cs","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FServiceModel.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FServiceModel.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FServiceModel.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,16 +9,19 @@ public class ServiceModel:TypeMessageModel\n         public ContractABI ContractABI { get; }\n         public string CQSNamespace { get; }\n         public string FunctionOutputNamespace { get; }\n+        public string SharedTypesFullNamespace { get; }\n         public ContractDeploymentCQSMessageModel ContractDeploymentCQSMessageModel { get; }\n \n+\n         public ServiceModel(ContractABI contractABI, string contractName, \n                             string byteCode, string @namespace, \n-                            string cqsNamespace, string functionOutputNamespace):\n-            base(@namespace, contractName, \"Service\")\n+                            string cqsNamespace, string functionOutputNamespace, string sharedTypesFullNamespace) :\n+            base(@namespace, contractName, \"Service\") // we need to duplicate the name due typescript\n         {\n             ContractABI = contractABI;\n             CQSNamespace = cqsNamespace;\n             FunctionOutputNamespace = functionOutputNamespace;\n+            SharedTypesFullNamespace = sharedTypesFullNamespace;\n             ContractDeploymentCQSMessageModel = new ContractDeploymentCQSMessageModel(contractABI.Constructor, cqsNamespace, byteCode, contractName);\n             InitialiseNamespaceDependencies();\n \n@@ -27,6 +30,14 @@ public ServiceModel(ContractABI contractABI, string contractName,\n \n             if(!string.IsNullOrEmpty(functionOutputNamespace))\n                 NamespaceDependencies.Add(functionOutputNamespace);\n+\n+            if(!string.IsNullOrEmpty(sharedTypesFullNamespace))\n+                NamespaceDependencies.Add(sharedTypesFullNamespace);\n+        }\n+\n+        public static string GetDefaultTypeName(string name)\n+        {\n+           return GetDefaultTypeName(name, \"Service\");\n         }\n \n         private void InitialiseNamespaceDependencies()"},{"sha":"c3ffcdec80102c93907f71fc69a4bac63256545d","filename":"generators/Nethereum.Generators/Service/Vb/FunctionServiceMethodVbTemplate.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FVb%2FFunctionServiceMethodVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FVb%2FFunctionServiceMethodVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FVb%2FFunctionServiceMethodVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -31,8 +31,8 @@ public string GenerateMethods()\n         public string GenerateMethod(FunctionABI functionABI)\n         {\n \n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.Vb);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"aadac6e16c9019cd9b66e60e8dcc21a0a58f6f02","filename":"generators/Nethereum.Generators/Service/Vb/ServiceVbTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FVb%2FServiceVbTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FService%2FVb%2FServiceVbTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FService%2FVb%2FServiceVbTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.Service\n {\n-    public class ServiceVbTemplate : ClassTemplateBase<ServiceModel>\n+    public class ServiceVbTemplate : ClassTemplateBase\n     {\n+        public ServiceModel Model => (ServiceModel)ClassModel;\n         private FunctionServiceMethodVbTemplate _functionServiceMethodVbTemplate;\n         private ContractDeploymentServiceMethodsVbTemplate _deploymentServiceMethodsVbTemplate;\n         public ServiceVbTemplate(ServiceModel model) : base(model)"},{"sha":"8b4a3a391830cedf21c015b1e18a66e1b7d38a4d","filename":"generators/Nethereum.Generators/Unity/CSharp/UnityContractFactoryCSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityContractFactoryCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityContractFactoryCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityContractFactoryCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,8 +6,9 @@\n \n namespace Nethereum.Generators.Unity.CSharp\n {\n-    public class UnityContractFactoryCSharpTemplate : ClassTemplateBase<UnityContractFactoryModel>\n+    public class UnityContractFactoryCSharpTemplate : ClassTemplateBase\n     {\n+        public UnityContractFactoryModel Model => (UnityContractFactoryModel)ClassModel;\n         private readonly UnityContractFactoryModel _model;\n         private CommonGenerators _commonGenerators;\n         private ITypeConvertor _typeConvertor;"},{"sha":"36f929706bc6bf8670a5410a28c7644158bb1839","filename":"generators/Nethereum.Generators/Unity/CSharp/UnityFunctionRequestsClassTemplates.cs","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityFunctionRequestsClassTemplates.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityFunctionRequestsClassTemplates.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FUnity%2FCSharp%2FUnityFunctionRequestsClassTemplates.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,8 +9,9 @@\n namespace Nethereum.Generators.Unity.CSharp\n {\n \n-    public class UnityFunctionRequestsCsharpTemplates : ClassTemplateBase<UnityRequestsModel>\n+    public class UnityFunctionRequestsCsharpTemplates : ClassTemplateBase\n     {\n+        public UnityRequestsModel Model => (UnityRequestsModel)ClassModel;\n         private readonly UnityRequestsModel _model;\n         private CommonGenerators _commonGenerators;\n         private ITypeConvertor _typeConvertor;\n@@ -33,8 +34,8 @@ public override string GenerateClass()\n \n         public string GenerateSingleClass(FunctionABI functionABI)\n         {\n-            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace);\n-            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace);\n+            var functionCQSMessageModel = new FunctionCQSMessageModel(functionABI, _model.CQSNamespace, null);\n+            var functionOutputDTOModel = new FunctionOutputDTOModel(functionABI, _model.FunctionOutputNamespace, null);\n             var functionABIModel = new FunctionABIModel(functionABI, _typeConvertor, CodeGenLanguage.CSharp);\n \n             var messageType = functionCQSMessageModel.GetTypeName();"},{"sha":"f4558153c7a204fa54924b19a413c18f7b6b0476","filename":"generators/Nethereum.Generators/Unity/UnityContractFactoryGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FUnityContractFactoryGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FUnityContractFactoryGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FUnity%2FUnityContractFactoryGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,7 +6,7 @@\n \n namespace Nethereum.Generators.Unity\n {\n-    public class UnityContractFactoryGenerator : ClassGeneratorBase<ClassTemplateBase<UnityContractFactoryModel>, UnityContractFactoryModel>\n+    public class UnityContractFactoryGenerator : ClassGeneratorBase<UnityContractFactoryModel>\n     {\n         public ContractABI ContractABI { get; }\n "},{"sha":"c46667b81d178259815b648ecfe3dd468065d81c","filename":"generators/Nethereum.Generators/Unity/UnityRequestsGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FUnityRequestsGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FUnity%2FUnityRequestsGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FUnity%2FUnityRequestsGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,7 +6,7 @@\n \n namespace Nethereum.Generators.Unity\n {\n-    public class UnityRequestsGenerator : ClassGeneratorBase<ClassTemplateBase<UnityRequestsModel>, UnityRequestsModel>\n+    public class UnityRequestsGenerator : ClassGeneratorBase<UnityRequestsModel>\n     {\n         public  ContractABI ContractABI { get; }\n "},{"sha":"7a29fd36dd6cb4039f69fe4c9ae027fbeb5dc8fa","filename":"generators/Nethereum.Generators/XUnit/CSharp/SimpleTestCSharpTemplate.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FXUnit%2FCSharp%2FSimpleTestCSharpTemplate.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FXUnit%2FCSharp%2FSimpleTestCSharpTemplate.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FXUnit%2FCSharp%2FSimpleTestCSharpTemplate.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,8 +3,9 @@\n \n namespace Nethereum.Generators.XUnit\n {\n-    public class SimpleTestCSharpTemplate : ClassTemplateBase<SimpleTestModel>\n+    public class SimpleTestCSharpTemplate : ClassTemplateBase\n     {\n+        public SimpleTestModel Model => (SimpleTestModel)ClassModel;\n         public SimpleTestCSharpTemplate(SimpleTestModel model):base(model)\n         {\n             ClassFileTemplate = new CSharpClassFileTemplate(Model, this);"},{"sha":"18af245e9a7dc5caa58752751f5a026d471c47ca","filename":"generators/Nethereum.Generators/XUnit/SimpleTestGenerator.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FXUnit%2FSimpleTestGenerator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/generators%2FNethereum.Generators%2FXUnit%2FSimpleTestGenerator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/generators%2FNethereum.Generators%2FXUnit%2FSimpleTestGenerator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,7 +6,7 @@\n \n namespace Nethereum.Generators.XUnit\n {\n-    public class SimpleTestGenerator : ClassGeneratorBase<ClassTemplateBase<SimpleTestModel>, SimpleTestModel>\n+    public class SimpleTestGenerator : ClassGeneratorBase<SimpleTestModel>\n     {\n         public  ContractABI ContractABI { get; }\n "},{"sha":"494f4a669498f76c59c8a85ccd5094d683457ab8","filename":"src/Nethereum.ABI/ABIDeserialisation/ABIJsonDeserialiser.cs","status":"modified","additions":24,"deletions":3,"changes":27,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiser.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiser.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiser.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,10 +1,20 @@\n+using System;\n using System.Collections.Generic;\n+using System.Linq;\n+#if NET6_0_OR_GREATER\n+using System.Text.Json;\n+#endif\n using Nethereum.ABI.Model;\n using Newtonsoft.Json;\n using Newtonsoft.Json.Linq;\n \n namespace Nethereum.ABI.ABIDeserialisation\n {\n+    public static class AbiDeserializationSettings\n+    {\n+        public static bool UseSystemTextJson { get; set; } = false;\n+    }\n+\n     public class ABIJsonDeserialiser\n     {\n         public ConstructorABI BuildConstructor(IDictionary<string, object> constructor)\n@@ -112,12 +122,23 @@ public Parameter[] BuildFunctionParameters(List<object> inputs)\n             return parameters.ToArray();\n         }\n \n-        public ContractABI DeserialiseContract(string abi) \n+\n+        public ContractABI DeserialiseContract(string abi)\n         {\n-            var convertor = new ExpandoObjectConverter();\n-            var contract = JsonConvert.DeserializeObject<List<IDictionary<string, object>>>(abi, convertor);\n+#if NET6_0_OR_GREATER\n+            if (AbiDeserializationSettings.UseSystemTextJson)\n+            {\n+                return new ABIJsonDeserialiserSTJ().DeserialiseContract(abi);\n+            }\n+#endif\n+\n+            var converter = new ExpandoObjectConverter();\n+            var contract = JsonConvert.DeserializeObject<List<IDictionary<string, object>>>(abi, converter);\n+\n             return DeserialiseContractBody(contract);\n         }\n+\n+\n         public ContractABI DeserialiseContract(JArray abi) {\n             var convertor = new JObjectToExpandoConverter();\n             return DeserialiseContractBody(convertor.JObjectArray(abi));"},{"sha":"44f65ba8c9fc4226b65dbb90ccbfd405390ceeec","filename":"src/Nethereum.ABI/ABIDeserialisation/ABIJsonDeserialiserSTJ.cs","status":"added","additions":209,"deletions":0,"changes":209,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiserSTJ.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiserSTJ.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.ABI%2FABIDeserialisation%2FABIJsonDeserialiserSTJ.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,209 @@\n+﻿using System;\n+using System.Collections.Generic;\n+using Nethereum.ABI.Model;\n+using System.Linq;\n+\n+#if NET6_0_OR_GREATER\n+using System.Text.Json;\n+\n+namespace Nethereum.ABI.ABIDeserialisation\n+{\n+\n+    using System.Text.Json.Serialization;\n+    using System.Collections.Generic;\n+\n+    [JsonSerializable(typeof(ABIElementSTJ))]\n+    [JsonSerializable(typeof(List<ABIElementSTJ>))]\n+    [JsonSerializable(typeof(ABIParameterSTJ))]\n+    [JsonSerializable(typeof(List<ABIParameterSTJ>))]\n+    public partial class ABIJsonDeserialiserSTJContext : JsonSerializerContext\n+    {\n+    }\n+\n+    public class ABIElementSTJ\n+    {\n+        [JsonPropertyName(\"type\")]\n+        public string Type { get; set; }\n+\n+        [JsonPropertyName(\"constant\")]\n+        public bool Constant { get; set; }\n+\n+        [JsonPropertyName(\"name\")]\n+        public string Name { get; set; }\n+\n+        [JsonPropertyName(\"anonymous\")]\n+        public bool Anonymous { get; set; }\n+\n+        [JsonPropertyName(\"stateMutability\")]\n+        public string StateMutability { get; set; }\n+\n+        [JsonPropertyName(\"payable\")]\n+        public bool Payable { get; set; }\n+\n+        [JsonPropertyName(\"inputs\")]\n+        public List<ABIParameterSTJ> Inputs { get; set; }\n+\n+        [JsonPropertyName(\"outputs\")]\n+        public List<ABIParameterSTJ> Outputs { get; set; }\n+\n+        public ABIElementSTJ()\n+        {\n+            Inputs = new List<ABIParameterSTJ>();\n+            Outputs = new List<ABIParameterSTJ>();\n+        }\n+    }\n+\n+    public class ABIParameterSTJ\n+    {\n+        [JsonPropertyName(\"name\")]\n+        public string Name { get; set; }\n+\n+        [JsonPropertyName(\"type\")]\n+        public string Type { get; set; }\n+\n+        [JsonPropertyName(\"indexed\")]\n+        public bool Indexed { get; set; }\n+\n+        [JsonPropertyName(\"internalType\")]\n+        public string InternalType { get; set; }\n+\n+        [JsonPropertyName(\"components\")]\n+        public List<ABIParameterSTJ> Components { get; set; } // For tuple types\n+\n+        public ABIParameterSTJ()\n+        {\n+            Components = new List<ABIParameterSTJ>();\n+        }\n+    }\n+\n+\n+    public class ABIJsonDeserialiserSTJ\n+    {\n+        public ConstructorABI BuildConstructor(ABIElementSTJ constructorElement)\n+        {\n+            if (constructorElement != null && constructorElement.Type == \"constructor\")\n+            {\n+                var constructorABI = new ConstructorABI();\n+                constructorABI.InputParameters = MapParameters(constructorElement.Inputs).ToArray();\n+                return constructorABI;\n+            }\n+\n+            return null;\n+        }\n+\n+        public ContractABI DeserialiseContract(string abiJson)\n+        {\n+            abiJson = abiJson.Replace('\\'', '\"'); // fix for strict JSON\n+            var abiElements = JsonSerializer.Deserialize(\n+                    abiJson,\n+                    ABIJsonDeserialiserSTJContext.Default.ListABIElementSTJ\n+            );\n+            if (abiElements == null)\n+            {\n+                throw new InvalidOperationException(\"Failed to deserialize ABI JSON\");\n+            }\n+\n+            return new ContractABI\n+            {\n+                Functions = MapToFunctionAbi(abiElements).ToArray(),\n+                Events = MapToEventAbi(abiElements).ToArray(),\n+                Errors = MapToErrorAbi(abiElements).ToArray(),\n+                Constructor = BuildConstructor(abiElements.FirstOrDefault(e => e.Type == \"constructor\"))\n+            };\n+        }\n+\n+        private IEnumerable<FunctionABI> MapToFunctionAbi(IEnumerable<ABIElementSTJ> abiElements)\n+        {\n+            return abiElements\n+                .Where(e => e.Type == \"function\")\n+                .Select(e => BuildFunction(e));\n+        }\n+\n+        public FunctionABI BuildFunction(ABIElementSTJ functionElement)\n+        {\n+            var constant = functionElement.Constant;\n+\n+            // For solidity >=0.6.0, check stateMutability\n+            if (!constant && functionElement.StateMutability == \"view\" || functionElement.StateMutability == \"pure\")\n+            {\n+                constant = true;\n+            }\n+\n+            var functionABI = new FunctionABI(functionElement.Name, constant);\n+            functionABI.InputParameters = MapParameters(functionElement.Inputs).ToArray();\n+            functionABI.OutputParameters = MapParameters(functionElement.Outputs).ToArray();\n+            return functionABI;\n+        }\n+\n+        private IEnumerable<EventABI> MapToEventAbi(IEnumerable<ABIElementSTJ> abiElements)\n+        {\n+            return abiElements\n+                .Where(e => e.Type == \"event\")\n+                .Select(BuildEvent);\n+        }\n+\n+        public EventABI BuildEvent(ABIElementSTJ eventElement)\n+        {\n+            var eventABI = new EventABI(eventElement.Name, eventElement.Anonymous);\n+            eventABI.InputParameters = MapParameters(eventElement.Inputs).ToArray();\n+\n+            return eventABI;\n+        }\n+\n+        private IEnumerable<ErrorABI> MapToErrorAbi(IEnumerable<ABIElementSTJ> abiElements)\n+        {\n+            return abiElements\n+                .Where(e => e.Type == \"error\")\n+                .Select(e => new ErrorABI(e.Name)\n+                {\n+                    InputParameters = MapParameters(e.Inputs).ToArray()\n+                });\n+        }\n+\n+        private IEnumerable<Parameter> MapParameters(List<ABIParameterSTJ> abiParameters)\n+        {\n+            var parameters = new List<Parameter>();\n+            int parameterOrder = 0;\n+            foreach (var input in abiParameters)\n+            {\n+                parameterOrder++;\n+                var parameter = new Parameter(input.Type, input.Name, parameterOrder, input.InternalType)\n+                {\n+                    Indexed = input.Indexed\n+                };\n+\n+                InitialiseTupleComponents(input, parameter);\n+\n+                parameters.Add(parameter);\n+            }\n+\n+            return parameters;\n+        }\n+\n+        private void InitialiseTupleComponents(ABIParameterSTJ abiParameter, Parameter parameter)\n+        {\n+            // Assuming abiParameter.Components is a List<ABIParameterSTJ> representing the tuple components\n+            if (parameter.ABIType is TupleType tupleType && abiParameter.Components != null)\n+            {\n+                tupleType.SetComponents(MapParameters(abiParameter.Components).ToArray());\n+            }\n+\n+            // Handling nested array types\n+            var arrayType = parameter.ABIType as ArrayType;\n+            while (arrayType != null)\n+            {\n+                if (arrayType.ElementType is TupleType arrayTupleType && abiParameter.Components != null)\n+                {\n+                    arrayTupleType.SetComponents(MapParameters(abiParameter.Components).ToArray());\n+                    break; // Exit the loop once the components are set\n+                }\n+                else\n+                {\n+                    arrayType = arrayType.ElementType as ArrayType;\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+#endif"},{"sha":"e885e9a8c5ac68d44ac27e72e1bdc34b1176f89b","filename":"src/Nethereum.ABI/Decoders/ByteUtilExtensions.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FDecoders%2FByteUtilExtensions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FDecoders%2FByteUtilExtensions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.ABI%2FDecoders%2FByteUtilExtensions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -21,5 +21,10 @@ public static BigInteger ConvertToUInt256(this byte[] bytes)\n             return new IntType(\"uint256\").Decode<BigInteger>(bytes);\n         }\n \n+        public static byte[] ConvertToABIBytes(this BigInteger value)\n+        {\n+            return new IntType(\"uint256\").Encode(value);\n+        }\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"d5290e8a42f5f5bf799ff14897981b5dda4dc25d","filename":"src/Nethereum.ABI/EIP712/Eip712TypedDataEncoder.cs","status":"modified","additions":19,"deletions":2,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FEIP712%2FEip712TypedDataEncoder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.ABI%2FEIP712%2FEip712TypedDataEncoder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.ABI%2FEIP712%2FEip712TypedDataEncoder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -47,6 +47,12 @@ public byte[] EncodeTypedData(string json)\n             return EncodeTypedDataRaw(typedDataRaw);\n         }\n \n+        public byte[] EncodeAndHashTypedData(string json)\n+        {\n+            var encodedData = EncodeTypedData(json);\n+            return Sha3Keccack.Current.CalculateHash(encodedData);\n+        }\n+\n         /// <summary>\n         /// Encode typed data using a non standard json, which may not include the Domain type and uses a different key selector for message\n         /// </summary>\n@@ -112,6 +118,13 @@ public byte[] HashStruct<T>(T message, string primaryType, params Type[] types)\n             return HashStruct(memberDescriptions, primaryType, memberValue);\n         }\n \n+        public byte[] EncodeStruct<T>(T message, string primaryType, params Type[] types)\n+        {\n+            var memberDescriptions = MemberDescriptionFactory.GetTypesMemberDescription(types);\n+            var memberValue = MemberValueFactory.CreateFromMessage(message);\n+            return EncodeStruct(memberDescriptions, primaryType, memberValue);\n+        }\n+\n         public string GetEncodedType(string primaryType, params Type[] types)\n         {\n             var memberDescriptions = MemberDescriptionFactory.GetTypesMemberDescription(types);\n@@ -125,6 +138,10 @@ public string GetEncodedTypeDomainSeparator<TDomain>(TypedData<TDomain> typedDat\n         }\n \n         private byte[] HashStruct(IDictionary<string, MemberDescription[]> types, string primaryType, IEnumerable<MemberValue> message)\n+        {\n+           return Sha3Keccack.Current.CalculateHash(EncodeStruct(types, primaryType, message));\n+        }\n+        private byte[] EncodeStruct(IDictionary<string, MemberDescription[]> types, string primaryType, IEnumerable<MemberValue> message)\n         {\n             using (var memoryStream = new MemoryStream())\n             using (var writer = new BinaryWriter(memoryStream))\n@@ -136,7 +153,7 @@ private byte[] HashStruct(IDictionary<string, MemberDescription[]> types, string\n                 EncodeData(writer, types, message);\n \n                 writer.Flush();\n-                return Sha3Keccack.Current.CalculateHash(memoryStream.ToArray());\n+                return memoryStream.ToArray();\n             }\n         }\n \n@@ -161,7 +178,7 @@ private static IList<KeyValuePair<string, string>> EncodeTypes(IDictionary<strin\n \n             result.AddRange(currentTypeMembers.Select(x => ConvertToElementType(x.Type)).Distinct().Where(IsReferenceType).SelectMany(x => EncodeTypes(types, x)));\n \n-            return result;\n+            return result.Distinct().ToList();\n         }\n \n         private static string ConvertToElementType(string type)"},{"sha":"adf4a807e40bcedfd0b990666d5ee9e4b21d4cd3","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/Nethereum.AccountAbstraction.SimpleAccount.csproj","status":"added","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FNethereum.AccountAbstraction.SimpleAccount.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FNethereum.AccountAbstraction.SimpleAccount.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FNethereum.AccountAbstraction.SimpleAccount.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,14 @@\n+﻿<Project Sdk=\"Microsoft.NET.Sdk\">\n+\n+  <PropertyGroup>\n+    <TargetFramework>net8.0</TargetFramework>\n+    <ImplicitUsings>enable</ImplicitUsings>\n+    <Nullable>enable</Nullable>\n+  </PropertyGroup>\n+\n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\Nethereum.ABI\\Nethereum.ABI.csproj\" />\n+    <ProjectReference Include=\"..\\Nethereum.AccountAbstraction\\Nethereum.AccountAbstraction.csproj\" />\n+  </ItemGroup>\n+\n+</Project>"},{"sha":"054d7fbec510ecfd23e308cdc121c631dad1eb83","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccount/ContractDefinition/Call.gen.cs","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FCall.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FCall.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FCall.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,21 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccount.ContractDefinition\n+{\n+    public partial class Call : CallBase { }\n+\n+    public class CallBase \n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+        [Parameter(\"uint256\", \"value\", 2)]\n+        public virtual BigInteger Value { get; set; }\n+        [Parameter(\"bytes\", \"data\", 3)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+}"},{"sha":"e6624d48c99707805160d05a3c5a294cc0f789ab","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccount/ContractDefinition/PackedUserOperation.gen.cs","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FPackedUserOperation.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FPackedUserOperation.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FPackedUserOperation.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,33 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccount.ContractDefinition\n+{\n+    public partial class PackedUserOperation : PackedUserOperationBase { }\n+\n+    public class PackedUserOperationBase \n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"initCode\", 3)]\n+        public virtual byte[] InitCode { get; set; }\n+        [Parameter(\"bytes\", \"callData\", 4)]\n+        public virtual byte[] CallData { get; set; }\n+        [Parameter(\"bytes32\", \"accountGasLimits\", 5)]\n+        public virtual byte[] AccountGasLimits { get; set; }\n+        [Parameter(\"uint256\", \"preVerificationGas\", 6)]\n+        public virtual BigInteger PreVerificationGas { get; set; }\n+        [Parameter(\"bytes32\", \"gasFees\", 7)]\n+        public virtual byte[] GasFees { get; set; }\n+        [Parameter(\"bytes\", \"paymasterAndData\", 8)]\n+        public virtual byte[] PaymasterAndData { get; set; }\n+        [Parameter(\"bytes\", \"signature\", 9)]\n+        public virtual byte[] Signature { get; set; }\n+    }\n+}"},{"sha":"12d492940527db06cf597be3a263b6a33ab8100c","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccount/ContractDefinition/SimpleAccountDefinition.gen.cs","status":"added","additions":435,"deletions":0,"changes":435,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FSimpleAccountDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FSimpleAccountDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FContractDefinition%2FSimpleAccountDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,435 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts;\n+using System.Threading;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccount.ContractDefinition\n+{\n+\n+\n+    public partial class SimpleAccountDeployment : SimpleAccountDeploymentBase\n+    {\n+        public SimpleAccountDeployment() : base(BYTECODE) { }\n+        public SimpleAccountDeployment(string byteCode) : base(byteCode) { }\n+    }\n+\n+    public class SimpleAccountDeploymentBase : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE = \"\";\n+        public SimpleAccountDeploymentBase() : base(BYTECODE) { }\n+        public SimpleAccountDeploymentBase(string byteCode) : base(byteCode) { }\n+        [Parameter(\"address\", \"anEntryPoint\", 1)]\n+        public virtual string AnEntryPoint { get; set; }\n+    }\n+\n+    public partial class UpgradeInterfaceVersionFunction : UpgradeInterfaceVersionFunctionBase { }\n+\n+    [Function(\"UPGRADE_INTERFACE_VERSION\", \"string\")]\n+    public class UpgradeInterfaceVersionFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class AddDepositFunction : AddDepositFunctionBase { }\n+\n+    [Function(\"addDeposit\")]\n+    public class AddDepositFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class EntryPointFunction : EntryPointFunctionBase { }\n+\n+    [Function(\"entryPoint\", \"address\")]\n+    public class EntryPointFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class ExecuteFunction : ExecuteFunctionBase { }\n+\n+    [Function(\"execute\")]\n+    public class ExecuteFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+        [Parameter(\"uint256\", \"value\", 2)]\n+        public virtual BigInteger Value { get; set; }\n+        [Parameter(\"bytes\", \"data\", 3)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class ExecuteBatchFunction : ExecuteBatchFunctionBase { }\n+\n+    [Function(\"executeBatch\")]\n+    public class ExecuteBatchFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple[]\", \"calls\", 1)]\n+        public virtual List<Call> Calls { get; set; }\n+    }\n+\n+    public partial class GetDepositFunction : GetDepositFunctionBase { }\n+\n+    [Function(\"getDeposit\", \"uint256\")]\n+    public class GetDepositFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class GetNonceFunction : GetNonceFunctionBase { }\n+\n+    [Function(\"getNonce\", \"uint256\")]\n+    public class GetNonceFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class InitializeFunction : InitializeFunctionBase { }\n+\n+    [Function(\"initialize\")]\n+    public class InitializeFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"anOwner\", 1)]\n+        public virtual string AnOwner { get; set; }\n+    }\n+\n+    public partial class OnERC1155BatchReceivedFunction : OnERC1155BatchReceivedFunctionBase { }\n+\n+    [Function(\"onERC1155BatchReceived\", \"bytes4\")]\n+    public class OnERC1155BatchReceivedFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+        [Parameter(\"address\", \"\", 2)]\n+        public virtual string ReturnValue2 { get; set; }\n+        [Parameter(\"uint256[]\", \"\", 3)]\n+        public virtual List<BigInteger> ReturnValue3 { get; set; }\n+        [Parameter(\"uint256[]\", \"\", 4)]\n+        public virtual List<BigInteger> ReturnValue4 { get; set; }\n+        [Parameter(\"bytes\", \"\", 5)]\n+        public virtual byte[] ReturnValue5 { get; set; }\n+    }\n+\n+    public partial class OnERC1155ReceivedFunction : OnERC1155ReceivedFunctionBase { }\n+\n+    [Function(\"onERC1155Received\", \"bytes4\")]\n+    public class OnERC1155ReceivedFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+        [Parameter(\"address\", \"\", 2)]\n+        public virtual string ReturnValue2 { get; set; }\n+        [Parameter(\"uint256\", \"\", 3)]\n+        public virtual BigInteger ReturnValue3 { get; set; }\n+        [Parameter(\"uint256\", \"\", 4)]\n+        public virtual BigInteger ReturnValue4 { get; set; }\n+        [Parameter(\"bytes\", \"\", 5)]\n+        public virtual byte[] ReturnValue5 { get; set; }\n+    }\n+\n+    public partial class OnERC721ReceivedFunction : OnERC721ReceivedFunctionBase { }\n+\n+    [Function(\"onERC721Received\", \"bytes4\")]\n+    public class OnERC721ReceivedFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+        [Parameter(\"address\", \"\", 2)]\n+        public virtual string ReturnValue2 { get; set; }\n+        [Parameter(\"uint256\", \"\", 3)]\n+        public virtual BigInteger ReturnValue3 { get; set; }\n+        [Parameter(\"bytes\", \"\", 4)]\n+        public virtual byte[] ReturnValue4 { get; set; }\n+    }\n+\n+    public partial class OwnerFunction : OwnerFunctionBase { }\n+\n+    [Function(\"owner\", \"address\")]\n+    public class OwnerFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class ProxiableUUIDFunction : ProxiableUUIDFunctionBase { }\n+\n+    [Function(\"proxiableUUID\", \"bytes32\")]\n+    public class ProxiableUUIDFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }\n+\n+    [Function(\"supportsInterface\", \"bool\")]\n+    public class SupportsInterfaceFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"bytes4\", \"interfaceId\", 1)]\n+        public virtual byte[] InterfaceId { get; set; }\n+    }\n+\n+    public partial class UpgradeToAndCallFunction : UpgradeToAndCallFunctionBase { }\n+\n+    [Function(\"upgradeToAndCall\")]\n+    public class UpgradeToAndCallFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"newImplementation\", 1)]\n+        public virtual string NewImplementation { get; set; }\n+        [Parameter(\"bytes\", \"data\", 2)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class ValidateUserOpFunction : ValidateUserOpFunctionBase { }\n+\n+    [Function(\"validateUserOp\", \"uint256\")]\n+    public class ValidateUserOpFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple\", \"userOp\", 1)]\n+        public virtual PackedUserOperation UserOp { get; set; }\n+        [Parameter(\"bytes32\", \"userOpHash\", 2)]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"uint256\", \"missingAccountFunds\", 3)]\n+        public virtual BigInteger MissingAccountFunds { get; set; }\n+    }\n+\n+    public partial class WithdrawDepositToFunction : WithdrawDepositToFunctionBase { }\n+\n+    [Function(\"withdrawDepositTo\")]\n+    public class WithdrawDepositToFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"withdrawAddress\", 1)]\n+        public virtual string WithdrawAddress { get; set; }\n+        [Parameter(\"uint256\", \"amount\", 2)]\n+        public virtual BigInteger Amount { get; set; }\n+    }\n+\n+    public partial class InitializedEventDTO : InitializedEventDTOBase { }\n+\n+    [Event(\"Initialized\")]\n+    public class InitializedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"uint64\", \"version\", 1, false )]\n+        public virtual ulong Version { get; set; }\n+    }\n+\n+    public partial class SimpleAccountInitializedEventDTO : SimpleAccountInitializedEventDTOBase { }\n+\n+    [Event(\"SimpleAccountInitialized\")]\n+    public class SimpleAccountInitializedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"entryPoint\", 1, true )]\n+        public virtual string EntryPoint { get; set; }\n+        [Parameter(\"address\", \"owner\", 2, true )]\n+        public virtual string Owner { get; set; }\n+    }\n+\n+    public partial class UpgradedEventDTO : UpgradedEventDTOBase { }\n+\n+    [Event(\"Upgraded\")]\n+    public class UpgradedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"implementation\", 1, true )]\n+        public virtual string Implementation { get; set; }\n+    }\n+\n+    public partial class AddressEmptyCodeError : AddressEmptyCodeErrorBase { }\n+\n+    [Error(\"AddressEmptyCode\")]\n+    public class AddressEmptyCodeErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+    }\n+\n+    public partial class ECDSAInvalidSignatureError : ECDSAInvalidSignatureErrorBase { }\n+    [Error(\"ECDSAInvalidSignature\")]\n+    public class ECDSAInvalidSignatureErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class ECDSAInvalidSignatureLengthError : ECDSAInvalidSignatureLengthErrorBase { }\n+\n+    [Error(\"ECDSAInvalidSignatureLength\")]\n+    public class ECDSAInvalidSignatureLengthErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"length\", 1)]\n+        public virtual BigInteger Length { get; set; }\n+    }\n+\n+    public partial class ECDSAInvalidSignatureSError : ECDSAInvalidSignatureSErrorBase { }\n+\n+    [Error(\"ECDSAInvalidSignatureS\")]\n+    public class ECDSAInvalidSignatureSErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bytes32\", \"s\", 1)]\n+        public virtual byte[] S { get; set; }\n+    }\n+\n+    public partial class ERC1967InvalidImplementationError : ERC1967InvalidImplementationErrorBase { }\n+\n+    [Error(\"ERC1967InvalidImplementation\")]\n+    public class ERC1967InvalidImplementationErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"address\", \"implementation\", 1)]\n+        public virtual string Implementation { get; set; }\n+    }\n+\n+    public partial class ERC1967NonPayableError : ERC1967NonPayableErrorBase { }\n+    [Error(\"ERC1967NonPayable\")]\n+    public class ERC1967NonPayableErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class ExecuteErrorError : ExecuteErrorErrorBase { }\n+\n+    [Error(\"ExecuteError\")]\n+    public class ExecuteErrorErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"index\", 1)]\n+        public virtual BigInteger Index { get; set; }\n+        [Parameter(\"bytes\", \"error\", 2)]\n+        public virtual byte[] Error { get; set; }\n+    }\n+\n+    public partial class FailedCallError : FailedCallErrorBase { }\n+    [Error(\"FailedCall\")]\n+    public class FailedCallErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class InvalidInitializationError : InvalidInitializationErrorBase { }\n+    [Error(\"InvalidInitialization\")]\n+    public class InvalidInitializationErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class NotInitializingError : NotInitializingErrorBase { }\n+    [Error(\"NotInitializing\")]\n+    public class NotInitializingErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class UUPSUnauthorizedCallContextError : UUPSUnauthorizedCallContextErrorBase { }\n+    [Error(\"UUPSUnauthorizedCallContext\")]\n+    public class UUPSUnauthorizedCallContextErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class UUPSUnsupportedProxiableUUIDError : UUPSUnsupportedProxiableUUIDErrorBase { }\n+\n+    [Error(\"UUPSUnsupportedProxiableUUID\")]\n+    public class UUPSUnsupportedProxiableUUIDErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bytes32\", \"slot\", 1)]\n+        public virtual byte[] Slot { get; set; }\n+    }\n+\n+    public partial class UpgradeInterfaceVersionOutputDTO : UpgradeInterfaceVersionOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class UpgradeInterfaceVersionOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"string\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+    public partial class EntryPointOutputDTO : EntryPointOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class EntryPointOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+    public partial class GetDepositOutputDTO : GetDepositOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetDepositOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class GetNonceOutputDTO : GetNonceOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetNonceOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+    public partial class OnERC1155BatchReceivedOutputDTO : OnERC1155BatchReceivedOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class OnERC1155BatchReceivedOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes4\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class OnERC1155ReceivedOutputDTO : OnERC1155ReceivedOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class OnERC1155ReceivedOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes4\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class OnERC721ReceivedOutputDTO : OnERC721ReceivedOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class OnERC721ReceivedOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes4\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class OwnerOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class ProxiableUUIDOutputDTO : ProxiableUUIDOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class ProxiableUUIDOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes32\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bool\", \"\", 1)]\n+        public virtual bool ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+\n+}"},{"sha":"4503fb16a8b6e1806241631b7d4466ff412bf4d1","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccount/SimpleAccountService.gen.cs","status":"added","additions":423,"deletions":0,"changes":423,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FSimpleAccountService.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FSimpleAccountService.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccount%2FSimpleAccountService.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,423 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.Web3;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts.ContractHandlers;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.AccountAbstraction.SimpleAccount.SimpleAccount.ContractDefinition;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccount\n+{\n+    public partial class SimpleAccountService: SimpleAccountServiceBase\n+    {\n+        public static Task<TransactionReceipt> DeployContractAndWaitForReceiptAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountDeployment simpleAccountDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<SimpleAccountDeployment>().SendRequestAndWaitForReceiptAsync(simpleAccountDeployment, cancellationTokenSource);\n+        }\n+\n+        public static Task<string> DeployContractAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountDeployment simpleAccountDeployment)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<SimpleAccountDeployment>().SendRequestAsync(simpleAccountDeployment);\n+        }\n+\n+        public static async Task<SimpleAccountService> DeployContractAndGetServiceAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountDeployment simpleAccountDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            var receipt = await DeployContractAndWaitForReceiptAsync(web3, simpleAccountDeployment, cancellationTokenSource);\n+            return new SimpleAccountService(web3, receipt.ContractAddress);\n+        }\n+\n+        public SimpleAccountService(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+    }\n+\n+\n+    public partial class SimpleAccountServiceBase: ContractWeb3ServiceBase\n+    {\n+\n+        public SimpleAccountServiceBase(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+        public Task<string> UpgradeInterfaceVersionQueryAsync(UpgradeInterfaceVersionFunction upgradeInterfaceVersionFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<UpgradeInterfaceVersionFunction, string>(upgradeInterfaceVersionFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> UpgradeInterfaceVersionQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<UpgradeInterfaceVersionFunction, string>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> AddDepositRequestAsync(AddDepositFunction addDepositFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(addDepositFunction);\n+        }\n+\n+        public virtual Task<string> AddDepositRequestAsync()\n+        {\n+             return ContractHandler.SendRequestAsync<AddDepositFunction>();\n+        }\n+\n+        public virtual Task<TransactionReceipt> AddDepositRequestAndWaitForReceiptAsync(AddDepositFunction addDepositFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(addDepositFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<TransactionReceipt> AddDepositRequestAndWaitForReceiptAsync(CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync<AddDepositFunction>(null, cancellationToken);\n+        }\n+\n+        public Task<string> EntryPointQueryAsync(EntryPointFunction entryPointFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<EntryPointFunction, string>(entryPointFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> EntryPointQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<EntryPointFunction, string>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> ExecuteRequestAsync(ExecuteFunction executeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(executeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteRequestAndWaitForReceiptAsync(ExecuteFunction executeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteRequestAsync(string target, BigInteger value, byte[] data)\n+        {\n+            var executeFunction = new ExecuteFunction();\n+                executeFunction.Target = target;\n+                executeFunction.Value = value;\n+                executeFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAsync(executeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteRequestAndWaitForReceiptAsync(string target, BigInteger value, byte[] data, CancellationTokenSource cancellationToken = null)\n+        {\n+            var executeFunction = new ExecuteFunction();\n+                executeFunction.Target = target;\n+                executeFunction.Value = value;\n+                executeFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteBatchRequestAsync(ExecuteBatchFunction executeBatchFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(executeBatchFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteBatchRequestAndWaitForReceiptAsync(ExecuteBatchFunction executeBatchFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeBatchFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteBatchRequestAsync(List<Call> calls)\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+                executeBatchFunction.Calls = calls;\n+            \n+             return ContractHandler.SendRequestAsync(executeBatchFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteBatchRequestAndWaitForReceiptAsync(List<Call> calls, CancellationTokenSource cancellationToken = null)\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+                executeBatchFunction.Calls = calls;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeBatchFunction, cancellationToken);\n+        }\n+\n+        public Task<BigInteger> GetDepositQueryAsync(GetDepositFunction getDepositFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetDepositFunction, BigInteger>(getDepositFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> GetDepositQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetDepositFunction, BigInteger>(null, blockParameter);\n+        }\n+\n+        public Task<BigInteger> GetNonceQueryAsync(GetNonceFunction getNonceFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(getNonceFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> GetNonceQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> InitializeRequestAsync(InitializeFunction initializeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(initializeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> InitializeRequestAndWaitForReceiptAsync(InitializeFunction initializeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(initializeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> InitializeRequestAsync(string anOwner)\n+        {\n+            var initializeFunction = new InitializeFunction();\n+                initializeFunction.AnOwner = anOwner;\n+            \n+             return ContractHandler.SendRequestAsync(initializeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> InitializeRequestAndWaitForReceiptAsync(string anOwner, CancellationTokenSource cancellationToken = null)\n+        {\n+            var initializeFunction = new InitializeFunction();\n+                initializeFunction.AnOwner = anOwner;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(initializeFunction, cancellationToken);\n+        }\n+\n+        public Task<byte[]> OnERC1155BatchReceivedQueryAsync(OnERC1155BatchReceivedFunction onERC1155BatchReceivedFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<OnERC1155BatchReceivedFunction, byte[]>(onERC1155BatchReceivedFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> OnERC1155BatchReceivedQueryAsync(string returnValue1, string returnValue2, List<BigInteger> returnValue3, List<BigInteger> returnValue4, byte[] returnValue5, BlockParameter blockParameter = null)\n+        {\n+            var onERC1155BatchReceivedFunction = new OnERC1155BatchReceivedFunction();\n+                onERC1155BatchReceivedFunction.ReturnValue1 = returnValue1;\n+                onERC1155BatchReceivedFunction.ReturnValue2 = returnValue2;\n+                onERC1155BatchReceivedFunction.ReturnValue3 = returnValue3;\n+                onERC1155BatchReceivedFunction.ReturnValue4 = returnValue4;\n+                onERC1155BatchReceivedFunction.ReturnValue5 = returnValue5;\n+            \n+            return ContractHandler.QueryAsync<OnERC1155BatchReceivedFunction, byte[]>(onERC1155BatchReceivedFunction, blockParameter);\n+        }\n+\n+        public Task<byte[]> OnERC1155ReceivedQueryAsync(OnERC1155ReceivedFunction onERC1155ReceivedFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<OnERC1155ReceivedFunction, byte[]>(onERC1155ReceivedFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> OnERC1155ReceivedQueryAsync(string returnValue1, string returnValue2, BigInteger returnValue3, BigInteger returnValue4, byte[] returnValue5, BlockParameter blockParameter = null)\n+        {\n+            var onERC1155ReceivedFunction = new OnERC1155ReceivedFunction();\n+                onERC1155ReceivedFunction.ReturnValue1 = returnValue1;\n+                onERC1155ReceivedFunction.ReturnValue2 = returnValue2;\n+                onERC1155ReceivedFunction.ReturnValue3 = returnValue3;\n+                onERC1155ReceivedFunction.ReturnValue4 = returnValue4;\n+                onERC1155ReceivedFunction.ReturnValue5 = returnValue5;\n+            \n+            return ContractHandler.QueryAsync<OnERC1155ReceivedFunction, byte[]>(onERC1155ReceivedFunction, blockParameter);\n+        }\n+\n+        public Task<byte[]> OnERC721ReceivedQueryAsync(OnERC721ReceivedFunction onERC721ReceivedFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<OnERC721ReceivedFunction, byte[]>(onERC721ReceivedFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> OnERC721ReceivedQueryAsync(string returnValue1, string returnValue2, BigInteger returnValue3, byte[] returnValue4, BlockParameter blockParameter = null)\n+        {\n+            var onERC721ReceivedFunction = new OnERC721ReceivedFunction();\n+                onERC721ReceivedFunction.ReturnValue1 = returnValue1;\n+                onERC721ReceivedFunction.ReturnValue2 = returnValue2;\n+                onERC721ReceivedFunction.ReturnValue3 = returnValue3;\n+                onERC721ReceivedFunction.ReturnValue4 = returnValue4;\n+            \n+            return ContractHandler.QueryAsync<OnERC721ReceivedFunction, byte[]>(onERC721ReceivedFunction, blockParameter);\n+        }\n+\n+        public Task<string> OwnerQueryAsync(OwnerFunction ownerFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<OwnerFunction, string>(ownerFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> OwnerQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<OwnerFunction, string>(null, blockParameter);\n+        }\n+\n+        public Task<byte[]> ProxiableUUIDQueryAsync(ProxiableUUIDFunction proxiableUUIDFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<ProxiableUUIDFunction, byte[]>(proxiableUUIDFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> ProxiableUUIDQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<ProxiableUUIDFunction, byte[]>(null, blockParameter);\n+        }\n+\n+        public Task<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SupportsInterfaceFunction, bool>(supportsInterfaceFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<bool> SupportsInterfaceQueryAsync(byte[] interfaceId, BlockParameter blockParameter = null)\n+        {\n+            var supportsInterfaceFunction = new SupportsInterfaceFunction();\n+                supportsInterfaceFunction.InterfaceId = interfaceId;\n+            \n+            return ContractHandler.QueryAsync<SupportsInterfaceFunction, bool>(supportsInterfaceFunction, blockParameter);\n+        }\n+\n+        public virtual Task<string> UpgradeToAndCallRequestAsync(UpgradeToAndCallFunction upgradeToAndCallFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(upgradeToAndCallFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> UpgradeToAndCallRequestAndWaitForReceiptAsync(UpgradeToAndCallFunction upgradeToAndCallFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(upgradeToAndCallFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> UpgradeToAndCallRequestAsync(string newImplementation, byte[] data)\n+        {\n+            var upgradeToAndCallFunction = new UpgradeToAndCallFunction();\n+                upgradeToAndCallFunction.NewImplementation = newImplementation;\n+                upgradeToAndCallFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAsync(upgradeToAndCallFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> UpgradeToAndCallRequestAndWaitForReceiptAsync(string newImplementation, byte[] data, CancellationTokenSource cancellationToken = null)\n+        {\n+            var upgradeToAndCallFunction = new UpgradeToAndCallFunction();\n+                upgradeToAndCallFunction.NewImplementation = newImplementation;\n+                upgradeToAndCallFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(upgradeToAndCallFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ValidateUserOpRequestAsync(ValidateUserOpFunction validateUserOpFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(validateUserOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ValidateUserOpRequestAndWaitForReceiptAsync(ValidateUserOpFunction validateUserOpFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(validateUserOpFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ValidateUserOpRequestAsync(PackedUserOperation userOp, byte[] userOpHash, BigInteger missingAccountFunds)\n+        {\n+            var validateUserOpFunction = new ValidateUserOpFunction();\n+                validateUserOpFunction.UserOp = userOp;\n+                validateUserOpFunction.UserOpHash = userOpHash;\n+                validateUserOpFunction.MissingAccountFunds = missingAccountFunds;\n+            \n+             return ContractHandler.SendRequestAsync(validateUserOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ValidateUserOpRequestAndWaitForReceiptAsync(PackedUserOperation userOp, byte[] userOpHash, BigInteger missingAccountFunds, CancellationTokenSource cancellationToken = null)\n+        {\n+            var validateUserOpFunction = new ValidateUserOpFunction();\n+                validateUserOpFunction.UserOp = userOp;\n+                validateUserOpFunction.UserOpHash = userOpHash;\n+                validateUserOpFunction.MissingAccountFunds = missingAccountFunds;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(validateUserOpFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawDepositToRequestAsync(WithdrawDepositToFunction withdrawDepositToFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(withdrawDepositToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawDepositToRequestAndWaitForReceiptAsync(WithdrawDepositToFunction withdrawDepositToFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawDepositToFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawDepositToRequestAsync(string withdrawAddress, BigInteger amount)\n+        {\n+            var withdrawDepositToFunction = new WithdrawDepositToFunction();\n+                withdrawDepositToFunction.WithdrawAddress = withdrawAddress;\n+                withdrawDepositToFunction.Amount = amount;\n+            \n+             return ContractHandler.SendRequestAsync(withdrawDepositToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawDepositToRequestAndWaitForReceiptAsync(string withdrawAddress, BigInteger amount, CancellationTokenSource cancellationToken = null)\n+        {\n+            var withdrawDepositToFunction = new WithdrawDepositToFunction();\n+                withdrawDepositToFunction.WithdrawAddress = withdrawAddress;\n+                withdrawDepositToFunction.Amount = amount;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawDepositToFunction, cancellationToken);\n+        }\n+\n+        public override List<Type> GetAllFunctionTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(UpgradeInterfaceVersionFunction),\n+                typeof(AddDepositFunction),\n+                typeof(EntryPointFunction),\n+                typeof(ExecuteFunction),\n+                typeof(ExecuteBatchFunction),\n+                typeof(GetDepositFunction),\n+                typeof(GetNonceFunction),\n+                typeof(InitializeFunction),\n+                typeof(OnERC1155BatchReceivedFunction),\n+                typeof(OnERC1155ReceivedFunction),\n+                typeof(OnERC721ReceivedFunction),\n+                typeof(OwnerFunction),\n+                typeof(ProxiableUUIDFunction),\n+                typeof(SupportsInterfaceFunction),\n+                typeof(UpgradeToAndCallFunction),\n+                typeof(ValidateUserOpFunction),\n+                typeof(WithdrawDepositToFunction)\n+            };\n+        }\n+\n+        public override List<Type> GetAllEventTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(InitializedEventDTO),\n+                typeof(SimpleAccountInitializedEventDTO),\n+                typeof(UpgradedEventDTO)\n+            };\n+        }\n+\n+        public override List<Type> GetAllErrorTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(AddressEmptyCodeError),\n+                typeof(ECDSAInvalidSignatureError),\n+                typeof(ECDSAInvalidSignatureLengthError),\n+                typeof(ECDSAInvalidSignatureSError),\n+                typeof(ERC1967InvalidImplementationError),\n+                typeof(ERC1967NonPayableError),\n+                typeof(ExecuteErrorError),\n+                typeof(FailedCallError),\n+                typeof(InvalidInitializationError),\n+                typeof(NotInitializingError),\n+                typeof(UUPSUnauthorizedCallContextError),\n+                typeof(UUPSUnsupportedProxiableUUIDError)\n+            };\n+        }\n+    }\n+}"},{"sha":"a921753e76dc3dfc8066241ff339f1c660d73916","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccountFactory/ContractDefinition/SimpleAccountFactoryDefinition.gen.cs","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FContractDefinition%2FSimpleAccountFactoryDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FContractDefinition%2FSimpleAccountFactoryDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FContractDefinition%2FSimpleAccountFactoryDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,97 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts;\n+using System.Threading;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccountFactory.ContractDefinition\n+{\n+\n+\n+    public partial class SimpleAccountFactoryDeployment : SimpleAccountFactoryDeploymentBase\n+    {\n+        public SimpleAccountFactoryDeployment() : base(BYTECODE) { }\n+        public SimpleAccountFactoryDeployment(string byteCode) : base(byteCode) { }\n+    }\n+\n+    public class SimpleAccountFactoryDeploymentBase : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE = \"60c0806040523461010c57602081611a80803803809161001f8285610137565b83398101031261010c57516001600160a01b0381169081900361010c57604051611265808201906001600160401b0382118383101761012357602091839161081b83398481520301905ff08015610118576080526040516213997160e71b815290602090829060049082905afa908115610118575f916100d2575b5060a0526040516106c0908161015b823960805181818160a50152818161024a015261035e015260a05181818160e601526101af0152f35b90506020813d602011610110575b816100ed60209383610137565b8101031261010c57516001600160a01b038116810361010c575f61009a565b5f80fd5b3d91506100e0565b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b601f909101601f19168101906001600160401b038211908210176101235760405256fe6080806040526004361015610012575f80fd5b5f3560e01c90816309ccb880146100d45750806311464fbe146100905780635fbfb9cf1461007757638cb84e1814610048575f80fd5b3461007357602061006161005b36610115565b906102ec565b6040516001600160a01b039091168152f35b5f80fd5b3461007357602061006161008a36610115565b906101ad565b34610073575f366003190112610073576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610073575f366003190112610073577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6040906003190112610073576004356001600160a01b0381168103610073579060243590565b90601f8019910116810190811067ffffffffffffffff82111761015d57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b0390911681526040602080830182905283519183018290526060938291018484015e5f828201840152601f01601f1916010190565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102a8576101e782826102ec565b803b610299575060405163189acdbd60e31b60208201526001600160a01b03909116602480830191909152815261021f60448261013b565b6040519061029d8083019183831067ffffffffffffffff84111761015d578392610278926103ee85397f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690610171565b03905ff5801561028e576001600160a01b031690565b6040513d5f823e3d90fd5b6001600160a01b031692915050565b606460405162461bcd60e51b815260206004820152602060248201527f6f6e6c792063616c6c61626c652066726f6d2053656e64657243726561746f726044820152fd5b604051600b92916103c361029d610306602082018561013b565b80845260208401906103ee823960405163189acdbd60e31b60208201526001600160a01b03909316602480850191909152835261034460448461013b565b602060405193610392856103848482019360018060a01b037f00000000000000000000000000000000000000000000000000000000000000001685610171565b03601f19810187528661013b565b60405194859383850197518091895e840190838201905f8252519283915e01015f815203601f19810183528261013b565b5190209060405191604083015260208201523081520160ff8153605590206001600160a01b03169056fe608060405261029d8038038061001481610168565b92833981016040828203126101645781516001600160a01b03811692909190838303610164576020810151906001600160401b03821161016457019281601f8501121561016457835161006e610069826101a1565b610168565b9481865260208601936020838301011161016457815f926020809301865e86010152823b15610152577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a282511561013a575f8091610122945190845af43d15610132573d91610113610069846101a1565b9283523d5f602085013e6101bc565b505b6040516082908161021b8239f35b6060916101bc565b50505034156101245763b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761018d57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b03811161018d57601f01601f191660200190565b906101e057508051156101d157805190602001fd5b63d6bda27560e01b5f5260045ffd5b81511580610211575b6101f1575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b156101e956fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc545f9081906001600160a01b0316368280378136915af43d5f803e156048573d5ff35b3d5ffdfea2646970667358221220e64f22b40c15ec618417d504339d7562493bf9a3d649710fdb8dd0704c7b5faf64736f6c634300081d0033a264697066735822122016f0062ed0c432a3a74e8d121421db10595ebe2017f64be8e6afb416cc33168e64736f6c634300081d003360c03461014757601f61126538819003918201601f19168301916001600160401b0383118484101761014b5780849260209460405283398101031261014757516001600160a01b0381168103610147573060805260a0525f5160206112455f395f51905f525460ff8160401c16610138576002600160401b03196001600160401b038216016100e2575b6040516110e5908161016082396080518181816105de0152610682015260a05181818161016e01528181610298015281816103bd0152818161052801528181610862015281816108f301528181610a890152610de30152f35b6001600160401b0319166001600160401b039081175f5160206112455f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610089565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f905f3560e01c90816301ffc9a714610b8c57508063150b7a0214610b3657806319822f7c14610a5357806334fcd5be146109665780634a58db19146108e55780634d44560d146108305780634f1ef2861461063257806352d1902d146105cb5780638da5cb5b146105a4578063ad3cb1cc14610557578063b0d691fe14610512578063b61d27f614610497578063bc197c81146103fe578063c399ec8814610390578063c4d66de8146101f3578063d087d2881461013a5763f23a6e610361000f57346101375760a0366003190112610137576100f8610bf7565b50610101610c0d565b506084356001600160401b03811161013557610121903690600401610c23565b505060405163f23a6e6160e01b8152602090f35b505b80fd5b5034610137578060031936011261013757604051631aab3f0d60e11b815230600482015260248101829052906020826044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101e757906101b0575b602090604051908152f35b506020813d6020116101df575b816101ca60209383610c80565b810103126101db57602090516101a5565b5f80fd5b3d91506101bd565b604051903d90823e3d90fd5b50346101375760203660031901126101375761020d610bf7565b5f5160206110905f395f51905f52549060ff8260401c1615916001600160401b03811680159081610388575b600114908161037e575b159081610375575b506103665767ffffffffffffffff1981166001175f5160206110905f395f51905f52558261033a575b5082546001600160a01b0319166001600160a01b03918216908117845560405192917f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8580a36102e4575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29168ff0000000000000000195f5160206110905f395f51905f5254165f5160206110905f395f51905f525560018152a180f35b68ffffffffffffffffff191668010000000000000001175f5160206110905f395f51905f52555f610274565b63f92ee8a960e01b8452600484fd5b9050155f61024b565b303b159150610243565b849150610239565b50346101375780600319360112610137576040516370a0823160e01b8152306004820152906020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101e757906101b057602090604051908152f35b50346101375760a036600319011261013757610418610bf7565b50610421610c0d565b506044356001600160401b03811161013557610441903690600401610c50565b50506064356001600160401b03811161013557610462903690600401610c50565b50506084356001600160401b03811161013557610483903690600401610c23565b505060405163bc197c8160e01b8152602090f35b503461013757606036600319011261013757806104b2610bf7565b6044356001600160401b03811161050e5782916104d66104e9923690600401610c23565b92906104e0610de0565b5a933691610cd0565b916020835193019160243591f1156104fe5780f35b610506610e71565b602081519101fd5b5050fd5b50346101375780600319360112610137576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610137578060031936011261013757506105a060405161057a604082610c80565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610d06565b0390f35b5034610137578060031936011261013757546040516001600160a01b039091168152602090f35b50346101375780600319360112610137577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036106235760206040515f5160206110705f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261013757610647610bf7565b906024356001600160401b038111610135573660238201121561013557610678903690602481600401359101610cd0565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630811490811561080e575b506107ff576106ba610e8b565b6040516352d1902d60e01b8152926001600160a01b0381169190602085600481865afa809585966107c7575b506106ff57634c9c8ce360e01b84526004839052602484fd5b9091845f5160206110705f395f51905f5281036107b55750813b156107a3575f5160206110705f395f51905f5280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151839015610789578083602061078595519101845af461077f610db1565b91611011565b5080f35b505050346107945780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8452600452602483fd5b632a87526960e21b8552600452602484fd5b9095506020813d6020116107f7575b816107e360209383610c80565b810103126107f35751945f6106e6565b8480fd5b3d91506107d6565b63703e46dd60e11b8252600482fd5b5f5160206110705f395f51905f52546001600160a01b0316141590505f6106ad565b503461013757604036600319011261013757806004356001600160a01b038116908190036108e257610860610e8b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561050e57829160448392604051948593849263040b850f60e31b8452600484015260243560248401525af180156108d7576108c65750f35b816108d091610c80565b6101375780f35b6040513d84823e3d90fd5b50fd5b505f3660031901126101db577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101db575f6024916040519283809263b760faf960e01b825230600483015234905af1801561095b5761094f575080f35b61001a91505f90610c80565b6040513d5f823e3d90fd5b346101db5760203660031901126101db576004356001600160401b0381116101db57610996903690600401610c50565b61099e610de0565b36829003605e19015f5b8281101561001a578060051b840135828112156101db5784018035906001600160a01b03821682036101db575f91816109f36109e8604086950183610d2a565b91905a923691610cd0565b926020808551950193013591f115610a0d576001016109a8565b60018303610a1d57610506610e71565b610a25610e71565b90610a4f604051928392635a15467560e01b84526004840152604060248401526044830190610d06565b0390fd5b346101db5760603660031901126101db576004356001600160401b0381116101db5761012060031982360301126101db576044357f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610af157610ac960209260243590600401610d5c565b9080610ad9575b50604051908152f35b5f80808093335af150610aea610db1565b5082610ad0565b60405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606490fd5b346101db5760803660031901126101db57610b4f610bf7565b50610b58610c0d565b506064356001600160401b0381116101db57610b78903690600401610c23565b5050604051630a85bd0160e11b8152602090f35b346101db5760203660031901126101db576004359063ffffffff60e01b82168092036101db57602091630a85bd0160e11b8114908115610be6575b8115610bd5575b5015158152f35b6301ffc9a760e01b14905083610bce565b630271189760e51b81149150610bc7565b600435906001600160a01b03821682036101db57565b602435906001600160a01b03821682036101db57565b9181601f840112156101db578235916001600160401b0383116101db57602083818601950101116101db57565b9181601f840112156101db578235916001600160401b0383116101db576020808501948460051b0101116101db57565b90601f801991011681019081106001600160401b03821117610ca157604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160401b038111610ca157601f01601f191660200190565b929192610cdc82610cb5565b91610cea6040519384610c80565b8294818452818301116101db578281602093845f960137010152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b903590601e19813603018212156101db57018035906001600160401b0382116101db576020019181360383136101db57565b5f546001600160a01b031691610d9a91610d919190610d8b90610d8490610100810190610d2a565b3691610cd0565b90610ee1565b90929192610f1b565b6001600160a01b031603610dac575f90565b600190565b3d15610ddb573d90610dc282610cb5565b91610dd06040519384610c80565b82523d5f602084013e565b606090565b337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316148015610e5e575b15610e1a57565b606460405162461bcd60e51b815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b505f546001600160a01b03163314610e13565b3d604051906020818301016040528082525f602083013e90565b5f546001600160a01b031633148015610ed8575b15610ea657565b60405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606490fd5b50303314610e9f565b8151919060418303610f1157610f0a9250602082015190606060408401519301515f1a90610f8f565b9192909190565b50505f9160029190565b6004811015610f7b5780610f2d575050565b60018103610f445763f645eedf60e01b5f5260045ffd5b60028103610f5f575063fce698f760e01b5f5260045260245ffd5b600314610f695750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611006579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa1561095b575f516001600160a01b03811615610ffc57905f905f90565b505f906001905f90565b5050505f9160039190565b90611035575080511561102657805190602001fd5b63d6bda27560e01b5f5260045ffd5b81511580611066575b611046575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561103e56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a264697066735822122081fd1357b120026896a4a48fd727b7bee449d49687e3f19ea9931fdc9c23c7f664736f6c634300081d0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\";\n+        public SimpleAccountFactoryDeploymentBase() : base(BYTECODE) { }\n+        public SimpleAccountFactoryDeploymentBase(string byteCode) : base(byteCode) { }\n+        [Parameter(\"address\", \"_entryPoint\", 1)]\n+        public virtual string EntryPoint { get; set; }\n+    }\n+\n+    public partial class AccountImplementationFunction : AccountImplementationFunctionBase { }\n+\n+    [Function(\"accountImplementation\", \"address\")]\n+    public class AccountImplementationFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class CreateAccountFunction : CreateAccountFunctionBase { }\n+\n+    [Function(\"createAccount\", \"address\")]\n+    public class CreateAccountFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"owner\", 1)]\n+        public virtual string Owner { get; set; }\n+        [Parameter(\"uint256\", \"salt\", 2)]\n+        public virtual BigInteger Salt { get; set; }\n+    }\n+\n+    public partial class GetAddressFunction : GetAddressFunctionBase { }\n+\n+    [Function(\"getAddress\", \"address\")]\n+    public class GetAddressFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"owner\", 1)]\n+        public virtual string Owner { get; set; }\n+        [Parameter(\"uint256\", \"salt\", 2)]\n+        public virtual BigInteger Salt { get; set; }\n+    }\n+\n+    public partial class SenderCreatorFunction : SenderCreatorFunctionBase { }\n+\n+    [Function(\"senderCreator\", \"address\")]\n+    public class SenderCreatorFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class AccountImplementationOutputDTO : AccountImplementationOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class AccountImplementationOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+    public partial class GetAddressOutputDTO : GetAddressOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetAddressOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class SenderCreatorOutputDTO : SenderCreatorOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class SenderCreatorOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+}"},{"sha":"d7bda63db7fc86e27bf23ef71703781006edcf2a","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccountFactory/SimpleAccountFactoryService.cs","status":"added","additions":140,"deletions":0,"changes":140,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,140 @@\n+﻿using Nethereum.AccountAbstraction.EntryPoint.ContractDefinition;\n+using Nethereum.AccountAbstraction.EntryPoint;\n+using Nethereum.AccountAbstraction.SimpleAccount.SimpleAccountFactory.ContractDefinition;\n+using Nethereum.Contracts;\n+using Nethereum.Hex.HexConvertors.Extensions;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+using System.Text;\n+using System.Threading.Tasks;\n+using Nethereum.Signer;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Util;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccountFactory\n+{\n+    public partial class SimpleAccountFactoryService\n+    {\n+        public const ulong DEFAULT_ACCOUNT_CREATION_SALT = 0;\n+        public const ulong DEFAULT_ACCOUNT_CREATION_CALL_GAS_LIMIT = 1000000;\n+        public const ulong DEFAULT_ACCOUNT_CREATION_VERIFICATION_GAS_LIMIT = 2000000;\n+        public const ulong DEFAULT_ACCOUNT_CREATION_GAS = 10000000;\n+\n+        public byte[] GetCreateAccountInitCode(BigInteger salt)\n+        {\n+            return GetCreateAccountInitCode(this.Web3.TransactionManager.Account.Address, salt);\n+        }\n+\n+        public byte[] GetCreateAccountInitCode(string owner, BigInteger salt)\n+        {\n+            var createAccountFunction = new CreateAccountFunction();\n+            createAccountFunction.Owner = owner;\n+            createAccountFunction.Salt = salt;\n+            return this.ContractAddress.HexToByteArray().Concat(createAccountFunction.GetCallData()).ToArray();\n+        }\n+\n+        public async Task<string> CreateAccountQueryAsync(string owner, BigInteger salt)\n+        {\n+            var createAccountFunction = new CreateAccountFunction();\n+            createAccountFunction.Owner = owner;\n+            createAccountFunction.Salt = salt;\n+            return await ContractHandler.QueryAsync<CreateAccountFunction, string>(createAccountFunction);\n+        }\n+\n+\n+        public class CreateAndDeployAccountResult\n+        {\n+            public string AccountAddress { get; set; }\n+            public TransactionReceipt Receipt { get; set; }\n+        }\n+\n+        public Task<CreateAndDeployAccountResult> CreateAndDeployAccountAsync(\n+           string owner,\n+           string beneficiary,\n+           string entryPointAddress,\n+           EthECKey ethKey,\n+           decimal fundingAmountInEther = 0.01m,\n+           ulong salt = DEFAULT_ACCOUNT_CREATION_SALT,\n+           ulong callGasLimit = DEFAULT_ACCOUNT_CREATION_CALL_GAS_LIMIT,\n+           ulong verificationGasLimit = DEFAULT_ACCOUNT_CREATION_VERIFICATION_GAS_LIMIT,\n+           ulong gas = DEFAULT_ACCOUNT_CREATION_GAS\n+         )\n+        {\n+            return CreateAndDeployAccountAsync(\n+                owner,\n+                beneficiary,\n+                entryPointAddress,\n+                ethKey,\n+                fundingAmountInEther,\n+                new BigInteger(salt),\n+                new BigInteger(callGasLimit),\n+                new BigInteger(verificationGasLimit),\n+                new BigInteger(gas)\n+            );\n+        }\n+\n+\n+\n+        public async Task<CreateAndDeployAccountResult> CreateAndDeployAccountAsync(\n+            string owner,\n+            string beneficiary,\n+            string entryPointAddress,\n+            EthECKey ethKey,\n+            decimal fundingAmountInEther,\n+            BigInteger salt,\n+            BigInteger callGasLimit,\n+            BigInteger verificationGasLimit,\n+            BigInteger gas\n+            )\n+        {\n+     \n+            var entryPointService = new EntryPointService(Web3, entryPointAddress);\n+\n+            var accountAddress = await GetAddressQueryAsync(owner, salt);\n+            var initCode = GetCreateAccountInitCode(owner, salt);\n+\n+            await Web3.Eth.GetEtherTransferService()\n+                .TransferEtherAndWaitForReceiptAsync(accountAddress, fundingAmountInEther);\n+\n+            var code = await Web3.Eth.GetCode.SendRequestAsync(accountAddress);\n+            if (!string.IsNullOrEmpty(code) && code.RemoveHexPrefix().Length > 0)\n+                throw new Exception(\"Account already exists\");\n+\n+            var createOp = await entryPointService.SignAndInitialiseUserOperationAsync(new UserOperation()\n+            {\n+                InitCode = initCode,\n+                CallGasLimit = callGasLimit,\n+                VerificationGasLimit = verificationGasLimit\n+            }, ethKey);\n+\n+            var handleOpsRequest = new HandleOpsFunction()\n+            {\n+                Ops = new List<PackedUserOperation>() { createOp },\n+                Beneficiary = owner,\n+                Gas = gas\n+            };\n+\n+            var receipt = await entryPointService.HandleOpsRequestAndWaitForReceiptAsync(handleOpsRequest);\n+\n+            var hash = await entryPointService.GetUserOpHashQueryAsync(createOp);\n+            var accountDeployed = receipt.Logs.DecodeAllEvents<AccountDeployedEventDTO>().FirstOrDefault();\n+\n+            if (receipt.Status.Value != 1 || accountDeployed == null ||\n+                !hash.ToHex().IsTheSameHex(accountDeployed.Event.UserOpHash.ToHex()) ||\n+                !accountDeployed.Event.Sender.IsTheSameAddress(createOp.Sender) ||\n+                !accountDeployed.Event.Factory.IsTheSameAddress(initCode.ToHex().Substring(0, 40)))\n+            {\n+                throw new Exception(\"Account deployment validation failed\");\n+            }\n+\n+            return new CreateAndDeployAccountResult()\n+            {\n+                AccountAddress = accountAddress,\n+                Receipt = receipt\n+            };\n+        }\n+    }\n+}"},{"sha":"0baf2ec2c296aa7879de8ca4a28e5ed613108688","filename":"src/Nethereum.AccountAbstraction.SimpleAccount/SimpleAccountFactory/SimpleAccountFactoryService.gen.cs","status":"added","additions":141,"deletions":0,"changes":141,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction.SimpleAccount%2FSimpleAccountFactory%2FSimpleAccountFactoryService.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,141 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.Web3;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts.ContractHandlers;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.AccountAbstraction.SimpleAccount.SimpleAccountFactory.ContractDefinition;\n+\n+namespace Nethereum.AccountAbstraction.SimpleAccount.SimpleAccountFactory\n+{\n+    public partial class SimpleAccountFactoryService: SimpleAccountFactoryServiceBase\n+    {\n+        public static Task<TransactionReceipt> DeployContractAndWaitForReceiptAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountFactoryDeployment simpleAccountFactoryDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<SimpleAccountFactoryDeployment>().SendRequestAndWaitForReceiptAsync(simpleAccountFactoryDeployment, cancellationTokenSource);\n+        }\n+\n+        public static Task<string> DeployContractAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountFactoryDeployment simpleAccountFactoryDeployment)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<SimpleAccountFactoryDeployment>().SendRequestAsync(simpleAccountFactoryDeployment);\n+        }\n+\n+        public static async Task<SimpleAccountFactoryService> DeployContractAndGetServiceAsync(Nethereum.Web3.IWeb3 web3, SimpleAccountFactoryDeployment simpleAccountFactoryDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            var receipt = await DeployContractAndWaitForReceiptAsync(web3, simpleAccountFactoryDeployment, cancellationTokenSource);\n+            return new SimpleAccountFactoryService(web3, receipt.ContractAddress);\n+        }\n+\n+        public SimpleAccountFactoryService(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+    }\n+\n+\n+    public partial class SimpleAccountFactoryServiceBase: ContractWeb3ServiceBase\n+    {\n+\n+        public SimpleAccountFactoryServiceBase(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+        public Task<string> AccountImplementationQueryAsync(AccountImplementationFunction accountImplementationFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<AccountImplementationFunction, string>(accountImplementationFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> AccountImplementationQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<AccountImplementationFunction, string>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> CreateAccountRequestAsync(CreateAccountFunction createAccountFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(createAccountFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> CreateAccountRequestAndWaitForReceiptAsync(CreateAccountFunction createAccountFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(createAccountFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> CreateAccountRequestAsync(string owner, BigInteger salt)\n+        {\n+            var createAccountFunction = new CreateAccountFunction();\n+                createAccountFunction.Owner = owner;\n+                createAccountFunction.Salt = salt;\n+            \n+             return ContractHandler.SendRequestAsync(createAccountFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> CreateAccountRequestAndWaitForReceiptAsync(string owner, BigInteger salt, CancellationTokenSource cancellationToken = null)\n+        {\n+            var createAccountFunction = new CreateAccountFunction();\n+                createAccountFunction.Owner = owner;\n+                createAccountFunction.Salt = salt;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(createAccountFunction, cancellationToken);\n+        }\n+\n+        public Task<string> GetAddressQueryAsync(GetAddressFunction getAddressFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetAddressFunction, string>(getAddressFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> GetAddressQueryAsync(string owner, BigInteger salt, BlockParameter blockParameter = null)\n+        {\n+            var getAddressFunction = new GetAddressFunction();\n+                getAddressFunction.Owner = owner;\n+                getAddressFunction.Salt = salt;\n+            \n+            return ContractHandler.QueryAsync<GetAddressFunction, string>(getAddressFunction, blockParameter);\n+        }\n+\n+        public Task<string> SenderCreatorQueryAsync(SenderCreatorFunction senderCreatorFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SenderCreatorFunction, string>(senderCreatorFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> SenderCreatorQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SenderCreatorFunction, string>(null, blockParameter);\n+        }\n+\n+        public override List<Type> GetAllFunctionTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(AccountImplementationFunction),\n+                typeof(CreateAccountFunction),\n+                typeof(GetAddressFunction),\n+                typeof(SenderCreatorFunction)\n+            };\n+        }\n+\n+        public override List<Type> GetAllEventTypes()\n+        {\n+            return new List<Type>\n+            {\n+\n+            };\n+        }\n+\n+        public override List<Type> GetAllErrorTypes()\n+        {\n+            return new List<Type>\n+            {\n+\n+            };\n+        }\n+    }\n+}"},{"sha":"dfd603bdc68daa7a473f3fd85825431ab8da656e","filename":"src/Nethereum.AccountAbstraction/AccountAbstractionEIP7702Utils.cs","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FAccountAbstractionEIP7702Utils.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FAccountAbstractionEIP7702Utils.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FAccountAbstractionEIP7702Utils.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,93 @@\n+﻿using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.Util;\n+\n+namespace Nethereum.AccountAbstraction\n+{\n+    public class AccountAbstractionEIP7702Utils\n+        {\n+            public static readonly byte[] INITCODE_EIP7702_MARKER = new byte[] { 0x77, 0x02 };\n+\n+            public static bool IsEip7702UserOp(byte[] initCode)\n+            {\n+                return initCode.Length >= 2 && initCode.Take(2).SequenceEqual(INITCODE_EIP7702_MARKER);\n+            }\n+\n+            public static bool IsEip7702UserOp(UserOperation userOperation)\n+            {\n+                return IsEip7702UserOp(userOperation.InitCode);\n+            }\n+\n+            public static byte[] GetEip7702Delegate(byte[] initCode)\n+            {\n+                if (IsEip7702UserOp(initCode))\n+                {\n+                    return initCode.Skip(2).Take(20).ToArray();\n+                }\n+                return Array.Empty<byte>();\n+            }\n+\n+            public static byte[] CreateEip7702InitCode(byte[] delegateAddress)\n+            {\n+                if (delegateAddress.Length != 20)\n+                    throw new ArgumentException(\"Delegate address must be 20 bytes.\");\n+\n+                return INITCODE_EIP7702_MARKER.Concat(delegateAddress).ToArray();\n+            }\n+\n+            public static byte[] CreateEip7702InitCode(string delegateAddressHex)\n+            {\n+                var addressBytes = AddressUtil.Current.ConvertToValid20ByteAddress(delegateAddressHex).HexToByteArray();\n+                return CreateEip7702InitCode(addressBytes);\n+            }\n+\n+            /// <summary>\n+            /// Adjust initCode for hashing as per EIP-7702 logic\n+            /// If initCode is short, return delegate only; else, replace first 20 bytes with delegate.\n+            /// </summary>\n+            public static byte[] UpdateInitCodeForHashing(byte[] initCode, byte[] delegateAddress)\n+            {\n+                if (!IsEip7702UserOp(initCode))\n+                    throw new ArgumentException(\"initCode must start with EIP-7702 marker\");\n+\n+                if (delegateAddress.Length != 20)\n+                    throw new ArgumentException(\"Delegate address must be 20 bytes.\");\n+\n+                if (initCode.Length < 20)\n+                {\n+                    return delegateAddress;\n+                }\n+\n+                // Replace the first 20 bytes with the new delegate, keep the rest\n+                return delegateAddress.Concat(initCode.Skip(20)).ToArray();\n+            }\n+\n+            public static byte[] UpdateInitCodeForHashing(byte[] initCode, string delegateAddressHex)\n+            {\n+                var delegateBytes = AddressUtil.Current\n+                    .ConvertToValid20ByteAddress(delegateAddressHex)\n+                    .HexToByteArray();\n+                return UpdateInitCodeForHashing(initCode, delegateBytes);\n+            }\n+\n+\n+            public static byte[] CreateEip7702InitCode(byte[] delegateAddress, byte[] extraData)\n+            {\n+                if (delegateAddress.Length != 20)\n+                    throw new ArgumentException(\"Delegate address must be 20 bytes.\");\n+\n+                return INITCODE_EIP7702_MARKER\n+                    .Concat(delegateAddress)\n+                    .Concat(extraData ?? Array.Empty<byte>())\n+                    .ToArray();\n+            }\n+\n+            public static byte[] CreateEip7702InitCode(string delegateAddressHex, byte[] extraData)\n+            {\n+                var delegateBytes = AddressUtil.Current\n+                    .ConvertToValid20ByteAddress(delegateAddressHex)\n+                    .HexToByteArray();\n+\n+                return CreateEip7702InitCode(delegateBytes, extraData);\n+            }\n+    }\n+}"},{"sha":"e986f21be329f97e3bee7d394cdc09047ab52686","filename":"src/Nethereum.AccountAbstraction/AccountAbstractionExecuteOpBuilder.cs","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FAccountAbstractionExecuteOpBuilder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FAccountAbstractionExecuteOpBuilder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FAccountAbstractionExecuteOpBuilder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,41 @@\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.Contracts;\n+using System.Numerics;\n+\n+namespace Nethereum.AccountAbstraction\n+{\n+    public class AccountAbstractionExecuteOpBuilder\n+    {\n+\n+        /*   function executeUserOp(\n+                    PackedUserOperation calldata userOp,\n+                    bytes32 userOpHash\n+                ) external;\n+         }*/\n+        public class ExecuteOpFunction: FunctionMessage\n+        {\n+            [Parameter(\"tuple\", \"userOp\", 1)]\n+            public virtual PackedUserOperation UserOp { get; set; }\n+            [Parameter(\"bytes32\", \"userOpHash\", 2)]\n+            public virtual byte[] UserOpHash { get; set; }\n+\n+        }\n+\n+        public byte[] CreateAccountAbstractionExecuteOpEncodedFunction(PackedUserOperation userOp, byte[] userOpHash)\n+        {\n+            var executeOpFunction = new ExecuteOpFunction();\n+            executeOpFunction.UserOp = userOp;\n+            executeOpFunction.UserOpHash = userOpHash;\n+\n+            return executeOpFunction.GetCallData();\n+\n+        }\n+\n+        public byte[] CreateAccountAbstractionExecuteOpEncodedFunctionAsync(PackedUserOperation userOp, string entryPoint, BigInteger chainId)\n+        {\n+            var hash = UserOperationBuilder.HashUserOperation(userOp, entryPoint, chainId);    \n+            return CreateAccountAbstractionExecuteOpEncodedFunction(userOp, hash);\n+        }\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"b8eaec5dc5f6c9fc547fb99b9e58533c47cecda0","filename":"src/Nethereum.AccountAbstraction/BaseAccount/AccountAbstractionBaseAccountExecuteBuilder.cs","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionBaseAccountExecuteBuilder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionBaseAccountExecuteBuilder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionBaseAccountExecuteBuilder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,48 @@\n+using Nethereum.AccountAbstraction.BaseAccount.ContractDefinition;\n+using Nethereum.Contracts;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount\n+{\n+\n+\n+\n+    public class AccountAbstractionBaseAccountExecuteBuilder : IAccountAbstractionExecuteBuilder\n+    {\n+        public Task<byte[]> CreateAccountAbstractionExecuteEncodedFunction<TFunctionCall>(string target, BigInteger value, TFunctionCall functionCall)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var executeFunction = new ExecuteFunction();\n+            executeFunction.Target = target;\n+            executeFunction.Value = value;\n+            executeFunction.Data = functionCall.GetCallData();\n+            return Task.FromResult(executeFunction.GetCallData());\n+        }\n+\n+        public Call CreateAccountAbstractionCall<TFunctionCall>(string target, BigInteger value, TFunctionCall functionCall)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var call = new Call\n+            {\n+                Target = target,\n+                Value = value,\n+                Data = functionCall.GetCallData()\n+            };\n+            return call;\n+        }\n+\n+        public byte[] CreateAccountAbstractionExecuteBatchEncodedFunction<TFunctionCall>(List<Call> calls)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+            executeBatchFunction.Calls = calls;\n+            return executeBatchFunction.GetCallData();\n+        }\n+\n+    }\n+}"},{"sha":"fd00471a6a807e28b3b8e145dc77de683ace3e1c","filename":"src/Nethereum.AccountAbstraction/BaseAccount/AccountAbstractionExecuteBuilder.cs","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionExecuteBuilder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionExecuteBuilder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FAccountAbstractionExecuteBuilder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,45 @@\n+﻿using Nethereum.AccountAbstraction.BaseAccount.ContractDefinition;\n+using Nethereum.Contracts;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount\n+{\n+    public class AccountAbstractionExecuteBuilder\n+    {\n+        public static byte[] CreateAccountAbstractionExecuteEncodedFunction<TFunctionCall>(string target, BigInteger value, TFunctionCall functionCall)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var executeFunction = new ExecuteFunction();\n+            executeFunction.Target = target;\n+            executeFunction.Value = value;\n+            executeFunction.Data = functionCall.GetCallData();\n+            return executeFunction.GetCallData();\n+        }\n+\n+        public static Call CreateAccountAbstractionCall<TFunctionCall>(string target, BigInteger value, TFunctionCall functionCall)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var call = new Call\n+            {\n+                Target = target,\n+                Value = value,\n+                Data = functionCall.GetCallData()\n+            };\n+            return call;\n+        }\n+\n+        public static byte[] CreateAccountAbstractionExecuteBatchEncodedFunction<TFunctionCall>(List<Call> calls)\n+            where TFunctionCall : FunctionMessage, new()\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+            executeBatchFunction.Calls = calls;\n+            return executeBatchFunction.GetCallData();\n+        }\n+\n+    }\n+}"},{"sha":"aa74811ba986b7143e724514cc6206b0605f7295","filename":"src/Nethereum.AccountAbstraction/BaseAccount/BaseAccountService.gen.cs","status":"added","additions":185,"deletions":0,"changes":185,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FBaseAccountService.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FBaseAccountService.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FBaseAccountService.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,185 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.Web3;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts.ContractHandlers;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.AccountAbstraction.BaseAccount.ContractDefinition;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount\n+{\n+    public partial class BaseAccountService: BaseAccountServiceBase\n+    {\n+        public static Task<TransactionReceipt> DeployContractAndWaitForReceiptAsync(Nethereum.Web3.IWeb3 web3, BaseAccountDeployment baseAccountDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<BaseAccountDeployment>().SendRequestAndWaitForReceiptAsync(baseAccountDeployment, cancellationTokenSource);\n+        }\n+\n+        public static Task<string> DeployContractAsync(Nethereum.Web3.IWeb3 web3, BaseAccountDeployment baseAccountDeployment)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<BaseAccountDeployment>().SendRequestAsync(baseAccountDeployment);\n+        }\n+\n+        public static async Task<BaseAccountService> DeployContractAndGetServiceAsync(Nethereum.Web3.IWeb3 web3, BaseAccountDeployment baseAccountDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            var receipt = await DeployContractAndWaitForReceiptAsync(web3, baseAccountDeployment, cancellationTokenSource);\n+            return new BaseAccountService(web3, receipt.ContractAddress);\n+        }\n+\n+        public BaseAccountService(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+    }\n+\n+\n+    public partial class BaseAccountServiceBase: ContractWeb3ServiceBase\n+    {\n+\n+        public BaseAccountServiceBase(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+        public Task<string> EntryPointQueryAsync(EntryPointFunction entryPointFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<EntryPointFunction, string>(entryPointFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> EntryPointQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<EntryPointFunction, string>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> ExecuteRequestAsync(ExecuteFunction executeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(executeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteRequestAndWaitForReceiptAsync(ExecuteFunction executeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteRequestAsync(string target, BigInteger value, byte[] data)\n+        {\n+            var executeFunction = new ExecuteFunction();\n+                executeFunction.Target = target;\n+                executeFunction.Value = value;\n+                executeFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAsync(executeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteRequestAndWaitForReceiptAsync(string target, BigInteger value, byte[] data, CancellationTokenSource cancellationToken = null)\n+        {\n+            var executeFunction = new ExecuteFunction();\n+                executeFunction.Target = target;\n+                executeFunction.Value = value;\n+                executeFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteBatchRequestAsync(ExecuteBatchFunction executeBatchFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(executeBatchFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteBatchRequestAndWaitForReceiptAsync(ExecuteBatchFunction executeBatchFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeBatchFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ExecuteBatchRequestAsync(List<Call> calls)\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+                executeBatchFunction.Calls = calls;\n+            \n+             return ContractHandler.SendRequestAsync(executeBatchFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ExecuteBatchRequestAndWaitForReceiptAsync(List<Call> calls, CancellationTokenSource cancellationToken = null)\n+        {\n+            var executeBatchFunction = new ExecuteBatchFunction();\n+                executeBatchFunction.Calls = calls;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(executeBatchFunction, cancellationToken);\n+        }\n+\n+        public Task<BigInteger> GetNonceQueryAsync(GetNonceFunction getNonceFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(getNonceFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> GetNonceQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> ValidateUserOpRequestAsync(ValidateUserOpFunction validateUserOpFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(validateUserOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ValidateUserOpRequestAndWaitForReceiptAsync(ValidateUserOpFunction validateUserOpFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(validateUserOpFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> ValidateUserOpRequestAsync(PackedUserOperation userOp, byte[] userOpHash, BigInteger missingAccountFunds)\n+        {\n+            var validateUserOpFunction = new ValidateUserOpFunction();\n+                validateUserOpFunction.UserOp = userOp;\n+                validateUserOpFunction.UserOpHash = userOpHash;\n+                validateUserOpFunction.MissingAccountFunds = missingAccountFunds;\n+            \n+             return ContractHandler.SendRequestAsync(validateUserOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> ValidateUserOpRequestAndWaitForReceiptAsync(PackedUserOperation userOp, byte[] userOpHash, BigInteger missingAccountFunds, CancellationTokenSource cancellationToken = null)\n+        {\n+            var validateUserOpFunction = new ValidateUserOpFunction();\n+                validateUserOpFunction.UserOp = userOp;\n+                validateUserOpFunction.UserOpHash = userOpHash;\n+                validateUserOpFunction.MissingAccountFunds = missingAccountFunds;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(validateUserOpFunction, cancellationToken);\n+        }\n+\n+        public override List<Type> GetAllFunctionTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(EntryPointFunction),\n+                typeof(ExecuteFunction),\n+                typeof(ExecuteBatchFunction),\n+                typeof(GetNonceFunction),\n+                typeof(ValidateUserOpFunction)\n+            };\n+        }\n+\n+        public override List<Type> GetAllEventTypes()\n+        {\n+            return new List<Type>\n+            {\n+\n+            };\n+        }\n+\n+        public override List<Type> GetAllErrorTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(ExecuteErrorError)\n+            };\n+        }\n+    }\n+}"},{"sha":"f98785d73f72093288c692d364cf954bce3b6295","filename":"src/Nethereum.AccountAbstraction/BaseAccount/ContractDefinition/BaseAccountDefinition.gen.cs","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FBaseAccountDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FBaseAccountDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FBaseAccountDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,115 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts;\n+using System.Threading;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount.ContractDefinition\n+{\n+\n+\n+    public partial class BaseAccountDeployment : BaseAccountDeploymentBase\n+    {\n+        public BaseAccountDeployment() : base(BYTECODE) { }\n+        public BaseAccountDeployment(string byteCode) : base(byteCode) { }\n+    }\n+\n+    public class BaseAccountDeploymentBase : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE = \"\";\n+        public BaseAccountDeploymentBase() : base(BYTECODE) { }\n+        public BaseAccountDeploymentBase(string byteCode) : base(byteCode) { }\n+\n+    }\n+\n+    public partial class EntryPointFunction : EntryPointFunctionBase { }\n+\n+    [Function(\"entryPoint\", \"address\")]\n+    public class EntryPointFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class ExecuteFunction : ExecuteFunctionBase { }\n+\n+    [Function(\"execute\")]\n+    public class ExecuteFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+        [Parameter(\"uint256\", \"value\", 2)]\n+        public virtual BigInteger Value { get; set; }\n+        [Parameter(\"bytes\", \"data\", 3)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class ExecuteBatchFunction : ExecuteBatchFunctionBase { }\n+\n+    [Function(\"executeBatch\")]\n+    public class ExecuteBatchFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple[]\", \"calls\", 1)]\n+        public virtual List<Call> Calls { get; set; }\n+    }\n+\n+    public partial class GetNonceFunction : GetNonceFunctionBase { }\n+\n+    [Function(\"getNonce\", \"uint256\")]\n+    public class GetNonceFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class ValidateUserOpFunction : ValidateUserOpFunctionBase { }\n+\n+    [Function(\"validateUserOp\", \"uint256\")]\n+    public class ValidateUserOpFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple\", \"userOp\", 1)]\n+        public virtual PackedUserOperation UserOp { get; set; }\n+        [Parameter(\"bytes32\", \"userOpHash\", 2)]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"uint256\", \"missingAccountFunds\", 3)]\n+        public virtual BigInteger MissingAccountFunds { get; set; }\n+    }\n+\n+    public partial class ExecuteErrorError : ExecuteErrorErrorBase { }\n+\n+    [Error(\"ExecuteError\")]\n+    public class ExecuteErrorErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"index\", 1)]\n+        public virtual BigInteger Index { get; set; }\n+        [Parameter(\"bytes\", \"error\", 2)]\n+        public virtual byte[] Error { get; set; }\n+    }\n+\n+    public partial class EntryPointOutputDTO : EntryPointOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class EntryPointOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+    public partial class GetNonceOutputDTO : GetNonceOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetNonceOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+    }\n+\n+\n+}"},{"sha":"4554e60fb86495dea91e2a0f19178957b02c99ef","filename":"src/Nethereum.AccountAbstraction/BaseAccount/ContractDefinition/Call.gen.cs","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FCall.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FCall.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FCall.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,21 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount.ContractDefinition\n+{\n+    public partial class Call : CallBase { }\n+\n+    public class CallBase \n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+        [Parameter(\"uint256\", \"value\", 2)]\n+        public virtual BigInteger Value { get; set; }\n+        [Parameter(\"bytes\", \"data\", 3)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+}"},{"sha":"547bd3f0a475176c3746f97c6bca5072390752b6","filename":"src/Nethereum.AccountAbstraction/BaseAccount/ContractDefinition/PackedUserOperation.gen.cs","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FPackedUserOperation.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FPackedUserOperation.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FContractDefinition%2FPackedUserOperation.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,33 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount.ContractDefinition\n+{\n+    public partial class PackedUserOperation : PackedUserOperationBase { }\n+\n+    public class PackedUserOperationBase \n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"initCode\", 3)]\n+        public virtual byte[] InitCode { get; set; }\n+        [Parameter(\"bytes\", \"callData\", 4)]\n+        public virtual byte[] CallData { get; set; }\n+        [Parameter(\"bytes32\", \"accountGasLimits\", 5)]\n+        public virtual byte[] AccountGasLimits { get; set; }\n+        [Parameter(\"uint256\", \"preVerificationGas\", 6)]\n+        public virtual BigInteger PreVerificationGas { get; set; }\n+        [Parameter(\"bytes32\", \"gasFees\", 7)]\n+        public virtual byte[] GasFees { get; set; }\n+        [Parameter(\"bytes\", \"paymasterAndData\", 8)]\n+        public virtual byte[] PaymasterAndData { get; set; }\n+        [Parameter(\"bytes\", \"signature\", 9)]\n+        public virtual byte[] Signature { get; set; }\n+    }\n+}"},{"sha":"fc4e0cc80d9632a1cdcc53bff508410be1b586a2","filename":"src/Nethereum.AccountAbstraction/BaseAccount/IAccountAbstractionExecuteBuilder.cs","status":"added","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FIAccountAbstractionExecuteBuilder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FIAccountAbstractionExecuteBuilder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FBaseAccount%2FIAccountAbstractionExecuteBuilder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,11 @@\n+using Nethereum.AccountAbstraction.BaseAccount.ContractDefinition;\n+using Nethereum.Contracts;\n+using System.Numerics;\n+\n+namespace Nethereum.AccountAbstraction.BaseAccount\n+{\n+    public interface IAccountAbstractionExecuteBuilder\n+    {\n+        Task<byte[]> CreateAccountAbstractionExecuteEncodedFunction<TFunctionCall>(string target, BigInteger value, TFunctionCall functionCall) where TFunctionCall : FunctionMessage, new();\n+    }\n+}\n\\ No newline at end of file"},{"sha":"5e05712aee81354aed617b82ab8c4761c6eaa9ee","filename":"src/Nethereum.AccountAbstraction/ERC4337Domain.cs","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FERC4337Domain.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FERC4337Domain.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FERC4337Domain.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,26 @@\n+﻿using Nethereum.ABI.EIP712;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using System.Numerics;\n+\n+\n+namespace Nethereum.AccountAbstraction\n+{\n+    [Struct(\"EIP712Domain\")]\n+    public class ERC4337Domain : Domain\n+    {\n+        public const string ERC4337_DOMAIN_NAME = \"ERC4337\";\n+        public const string ERC4337_DOMAIN_VERSION = \"1\";\n+\n+        public ERC4337Domain()\n+        {\n+            Name = ERC4337_DOMAIN_NAME;\n+            Version = ERC4337_DOMAIN_VERSION;\n+        }\n+\n+        public ERC4337Domain(string entryPointAddress, BigInteger chainId) : this()\n+        {\n+            ChainId = chainId;\n+            VerifyingContract = entryPointAddress;\n+        }\n+    }\n+}"},{"sha":"f9c0b7249c6072f59be32e476218e7ba4145a3d7","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/DepositInfo.gen.cs","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FDepositInfo.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FDepositInfo.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FDepositInfo.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,25 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+    public partial class DepositInfo : DepositInfoBase { }\n+\n+    public class DepositInfoBase \n+    {\n+        [Parameter(\"uint256\", \"deposit\", 1)]\n+        public virtual BigInteger Deposit { get; set; }\n+        [Parameter(\"bool\", \"staked\", 2)]\n+        public virtual bool Staked { get; set; }\n+        [Parameter(\"uint112\", \"stake\", 3)]\n+        public virtual BigInteger Stake { get; set; }\n+        [Parameter(\"uint32\", \"unstakeDelaySec\", 4)]\n+        public virtual uint UnstakeDelaySec { get; set; }\n+        [Parameter(\"uint48\", \"withdrawTime\", 5)]\n+        public virtual ulong WithdrawTime { get; set; }\n+    }\n+}"},{"sha":"d5e9a768b5eae784886a2b483bd9a26c32b6c998","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/EntryPointDefinition.gen.cs","status":"added","additions":600,"deletions":0,"changes":600,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FEntryPointDefinition.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FEntryPointDefinition.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FEntryPointDefinition.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,600 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+\n+\n+    public partial class EntryPointDeployment : EntryPointDeploymentBase\n+    {\n+        public EntryPointDeployment() : base(BYTECODE) { }\n+        public EntryPointDeployment(string byteCode) : base(byteCode) { }\n+    }\n+\n+    public class EntryPointDeploymentBase : ContractDeploymentMessage\n+    {\n+        public static string BYTECODE = \"6101806040523461019557604051610018604082610199565b600781526020810190664552433433333760c81b82526040519161003d604084610199565b600183526020830191603160f81b8352610056816101bc565b6101205261006384610357565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526100cc60c082610199565b5190206080523060c0526040516103b88082016001600160401b0381118382101761018157829161428a833903905ff080156101765761016052604051613dfa908161049082396080518161269a015260a05181612757015260c05181612664015260e051816126e90152610100518161270f015261012051816112330152610140518161125c0152610160518181816110f7015281816117e601528181613a620152613cdc0152f35b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761018157604052565b908151602081105f14610236575090601f8151116101f65760208151910151602082106101e7571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b03811161018157600254600181811c9116801561034d575b602082101461033957601f8111610306575b50602092601f82116001146102a557928192935f9261029a575b50508160011b915f199060031b1c19161760025560ff90565b015190505f80610281565b601f1982169360025f52805f20915f5b8681106102ee57508360019596106102d6575b505050811b0160025560ff90565b01515f1960f88460031b161c191690555f80806102c8565b919260206001819286850151815501940192016102b5565b60025f52601f60205f20910160051c810190601f830160051c015b81811061032e5750610267565b5f8155600101610321565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610255565b908151602081105f14610382575090601f8151116101f65760208151910151602082106101e7571790565b6001600160401b03811161018157600354600181811c91168015610485575b602082101461033957601f8111610452575b50602092601f82116001146103f157928192935f926103e6575b50508160011b915f199060031b1c19161760035560ff90565b015190505f806103cd565b601f1982169360035f52805f20915f5b86811061043a5750836001959610610422575b505050811b0160035560ff90565b01515f1960f88460031b161c191690555f8080610414565b91926020600181928685015181550194019201610401565b60035f52601f60205f20910160051c810190601f830160051c015b81811061047a57506103b3565b5f815560010161046d565b90607f16906103a156fe6101806040526004361015610024575b3615610019575f80fd5b61002233612444565b005b5f610140525f3560e01c806242dc5314611b1b57806301ffc9a714611a7d5780630396cb601461181557806309ccb880146117ce5780630bd28e3b1461177357806313c65a6e14611756578063154e58dc146117195780631b2e01b8146116c1578063205c28781461159557806322cdde4c1461154e57806335567e1a146114e95780635287ce12146113fc57806370a08231146113bc578063765e827f1461131e57806384b0196e14611218578063850aaf621461118c5780639b249f6914611090578063b760faf91461106d578063bb9fe6bf14610f29578063c23a5cea14610d495763dbed18e00361000f5734610b8d57610121366120d2565b6101005260e0526101306128d1565b6101405190815b60e0518110610bd9575061014a82612308565b61012052610140516080526101405160c0525b60e05160c0511061028e577fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9726101405161014051a161014051608081905290815b60e05181106101e1576101b48361010051613568565b610140517f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d6101405180f35b6102366101f18260e0518561249d565b6001600160a01b03610205602083016124f4565b167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6101405161014051a2806124bf565b9061014051915b80831061024f5750505060010161019e565b90919460019061027c6102638885876123ba565b610272608051610120516123f1565b51906080516131d4565b0195816080510160805201919061023d565b61029d60c05160e0518361249d565b6102a781806124bf565b60a052906001600160a01b03906102c0906020016124f4565b61014051911691905b60a05181106102ed5750505060a05160805101608052600160c0510160c05261015d565b6102fe8160805101610120516123f1565b5161030c8260a051856123ba565b61014051915a8151926001600160a01b03610326826124f4565b168452602081810135908501526001600160801b036080808301358281166060880152811c604087015260a083013560c0808801919091528301359182166101008701521c61012085015261037e60e0820182612508565b9081610af9575b505060405193610394826121e1565b6020850152846040526040810151946001600160781b038660c08401511760608401511760808401511760a084015117610100840151176101208401511711610ab15750604081015160608201510160808201510160a08201510160c0820151016101008201510294856040860152845160018060a01b038151169061042c6104206040870187612508565b90898d608051016139f1565b60e001516101405197906001600160a01b03168015610a80575b8751604080820151915190516020808c01516306608bdf60e21b918301918252919c6001600160a01b03909316939290918d91610487918c60248501613d7e565b03601f1981018d52610499908d612007565b61014051908c5190846101405190602095f161014051519a3d602003610a75575b604052156109c7575015610968575b505060018060a01b03825116602083015190610140515260016020526040610140512060018060c01b038260401c165f526020526001600160401b0360405f209182549261051684612197565b90551603610918575a8403116108c85760e001516060906001600160a01b03166106c3575b606084015261055a93929160809160a00135905a90030191015261395c565b906001600160a01b0316850361067c57610632576105779061395c565b906001600160a01b03166105eb57610591576001016102c9565b60408051631101335b60e11b815260805190920160048301526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b608482015260a490fd5b60848260405190631101335b60e11b825260805101600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848260405190631101335b60e11b8252608051016004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848360405190631101335b60e11b825260805101600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b94505a835160e081015160408601519297926106e7916001600160a01b0316613da0565b156108785760800151956040519660208601519761072f8161072160408a0151602083019c8d6314add44b60e21b90528960248501613d7e565b03601f198101835282612007565b8651608060018060a01b0360e08301511691015161014051918b61014051928551926101405191f1983d908161014051843e51948251604084019b8c51901591821561086c575b50811561085a575b506107fe5750601f01601f1916016040819052915a9003116107a157509461053b565b631101335b60e11b81526080518801600482015260406024820152602760448201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606482015266185cd31a5b5a5d60ca1b608482015260a490fd5b8b61085661080a612634565b6040519384936365c8fd4d60e01b85526080510160048501526024840152600d60648401526c10504cccc81c995d995c9d1959609a1b608484015260a0604484015260a4830190612138565b0390fd5b9050601f605f1984019101105f61077e565b6040141591505f610776565b60848860405190631101335b60e11b825260805101600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b60848760405190631101335b60e11b825260805101600482015260406024820152601e60448201527f41413236206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b60848860405190631101335b60e11b825260805101600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b61097191613da0565b1561097d578b806104c9565b60848860405190631101335b60e11b825260805101600482015260406024820152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152fd5b8b903b610a1a5760408051631101335b60e11b815260805190920160048301526024820152601960448201527810504c8c081858d8dbdd5b9d081b9bdd0819195c1b1bde5959603a1b6064820152608490fd5b610a22612634565b6040516365c8fd4d60e01b8152608051909201600483015260606024830152600d60648301526c10504c8cc81c995d995c9d1959609a1b608483015260a0604483015281906108569060a4830190612138565b6101405191506104ba565b6101408051849052516020819052604090205490985081811115610aaa5750610140515b97610446565b8103610aa4565b631101335b60e11b81526080518801600482015260406024820152601860448201527741413934206761732076616c756573206f766572666c6f7760401b6064820152608490fd5b60348210610b945781601411610b8d5780359160248110610b8d57603411610b8d576024810135608090811c60a0880152601490910135811c90860152606081901c15610b4f5760601c60e08501528980610385565b60405162461bcd60e51b815260206004820152601660248201527520a09c9c1034b73b30b634b2103830bcb6b0b9ba32b960511b6044820152606490fd5b6101405180fd5b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b610be68160e0518461249d565b92610bf184806124bf565b91906001600160a01b03610c07602088016124f4565b169560018714610d305786610c24575b5050019250600101610137565b806040610c32920190612508565b91873b15610b8d5791604051928391632dd8113360e01b835286604484016040600486015252606483019160648860051b85010192816101405161011e1982360301915b8b8210610cf45750505050508291610c9e916003198483030160248501526101405195612424565b0381610140518a5af19081610cd9575b50610ccc578463086a9f7560e41b6101405152600452602461014051fd5b929350839260015f610c17565b61014051610ce691612007565b61014051610b8d575f610cae565b91939650919394606319898203018552863584811215610b8d576020610d1f6001938583940161256b565b980195019201889695949391610c76565b8663086a9f7560e41b6101405152600452602461014051fd5b34610b8d576020366003190112610b8d57610d62612079565b3361014051526101405160205260016040610140512001908154916001600160701b038360081c16928315610eed5760981c65ffffffffffff168015610ea8574210610e63578054610100600160c81b0319169055604080516001600160a01b03831681526020810184905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a261014051918291829182916001600160a01b03165af1610e116121b2565b5015610e1e576101405180f35b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b34610b8d5761014051366003190112610b8d573361014051526101405160205260016040610140512001805463ffffffff8160781c1690811561103b5760ff16156110025765ffffffffffff4216019065ffffffffffff8211610fe857805460ff65ffffffffffff60981b01191665ffffffffffff60981b609884901b1617905560405165ffffffffffff909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a26101405180f35b634e487b7160e01b61014051526011600452602461014051fd5b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b6020366003190112610b8d57611089611084612079565b612444565b6101405180f35b34610b8d576020366003190112610b8d576004356001600160401b038111610b8d5760206110c56110e892369060040161208f565b604051632b870d1b60e11b81526004810184905293849283926024840191612424565b03816101405160018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af190811561117e57610140519161114f575b506101408051633653dc0360e11b90526001600160a01b039190911660045251602490fd5b611171915060203d602011611177575b6111698183612007565b810190612405565b8161112a565b503d61115f565b6040513d61014051823e3d90fd5b34610b8d576040366003190112610b8d576111a5612079565b6024356001600160401b038111610b8d576111c490369060040161208f565b604051929181908437820190610140518252610140519280610140519303915af46111ed6121b2565b60408051632650415560e21b8152921515600484015260248301528190610856906044830190612138565b34610b8d5761014051366003190112610b8d576112bc6112577f0000000000000000000000000000000000000000000000000000000000000000613766565b6112807f000000000000000000000000000000000000000000000000000000000000000061388c565b604051906020906112ca906112958385612007565b6101405184525f368137604051958695600f60f81b875260e08588015260e0870190612138565b908582036040870152612138565b4660608501523060808501526101405160a085015283810360c0850152818084519283815201930191610140515b82811061130757505050500390f35b8351855286955093810193928101926001016112f8565b34610b8d5761132c366120d2565b6113379291926128d1565b61134083612308565b61134b81858561292c565b5061014051927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a161014051915b85831061138c576101b48585613568565b9091936001906113b26113a08789876123ba565b6113aa88866123f1565b5190886131d4565b019401919061137b565b34610b8d576020366003190112610b8d576001600160a01b036113dd612079565b1661014051526101405160205260206040610140512054604051908152f35b34610b8d576020366003190112610b8d57611415612079565b60405161142181611fa1565b61014051815261014051602082015261014051604082015261014051606082015260806101405191015260018060a01b031661014051526101405160205260a06040610140512065ffffffffffff60405161147b81611fa1565b63ffffffff60018454948584520154916001600160701b036020820160ff8516151581526040830190828660081c1682528660806060860195878960781c168752019660981c1686526040519788525115156020880152511660408601525116606084015251166080820152f35b34610b8d576040366003190112610b8d576020611504612079565b61150c6120bc565b9060018060a01b03166101405152600182526040610140512060018060c01b0382165f52825260405f2054604051916001600160401b03199060401b16178152f35b34610b8d576020366003190112610b8d576004356001600160401b038111610b8d576101206003198236030112610b8d5761158d6020916004016121e1565b604051908152f35b34610b8d576040366003190112610b8d576115ae612079565b602435903361014051526101405160205260406101405120805480841161167c57836115d9916121a5565b9055604080516001600160a01b03831681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a261014051918291829182916001600160a01b03165af16116356121b2565b5015611642576101405180f35b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b34610b8d576040366003190112610b8d576116da612079565b6116e26120bc565b9060018060a01b031661014051526001602052604061014051209060018060c01b03165f52602052602060405f2054604051908152f35b34610b8d5761014051366003190112610b8d5760206040517f29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e8152f35b34610b8d5761014051366003190112610b8d57602061158d612661565b34610b8d576020366003190112610b8d576004356001600160c01b0381168103610b8d573361014051526001602052604061014051209060018060c01b03165f5260205260405f206117c58154612197565b90556101405180f35b34610b8d5761014051366003190112610b8d576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b6020366003190112610b8d5760043563ffffffff8116809103610b8d573361014051526101405160205260406101405120908015611a3857600182015463ffffffff8160781c1682106119f357611879906001600160701b03349160081c16612176565b9182156119b9576001600160701b038311611983575460405161194b9161189f82611fa1565b8152600160208083018281526001600160701b0387166040808601918252606086018881526101408051608089019081528151339052905195869052919094209551865591519490930180549351925191516001600160c81b031990941660ff951515959095169490941760089290921b6effffffffffffffffffffffffffff00169190911760789190911b63ffffffff60781b161760989190911b65ffffffffffff60981b16179055565b60405191825260208201527fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160403392a26101405180f35b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b34610b8d576020366003190112610b8d5760043563ffffffff60e01b8116809103610b8d5760209063349869f760e11b8114908115611b0a575b8115611af9575b8115611ae8575b8115611ad7575b506040519015158152f35b6301ffc9a760e01b14905082611acc565b633e84f02160e01b81149150611ac5565b63cf28ef9760e01b81149150611abe565b631313998b60e31b81149150611ab7565b34611e8f57610200366003190112611e8f576004356001600160401b038111611e8f5736602382011215611e8f57611b5d903690602481600401359101612043565b36602319016101c08112611e8f5761014060405191611b7b83611fa1565b12611e8f57604051611b8c81611fd0565b6024356001600160a01b0381168103611e8f57815260443560208201526064356040820152608435606082015260a435608082015260c43560a082015260e43560c0820152610104356001600160a01b0381168103611e8f5760e082015261012435610100820152610144356101208201528152602081019161016435835260408201906101843582526101a435606084015260808301916101c43583526101e4356001600160401b038111611e8f57611c4a90369060040161208f565b955a90303303611f5c578651606081015195603f5a0260061c61271060a084015189010111611f4d575f9681519182611eaf575b505050505090611c96915a9003855101963691612043565b925a93855161010081015161012082015148018082105f14611ea75750975b611cd460018060a01b0360e08401511694518203606084015190613619565b01925f9281611d9d575050516001600160a01b0316945b5a900301019485029051928184105f14611d575750506003811015611d3d57600203611d28576020928161158d9293611d2381613702565b613638565b63deadaa5160e01b6101405152602061014051fd5b634e487b7160e01b61014051526021600452602461014051fd5b81611d7f929594969396039060018060a01b03165f525f60205260405f209081540180915590565b506003841015611d3d5782611d9892602095159061369d565b61158d565b909691878251611db0575b505050611ceb565b90919293505a926003881015611e935760028803611de6575b505060a0611ddd925a900391015190613619565b90888080611da8565b60a083015191803b15611e8f578b925f9283611e29938c8b88604051998a9889978895637c627b2160e01b87526004870152608060248701526084860190612138565b9202604484015260648301520393f19081611e7a575b50611e7057610856611e4f612634565b604051632b5e552f60e21b8152602060048201529182916024830190612138565b60a0611ddd611dc9565b5f611e8491612007565b5f610140528a611e3f565b5f80fd5b634e487b7160e01b5f52602160045260245ffd5b905097611cb5565b915f9291838093602060018060a01b03885116910192f115611ed4575b808080611c7e565b611c969392955060405191611ee7612634565b908151611f00575b505050604052600193909188611ecc565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201905191602060018060a01b03855116940151611f426040519283928361215c565b0390a3888080611eef565b63deaddead60e01b5f5260205ffd5b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b60a081019081106001600160401b03821117611fbc57604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b03821117611fbc57604052565b606081019081106001600160401b03821117611fbc57604052565b90601f801991011681019081106001600160401b03821117611fbc57604052565b6001600160401b038111611fbc57601f01601f191660200190565b92919261204f82612028565b9161205d6040519384612007565b829481845281830111611e8f578281602093845f960137010152565b600435906001600160a01b0382168203611e8f57565b9181601f84011215611e8f578235916001600160401b038311611e8f5760208381860195010111611e8f57565b602435906001600160c01b0382168203611e8f57565b906040600319830112611e8f576004356001600160401b038111611e8f5760040182601f82011215611e8f578035926001600160401b038411611e8f576020808301928560051b010111611e8f5791906024356001600160a01b0381168103611e8f5790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b604090612173939281528160208201520190612138565b90565b9190820180921161218357565b634e487b7160e01b5f52601160045260245ffd5b5f1981146121835760010190565b9190820391821161218357565b3d156121dc573d906121c382612028565b916121d16040519384612007565b82523d5f602084013e565b606090565b6042906121ed8161277d565b6121f5612661565b916121ff816124f4565b9180156122d457905b60c06122176060830183612508565b9081604051918237209161222e60e0820182612508565b908160405191823720926040519460208601967f29a0bca4af4be3421398da00295e58e6d7de38cb492214754cb6a47507dd6f8e885260018060a01b0316604087015260208301356060870152608086015260a085015260808101358285015260a081013560e0850152013561010083015261012082015261012081526122b761014082612007565b5190206040519161190160f01b8352600283015260228201522090565b506122e26040820182612508565b90816040519182372090612208565b6001600160401b038111611fbc5760051b60200190565b90612312826122f1565b61231f6040519182612007565b8281528092612330601f19916122f1565b01905f5b82811061234057505050565b60209060405161234f81611fa1565b60405161235b81611fd0565b5f81525f848201525f60408201525f60608201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f61012082015281525f838201525f60408201525f60608201525f608082015282828501015201612334565b91908110156123dd5760051b8101359061011e1981360301821215611e8f570190565b634e487b7160e01b5f52603260045260245ffd5b80518210156123dd5760209160051b010190565b90816020910312611e8f57516001600160a01b0381168103611e8f5790565b908060209392818452848401375f828201840152601f01601f1916010190565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c46020612488348460018060a01b03165f525f60205260405f209081540180915590565b6040519081526001600160a01b0390931692a2565b91908110156123dd5760051b81013590605e1981360301821215611e8f570190565b903590601e1981360301821215611e8f57018035906001600160401b038211611e8f57602001918160051b36038313611e8f57565b356001600160a01b0381168103611e8f5790565b903590601e1981360301821215611e8f57018035906001600160401b038211611e8f57602001918136038313611e8f57565b9035601e1982360301811215611e8f5701602081359101916001600160401b038211611e8f578136038313611e8f57565b8035916001600160a01b0383168303611e8f576001600160a01b03909216825260208181013590830152612173916126256126196125e06125c56125b2604087018761253a565b6101206040880152610120870191612424565b6125d2606087018761253a565b908683036060880152612424565b6080850135608085015260a085013560a085015260c085013560c085015261260b60e086018661253a565b9085830360e0870152612424565b9261010081019061253a565b91610100818503910152612424565b3d6108008111612658575b604051906020818301016040528082525f602083013e90565b5061080061263f565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612754575b156126bc577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261274e60c082612007565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612693565b61278a6040820182612508565b90916127968284613744565b156128ca576127a4906124f4565b60175f80833c5f51906110ff60f01b6001600160e81b0319831601612845575060181b91601482116127f85750506040516001600160601b031990911660208201908152601482529061274e603482612007565b81601411611e8f576040516001600160601b0319909316602084810191825290939261274e92849190601319820190601401603484013781015f838201520301601f198101835282612007565b3b156128905760405162461bcd60e51b815260206004820152601860248201527f6e6f7420616e204549502d373730322064656c656761746500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527173656e64657220686173206e6f20636f646560701b6044820152606490fd5b5050505f90565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005c61291d5760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f005d565b633ee5aeb560e01b5f5260045ffd5b92919092835f5b8181106129405750505050565b61294a81856123f1565b516129568284866123ba565b5f915a8151906001600160a01b0361296d856124f4565b1682526020820191602085013583526080850135946001600160801b038660801c961693604083019660608401958652875260a08201359460c0840186815260c0840135906001600160801b038260801c921691610120870190610100880193845281526129de60e0870187612508565b90816130d8575b50506040516129f3876121e1565b9460208c01958652816040528c519c8d855117825117926001600160781b0360808c01948551179560a08d0196875117895117905117116130915750519051019051019051019051019051029760408801928984528b8951612a6f8b60018060a01b0383511693612a6760408b018b612508565b9290916139f1565b60e001515f9b906001600160a01b0316801561306a575b8b519c60408e01519d600160a01b600190039051169d8e916040516101605288518b61016051602001926306608bdf60e21b845261016051926101605160240192612ad093613d7e565b03601f19810161016051526101605190612ae991612007565b6101605151905f6020948194f19c5f519d3d602003613063575b6101605160405215612fbe575015612f63575b5050855190516001600160a01b039091165f90815260016020908152604080832084821c845290915290208054916001600160401b0391612b5684612197565b90551603612f17575a860311612ecb5760e090930151606093906001600160a01b0316612cf2575b5050506060840152612b9b9392916080915a90030191015261395c565b906001600160a01b0316612caf57612c6957612bb69061395c565b906001600160a01b0316612c2657612bd057600101612933565b60a49060405190631101335b60e11b8252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b6084820152fd5b60848260405190631101335b60e11b8252600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848260405190631101335b60e11b82526004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b909197505a865160e08101518451929492612d15916001600160a01b0316613da0565b15612e7f576080612d499101519261072160405193849251905190602084019d8e6314add44b60e21b905260248501613d7e565b5f8088518b82608060018060a01b0360e08501511693015192865193f1983d90815f843e51948251604084019b8c519015918215612e73575b508115612e61575b50612e0d5750601f01601f1916016040819052915a900311612db357509481612b9b6080612b7e565b631101335b60e11b81526004810188905260406024820152602760448201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606482015266185cd31a5b5a5d60ca1b608482015260a490fd5b8b610856612e19612634565b6040519384936365c8fd4d60e01b855260048501526024840152600d60648401526c10504cccc81c995d995c9d1959609a1b608484015260a0604484015260a4830190612138565b9050601f605f1984019101105f612d8a565b6040141591505f612d82565b60848b60405190631101335b60e11b8252600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b60848a60405190631101335b60e11b8252600482015260406024820152601e60448201527f41413236206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b60848b60405190631101335b60e11b8252600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b612f6c91613da0565b15612f78575f80612b16565b60848c60405190631101335b60e11b8252600482015260406024820152601760448201527610504c8c48191a591b89dd081c185e481c1c99599d5b99604a1b6064820152fd5b8f903b61300d5760849060405190631101335b60e11b8252600482015260406024820152601960448201527810504c8c081858d8dbdd5b9d081b9bdd0819195c1b1bde5959603a1b6064820152fd5b613015612634565b906108566040519283926365c8fd4d60e01b8452600484015260606024840152600d60648401526c10504c8cc81c995d995c9d1959609a1b608484015260a0604484015260a4830190612138565b505f612b03565b9b50815f525f60205260405f20548181115f1461308a57505f5b9b612a86565b8103613084565b90508f60849250631101335b60e11b8252600482015260406024820152601860448201527741413934206761732076616c756573206f766572666c6f7760401b6064820152fd5b60348210610b945781601411611e8f57803560601c9160248110611e8f57601482013590603411611e8f576001600160801b0360248193013560801c1660a08b015260801c1660808901528015610b4f5760e08801525f806129e5565b60806101a091610120815160018060a01b038151168652602081015160208701526040810151604087015260608101516060870152838101518487015260a081015160a087015260c081015160c087015260018060a01b0360e08201511660e087015261010081015161010087015201516101208501526020810151610140850152604081015161016085015260608101516101808501520151910152565b9092915a606082015160405195866131ef6060830183612508565b5f60038211613560575b6001600160e01b031916638dd7712f60e01b036134fd575050505f6132856132a561324a61325e602095868a0151604051938492638dd7712f60e01b8a85015260406024850152606484019061256b565b90604483015203601f198101835282612007565b6107216040519384926242dc5360e01b888501526102006024850152610224840190612138565b613292604484018b613135565b8281036023190161020484015287612138565b828151910182305af15f5196604052156132c0575b50505050565b9091929394505f3d6020146134f0575b63deaddead60e01b810361331c5760848560405190631101335b60e11b8252600482015260406024820152600f60448201526e41413935206f7574206f662067617360881b6064820152fd5b929350909163deadaa5160e01b03613366575061334b61334061335b925a906121a5565b608084015190612176565b604083015183611d238295613702565b905b5f8080806132ba565b906133cb9060405160208501518551907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792602060018060a01b038451169301516133ae612634565b906133be6040519283928361215c565b0390a36040525a906121a5565b6133db6080840191825190612176565b915f905a92855161010081015161012082015148018082105f146134e85750955b61341b60018060a01b0360e08401511693518203606084015190613619565b01925f92806134b9575050516001600160a01b0316935b5a900301019283026040850151928184105f1461347b57505080613467575090816134619293611d2381613702565b9061335d565b634e487b7160e01b81526021600452602490fd5b6134a2908284939795039060018060a01b03165f525f60205260405f209081540180915590565b50613467575090825f6134b49361369d565b613461565b959190516134c8575b50613432565b935090506134e15a9360a05f955a900391015190613619565b905f6134c2565b9050956133fc565b5060205f803e5f516132d0565b6242dc5360e01b6020840152610200602484015261355793506135499161352991610224850191612424565b6135366044840188613135565b8281036023190161020484015284612138565b03601f198101885287612007565b60205f876132a5565b5081356131f9565b6001600160a01b031680156135d4575f80809381935af16135876121b2565b501561358f57565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b90619c40820181111561363257606491600a9103020490565b50505f90565b9190917f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f6080602083015192519460018060a01b0386511694602060018060a01b0360e089015116970151916040519283525f602084015260408301526060820152a4565b9060807f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f91602084015193519560018060a01b0387511695602060018060a01b0360e08a015116980151926040519384521515602084015260408301526060820152a4565b60208101519051907f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e60208060018060a01b03855116940151604051908152a3565b9060021161376157356001600160601b031916613b8160f11b1490565b505f90565b60ff81146137ac5760ff811690601f821161379d576040519161378a604084612007565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b506040515f6002548060011c9160018216918215613882575b60208410831461386e57838552849290811561384f57506001146137f0575b61217392500382612007565b5060025f90815290917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b818310613833575050906020612173928201016137e4565b602091935080600191548385880101520191019091839261381b565b6020925061217394915060ff191682840152151560051b8201016137e4565b634e487b7160e01b5f52602260045260245ffd5b92607f16926137c5565b60ff81146138b05760ff811690601f821161379d576040519161378a604084612007565b506040515f6003548060011c9160018216918215613952575b60208410831461386e57838552849290811561384f57506001146138f35761217392500382612007565b5060035f90815290917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b818310613936575050906020612173928201016137e4565b602091935080600191548385880101520191019091839261391e565b92607f16926138c9565b80156139ea575f6040805161397081611fec565b8281526020810183905201526001600160a01b0381169060a081901c65ffffffffffff169081156139dc575b60409060d01c9165ffffffffffff8251916139b683611fec565b85835284602084015216918291015242119081156139d357509091565b90504211159091565b65ffffffffffff915061399c565b505f905f90565b929190915f9080613a04575b5050505050565b835180516001600160a01b03169590613a1d8386613744565b613cbf5750853b613c735760148210613c275760408551015160206040518092632b870d1b60e11b8252826004830152818781613a5e602482018a8d612424565b03927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690f1908115613c1c578491613bfd575b506001600160a01b0381168015613bb1578703613b65573b15613b195750601411613b165750602082810151925160e0015160408051933560601c84526001600160a01b03909116918301919091527fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d91a35f808080806139fd565b80fd5b60849060405190631101335b60e11b8252600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152fd5b60848260405190631101335b60e11b8252600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152fd5b613c16915060203d602011611177576111698183612007565b5f613a9a565b6040513d86823e3d90fd5b60849060405190631101335b60e11b8252600482015260406024820152601760448201527f4141393920696e6974436f646520746f6f20736d616c6c0000000000000000006064820152fd5b60849060405190631101335b60e11b8252600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152fd5b94505091905060148211613cd35750505050565b604092909201517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169260148310611e8f57833b15611e8f575f8094613d4d966040519788968795869363c09ad0d960e01b855260048501526040602485015260146044850192601319019101612424565b0393f18015613d7357613d63575b8080806132ba565b5f613d6d91612007565b5f613d5b565b6040513d5f823e3d90fd5b613d966040929594939560608352606083019061256b565b9460208201520152565b60018060a01b03165f525f60205260405f209081548181106128ca5703905560019056fea264697066735822122045f0913767b473c2868211ca1370d80341ed4d6ecb60f04f1da009ab7ef6a9d564736f6c634300081d003360a08060405234602f57336080526103849081610034823960805181818160990152818161019101526102170152f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063570e1a36146101c0578063b0d691fe1461017c5763c09ad0d91461003a575f80fd5b34610178576040366003190112610178576004356001600160a01b03811681036101785760243567ffffffffffffffff81116101785736602382011215610178575f9161009283923690602481600401359101610297565b906100c7337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610303565b82602083519301915af1156100d857005b3d610800811161016f575b60c460405160208382010160405282815260208101925f843e6040519283916365c8fd4d60e01b83525f600484015260606024840152601f60648401527f4141313320454950373730322073656e64657220696e6974206661696c656400608484015260a060448401525180918160a48501528484015e5f828201840152601f01601f19168101030190fd5b506108006100e3565b5f80fd5b34610178575f366003190112610178576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101785760203660031901126101785760043567ffffffffffffffff811161017857366023820112156101785780600401359067ffffffffffffffff8211610178573660248383010111610178575f91610245337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614610303565b80601411610178576020916102645f9236906013190160388401610297565b90826024858451940192013560601c5af161028f575b6040516001600160a01b039091168152602090f35b505f5161027a565b92919267ffffffffffffffff82116102ef5760405191601f8101601f19908116603f0116830167ffffffffffffffff8111848210176102ef57604052829481845281830111610178578281602093845f960137010152565b634e487b7160e01b5f52604160045260245ffd5b1561030a57565b606460405162461bcd60e51b815260206004820152602060248201527f414139372073686f756c642063616c6c2066726f6d20456e747279506f696e746044820152fdfea26469706673582212207ee2e2e4876262406af59b0affaf2ec6f63da1c8a5ee0544ba395dfa4b3aa84564736f6c634300081d0033\";\n+        public EntryPointDeploymentBase() : base(BYTECODE) { }\n+        public EntryPointDeploymentBase(string byteCode) : base(byteCode) { }\n+\n+    }\n+\n+    public partial class AddStakeFunction : AddStakeFunctionBase { }\n+\n+    [Function(\"addStake\")]\n+    public class AddStakeFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"uint32\", \"unstakeDelaySec\", 1)]\n+        public virtual uint UnstakeDelaySec { get; set; }\n+    }\n+\n+    public partial class BalanceOfFunction : BalanceOfFunctionBase { }\n+\n+    [Function(\"balanceOf\", \"uint256\")]\n+    public class BalanceOfFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"account\", 1)]\n+        public virtual string Account { get; set; }\n+    }\n+\n+    public partial class DelegateAndRevertFunction : DelegateAndRevertFunctionBase { }\n+\n+    [Function(\"delegateAndRevert\")]\n+    public class DelegateAndRevertFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"target\", 1)]\n+        public virtual string Target { get; set; }\n+        [Parameter(\"bytes\", \"data\", 2)]\n+        public virtual byte[] Data { get; set; }\n+    }\n+\n+    public partial class DepositToFunction : DepositToFunctionBase { }\n+\n+    [Function(\"depositTo\")]\n+    public class DepositToFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"account\", 1)]\n+        public virtual string Account { get; set; }\n+    }\n+\n+    public partial class Eip712DomainFunction : Eip712DomainFunctionBase { }\n+\n+    [Function(\"eip712Domain\", typeof(Eip712DomainOutputDTO))]\n+    public class Eip712DomainFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class GetDepositInfoFunction : GetDepositInfoFunctionBase { }\n+\n+    [Function(\"getDepositInfo\", typeof(GetDepositInfoOutputDTO))]\n+    public class GetDepositInfoFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"account\", 1)]\n+        public virtual string Account { get; set; }\n+    }\n+\n+    public partial class GetDomainSeparatorV4Function : GetDomainSeparatorV4FunctionBase { }\n+\n+    [Function(\"getDomainSeparatorV4\", \"bytes32\")]\n+    public class GetDomainSeparatorV4FunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class GetNonceFunction : GetNonceFunctionBase { }\n+\n+    [Function(\"getNonce\", \"uint256\")]\n+    public class GetNonceFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint192\", \"key\", 2)]\n+        public virtual BigInteger Key { get; set; }\n+    }\n+\n+    public partial class GetPackedUserOpTypeHashFunction : GetPackedUserOpTypeHashFunctionBase { }\n+\n+    [Function(\"getPackedUserOpTypeHash\", \"bytes32\")]\n+    public class GetPackedUserOpTypeHashFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class GetSenderAddressFunction : GetSenderAddressFunctionBase { }\n+\n+    [Function(\"getSenderAddress\")]\n+    public class GetSenderAddressFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"bytes\", \"initCode\", 1)]\n+        public virtual byte[] InitCode { get; set; }\n+    }\n+\n+    public partial class GetUserOpHashFunction : GetUserOpHashFunctionBase { }\n+\n+    [Function(\"getUserOpHash\", \"bytes32\")]\n+    public class GetUserOpHashFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple\", \"userOp\", 1)]\n+        public virtual PackedUserOperation UserOp { get; set; }\n+    }\n+\n+    public partial class HandleAggregatedOpsFunction : HandleAggregatedOpsFunctionBase { }\n+\n+    [Function(\"handleAggregatedOps\")]\n+    public class HandleAggregatedOpsFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple[]\", \"opsPerAggregator\", 1)]\n+        public virtual List<UserOpsPerAggregator> OpsPerAggregator { get; set; }\n+        [Parameter(\"address\", \"beneficiary\", 2)]\n+        public virtual string Beneficiary { get; set; }\n+    }\n+\n+    public partial class HandleOpsFunction : HandleOpsFunctionBase { }\n+\n+    [Function(\"handleOps\")]\n+    public class HandleOpsFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"tuple[]\", \"ops\", 1)]\n+        public virtual List<PackedUserOperation> Ops { get; set; }\n+        [Parameter(\"address\", \"beneficiary\", 2)]\n+        public virtual string Beneficiary { get; set; }\n+    }\n+\n+    public partial class IncrementNonceFunction : IncrementNonceFunctionBase { }\n+\n+    [Function(\"incrementNonce\")]\n+    public class IncrementNonceFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"uint192\", \"key\", 1)]\n+        public virtual BigInteger Key { get; set; }\n+    }\n+\n+    public partial class InnerHandleOpFunction : InnerHandleOpFunctionBase { }\n+\n+    [Function(\"innerHandleOp\", \"uint256\")]\n+    public class InnerHandleOpFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"bytes\", \"callData\", 1)]\n+        public virtual byte[] CallData { get; set; }\n+        [Parameter(\"tuple\", \"opInfo\", 2)]\n+        public virtual UserOpInfo OpInfo { get; set; }\n+        [Parameter(\"bytes\", \"context\", 3)]\n+        public virtual byte[] Context { get; set; }\n+    }\n+\n+    public partial class NonceSequenceNumberFunction : NonceSequenceNumberFunctionBase { }\n+\n+    [Function(\"nonceSequenceNumber\", \"uint256\")]\n+    public class NonceSequenceNumberFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+        [Parameter(\"uint192\", \"\", 2)]\n+        public virtual BigInteger ReturnValue2 { get; set; }\n+    }\n+\n+    public partial class SenderCreatorFunction : SenderCreatorFunctionBase { }\n+\n+    [Function(\"senderCreator\", \"address\")]\n+    public class SenderCreatorFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class SupportsInterfaceFunction : SupportsInterfaceFunctionBase { }\n+\n+    [Function(\"supportsInterface\", \"bool\")]\n+    public class SupportsInterfaceFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"bytes4\", \"interfaceId\", 1)]\n+        public virtual byte[] InterfaceId { get; set; }\n+    }\n+\n+    public partial class UnlockStakeFunction : UnlockStakeFunctionBase { }\n+\n+    [Function(\"unlockStake\")]\n+    public class UnlockStakeFunctionBase : FunctionMessage\n+    {\n+\n+    }\n+\n+    public partial class WithdrawStakeFunction : WithdrawStakeFunctionBase { }\n+\n+    [Function(\"withdrawStake\")]\n+    public class WithdrawStakeFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"withdrawAddress\", 1)]\n+        public virtual string WithdrawAddress { get; set; }\n+    }\n+\n+    public partial class WithdrawToFunction : WithdrawToFunctionBase { }\n+\n+    [Function(\"withdrawTo\")]\n+    public class WithdrawToFunctionBase : FunctionMessage\n+    {\n+        [Parameter(\"address\", \"withdrawAddress\", 1)]\n+        public virtual string WithdrawAddress { get; set; }\n+        [Parameter(\"uint256\", \"withdrawAmount\", 2)]\n+        public virtual BigInteger WithdrawAmount { get; set; }\n+    }\n+\n+    public partial class AccountDeployedEventDTO : AccountDeployedEventDTOBase { }\n+\n+    [Event(\"AccountDeployed\")]\n+    public class AccountDeployedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"userOpHash\", 1, true )]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"address\", \"sender\", 2, true )]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"address\", \"factory\", 3, false )]\n+        public virtual string Factory { get; set; }\n+        [Parameter(\"address\", \"paymaster\", 4, false )]\n+        public virtual string Paymaster { get; set; }\n+    }\n+\n+    public partial class BeforeExecutionEventDTO : BeforeExecutionEventDTOBase { }\n+\n+    [Event(\"BeforeExecution\")]\n+    public class BeforeExecutionEventDTOBase : IEventDTO\n+    {\n+    }\n+\n+    public partial class DepositedEventDTO : DepositedEventDTOBase { }\n+\n+    [Event(\"Deposited\")]\n+    public class DepositedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"account\", 1, true )]\n+        public virtual string Account { get; set; }\n+        [Parameter(\"uint256\", \"totalDeposit\", 2, false )]\n+        public virtual BigInteger TotalDeposit { get; set; }\n+    }\n+\n+    public partial class EIP712DomainChangedEventDTO : EIP712DomainChangedEventDTOBase { }\n+\n+    [Event(\"EIP712DomainChanged\")]\n+    public class EIP712DomainChangedEventDTOBase : IEventDTO\n+    {\n+    }\n+\n+    public partial class PostOpRevertReasonEventDTO : PostOpRevertReasonEventDTOBase { }\n+\n+    [Event(\"PostOpRevertReason\")]\n+    public class PostOpRevertReasonEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"userOpHash\", 1, true )]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"address\", \"sender\", 2, true )]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 3, false )]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"revertReason\", 4, false )]\n+        public virtual byte[] RevertReason { get; set; }\n+    }\n+\n+    public partial class SignatureAggregatorChangedEventDTO : SignatureAggregatorChangedEventDTOBase { }\n+\n+    [Event(\"SignatureAggregatorChanged\")]\n+    public class SignatureAggregatorChangedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"aggregator\", 1, true )]\n+        public virtual string Aggregator { get; set; }\n+    }\n+\n+    public partial class StakeLockedEventDTO : StakeLockedEventDTOBase { }\n+\n+    [Event(\"StakeLocked\")]\n+    public class StakeLockedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"account\", 1, true )]\n+        public virtual string Account { get; set; }\n+        [Parameter(\"uint256\", \"totalStaked\", 2, false )]\n+        public virtual BigInteger TotalStaked { get; set; }\n+        [Parameter(\"uint256\", \"unstakeDelaySec\", 3, false )]\n+        public virtual BigInteger UnstakeDelaySec { get; set; }\n+    }\n+\n+    public partial class StakeUnlockedEventDTO : StakeUnlockedEventDTOBase { }\n+\n+    [Event(\"StakeUnlocked\")]\n+    public class StakeUnlockedEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"account\", 1, true )]\n+        public virtual string Account { get; set; }\n+        [Parameter(\"uint256\", \"withdrawTime\", 2, false )]\n+        public virtual BigInteger WithdrawTime { get; set; }\n+    }\n+\n+    public partial class StakeWithdrawnEventDTO : StakeWithdrawnEventDTOBase { }\n+\n+    [Event(\"StakeWithdrawn\")]\n+    public class StakeWithdrawnEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"account\", 1, true )]\n+        public virtual string Account { get; set; }\n+        [Parameter(\"address\", \"withdrawAddress\", 2, false )]\n+        public virtual string WithdrawAddress { get; set; }\n+        [Parameter(\"uint256\", \"amount\", 3, false )]\n+        public virtual BigInteger Amount { get; set; }\n+    }\n+\n+    public partial class UserOperationEventEventDTO : UserOperationEventEventDTOBase { }\n+\n+    [Event(\"UserOperationEvent\")]\n+    public class UserOperationEventEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"userOpHash\", 1, true )]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"address\", \"sender\", 2, true )]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"address\", \"paymaster\", 3, true )]\n+        public virtual string Paymaster { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 4, false )]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bool\", \"success\", 5, false )]\n+        public virtual bool Success { get; set; }\n+        [Parameter(\"uint256\", \"actualGasCost\", 6, false )]\n+        public virtual BigInteger ActualGasCost { get; set; }\n+        [Parameter(\"uint256\", \"actualGasUsed\", 7, false )]\n+        public virtual BigInteger ActualGasUsed { get; set; }\n+    }\n+\n+    public partial class UserOperationPrefundTooLowEventDTO : UserOperationPrefundTooLowEventDTOBase { }\n+\n+    [Event(\"UserOperationPrefundTooLow\")]\n+    public class UserOperationPrefundTooLowEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"userOpHash\", 1, true )]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"address\", \"sender\", 2, true )]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 3, false )]\n+        public virtual BigInteger Nonce { get; set; }\n+    }\n+\n+    public partial class UserOperationRevertReasonEventDTO : UserOperationRevertReasonEventDTOBase { }\n+\n+    [Event(\"UserOperationRevertReason\")]\n+    public class UserOperationRevertReasonEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"bytes32\", \"userOpHash\", 1, true )]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"address\", \"sender\", 2, true )]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 3, false )]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"revertReason\", 4, false )]\n+        public virtual byte[] RevertReason { get; set; }\n+    }\n+\n+    public partial class WithdrawnEventDTO : WithdrawnEventDTOBase { }\n+\n+    [Event(\"Withdrawn\")]\n+    public class WithdrawnEventDTOBase : IEventDTO\n+    {\n+        [Parameter(\"address\", \"account\", 1, true )]\n+        public virtual string Account { get; set; }\n+        [Parameter(\"address\", \"withdrawAddress\", 2, false )]\n+        public virtual string WithdrawAddress { get; set; }\n+        [Parameter(\"uint256\", \"amount\", 3, false )]\n+        public virtual BigInteger Amount { get; set; }\n+    }\n+\n+    public partial class DelegateAndRevertError : DelegateAndRevertErrorBase { }\n+\n+    [Error(\"DelegateAndRevert\")]\n+    public class DelegateAndRevertErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bool\", \"success\", 1)]\n+        public virtual bool Success { get; set; }\n+        [Parameter(\"bytes\", \"ret\", 2)]\n+        public virtual byte[] Ret { get; set; }\n+    }\n+\n+    public partial class FailedOpError : FailedOpErrorBase { }\n+\n+    [Error(\"FailedOp\")]\n+    public class FailedOpErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"opIndex\", 1)]\n+        public virtual BigInteger OpIndex { get; set; }\n+        [Parameter(\"string\", \"reason\", 2)]\n+        public virtual string Reason { get; set; }\n+    }\n+\n+    public partial class FailedOpWithRevertError : FailedOpWithRevertErrorBase { }\n+\n+    [Error(\"FailedOpWithRevert\")]\n+    public class FailedOpWithRevertErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"uint256\", \"opIndex\", 1)]\n+        public virtual BigInteger OpIndex { get; set; }\n+        [Parameter(\"string\", \"reason\", 2)]\n+        public virtual string Reason { get; set; }\n+        [Parameter(\"bytes\", \"inner\", 3)]\n+        public virtual byte[] Inner { get; set; }\n+    }\n+\n+    public partial class InvalidShortStringError : InvalidShortStringErrorBase { }\n+    [Error(\"InvalidShortString\")]\n+    public class InvalidShortStringErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class PostOpRevertedError : PostOpRevertedErrorBase { }\n+\n+    [Error(\"PostOpReverted\")]\n+    public class PostOpRevertedErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"bytes\", \"returnData\", 1)]\n+        public virtual byte[] ReturnData { get; set; }\n+    }\n+\n+    public partial class ReentrancyGuardReentrantCallError : ReentrancyGuardReentrantCallErrorBase { }\n+    [Error(\"ReentrancyGuardReentrantCall\")]\n+    public class ReentrancyGuardReentrantCallErrorBase : IErrorDTO\n+    {\n+    }\n+\n+    public partial class SenderAddressResultError : SenderAddressResultErrorBase { }\n+\n+    [Error(\"SenderAddressResult\")]\n+    public class SenderAddressResultErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+    }\n+\n+    public partial class SignatureValidationFailedError : SignatureValidationFailedErrorBase { }\n+\n+    [Error(\"SignatureValidationFailed\")]\n+    public class SignatureValidationFailedErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"address\", \"aggregator\", 1)]\n+        public virtual string Aggregator { get; set; }\n+    }\n+\n+    public partial class StringTooLongError : StringTooLongErrorBase { }\n+\n+    [Error(\"StringTooLong\")]\n+    public class StringTooLongErrorBase : IErrorDTO\n+    {\n+        [Parameter(\"string\", \"str\", 1)]\n+        public virtual string Str { get; set; }\n+    }\n+\n+\n+\n+    public partial class BalanceOfOutputDTO : BalanceOfOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class BalanceOfOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+    public partial class Eip712DomainOutputDTO : Eip712DomainOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class Eip712DomainOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes1\", \"fields\", 1)]\n+        public virtual byte[] Fields { get; set; }\n+        [Parameter(\"string\", \"name\", 2)]\n+        public virtual string Name { get; set; }\n+        [Parameter(\"string\", \"version\", 3)]\n+        public virtual string Version { get; set; }\n+        [Parameter(\"uint256\", \"chainId\", 4)]\n+        public virtual BigInteger ChainId { get; set; }\n+        [Parameter(\"address\", \"verifyingContract\", 5)]\n+        public virtual string VerifyingContract { get; set; }\n+        [Parameter(\"bytes32\", \"salt\", 6)]\n+        public virtual byte[] Salt { get; set; }\n+        [Parameter(\"uint256[]\", \"extensions\", 7)]\n+        public virtual List<BigInteger> Extensions { get; set; }\n+    }\n+\n+    public partial class GetDepositInfoOutputDTO : GetDepositInfoOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetDepositInfoOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"tuple\", \"info\", 1)]\n+        public virtual DepositInfo Info { get; set; }\n+    }\n+\n+    public partial class GetDomainSeparatorV4OutputDTO : GetDomainSeparatorV4OutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetDomainSeparatorV4OutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes32\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class GetNonceOutputDTO : GetNonceOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetNonceOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"nonce\", 1)]\n+        public virtual BigInteger Nonce { get; set; }\n+    }\n+\n+    public partial class GetPackedUserOpTypeHashOutputDTO : GetPackedUserOpTypeHashOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetPackedUserOpTypeHashOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes32\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+    public partial class GetUserOpHashOutputDTO : GetUserOpHashOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class GetUserOpHashOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bytes32\", \"\", 1)]\n+        public virtual byte[] ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+    public partial class NonceSequenceNumberOutputDTO : NonceSequenceNumberOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class NonceSequenceNumberOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"uint256\", \"\", 1)]\n+        public virtual BigInteger ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class SenderCreatorOutputDTO : SenderCreatorOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class SenderCreatorOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"address\", \"\", 1)]\n+        public virtual string ReturnValue1 { get; set; }\n+    }\n+\n+    public partial class SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase { }\n+\n+    [FunctionOutput]\n+    public class SupportsInterfaceOutputDTOBase : IFunctionOutputDTO \n+    {\n+        [Parameter(\"bool\", \"\", 1)]\n+        public virtual bool ReturnValue1 { get; set; }\n+    }\n+\n+\n+\n+\n+\n+\n+}"},{"sha":"235db5a9fcca0013c2036977a066c1240f0a7df5","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/MemoryUserOp.gen.cs","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FMemoryUserOp.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FMemoryUserOp.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FMemoryUserOp.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,35 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+    public partial class MemoryUserOp : MemoryUserOpBase { }\n+\n+    public class MemoryUserOpBase \n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"uint256\", \"verificationGasLimit\", 3)]\n+        public virtual BigInteger VerificationGasLimit { get; set; }\n+        [Parameter(\"uint256\", \"callGasLimit\", 4)]\n+        public virtual BigInteger CallGasLimit { get; set; }\n+        [Parameter(\"uint256\", \"paymasterVerificationGasLimit\", 5)]\n+        public virtual BigInteger PaymasterVerificationGasLimit { get; set; }\n+        [Parameter(\"uint256\", \"paymasterPostOpGasLimit\", 6)]\n+        public virtual BigInteger PaymasterPostOpGasLimit { get; set; }\n+        [Parameter(\"uint256\", \"preVerificationGas\", 7)]\n+        public virtual BigInteger PreVerificationGas { get; set; }\n+        [Parameter(\"address\", \"paymaster\", 8)]\n+        public virtual string Paymaster { get; set; }\n+        [Parameter(\"uint256\", \"maxFeePerGas\", 9)]\n+        public virtual BigInteger MaxFeePerGas { get; set; }\n+        [Parameter(\"uint256\", \"maxPriorityFeePerGas\", 10)]\n+        public virtual BigInteger MaxPriorityFeePerGas { get; set; }\n+    }\n+}"},{"sha":"02331797442177cac8c0869f35ed37623cccab3a","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/PackedUserOperation.gen.cs","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FPackedUserOperation.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FPackedUserOperation.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FPackedUserOperation.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,33 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+    public partial class PackedUserOperation : PackedUserOperationBase { }\n+\n+    public class PackedUserOperationBase \n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"initCode\", 3)]\n+        public virtual byte[] InitCode { get; set; }\n+        [Parameter(\"bytes\", \"callData\", 4)]\n+        public virtual byte[] CallData { get; set; }\n+        [Parameter(\"bytes32\", \"accountGasLimits\", 5)]\n+        public virtual byte[] AccountGasLimits { get; set; }\n+        [Parameter(\"uint256\", \"preVerificationGas\", 6)]\n+        public virtual BigInteger PreVerificationGas { get; set; }\n+        [Parameter(\"bytes32\", \"gasFees\", 7)]\n+        public virtual byte[] GasFees { get; set; }\n+        [Parameter(\"bytes\", \"paymasterAndData\", 8)]\n+        public virtual byte[] PaymasterAndData { get; set; }\n+        [Parameter(\"bytes\", \"signature\", 9)]\n+        public virtual byte[] Signature { get; set; }\n+    }\n+}"},{"sha":"6632ab7b28e305f420d40bae7e535b4d063c3fd6","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/UserOpInfo.gen.cs","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpInfo.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpInfo.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpInfo.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,25 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+    public partial class UserOpInfo : UserOpInfoBase { }\n+\n+    public class UserOpInfoBase \n+    {\n+        [Parameter(\"tuple\", \"mUserOp\", 1)]\n+        public virtual MemoryUserOp MUserOp { get; set; }\n+        [Parameter(\"bytes32\", \"userOpHash\", 2)]\n+        public virtual byte[] UserOpHash { get; set; }\n+        [Parameter(\"uint256\", \"prefund\", 3)]\n+        public virtual BigInteger Prefund { get; set; }\n+        [Parameter(\"uint256\", \"contextOffset\", 4)]\n+        public virtual BigInteger ContextOffset { get; set; }\n+        [Parameter(\"uint256\", \"preOpGas\", 5)]\n+        public virtual BigInteger PreOpGas { get; set; }\n+    }\n+}"},{"sha":"a5f0e88ead0f4ade856d781e5d6a4f0c7963da9d","filename":"src/Nethereum.AccountAbstraction/EntryPoint/ContractDefinition/UserOpsPerAggregator.gen.cs","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpsPerAggregator.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpsPerAggregator.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FContractDefinition%2FUserOpsPerAggregator.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,22 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint.ContractDefinition\n+{\n+    public partial class UserOpsPerAggregator : UserOpsPerAggregatorBase { }\n+\n+    public class UserOpsPerAggregatorBase \n+    {\n+        [Parameter(\"tuple[]\", \"userOps\", 1)]\n+        public virtual List<PackedUserOperation> UserOps { get; set; }\n+        [Parameter(\"address\", \"aggregator\", 2)]\n+        public virtual string Aggregator { get; set; }\n+        [Parameter(\"bytes\", \"signature\", 3)]\n+        public virtual byte[] Signature { get; set; }\n+    }\n+}"},{"sha":"a0f4375d2c86cf556d91be2f6f99b993849e3bb9","filename":"src/Nethereum.AccountAbstraction/EntryPoint/EntryPointService.cs","status":"added","additions":197,"deletions":0,"changes":197,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,197 @@\n+﻿using Nethereum.AccountAbstraction.EntryPoint.ContractDefinition;\n+using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Util;\n+using Nethereum.Contracts;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+using System.Text;\n+using System.Threading.Tasks;\n+using Nethereum.ABI;\n+using Nethereum.Signer;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint\n+{\n+        public partial class EntryPointService\n+        {\n+            public async Task<string> GetSenderAddressQueryAsync(byte[] initCode)\n+            {\n+                var getSenderAddressFunction = new GetSenderAddressFunction\n+                {\n+                    InitCode = initCode\n+                };\n+                return await ContractHandler.QueryAsync<GetSenderAddressFunction, string>(getSenderAddressFunction);\n+            }\n+       \n+            public async Task<string> HandleOpsQueryAsync(HandleOpsFunction handleOpsFunction)\n+            {\n+                return await ContractHandler.QueryAsync<HandleOpsFunction, string>(handleOpsFunction);\n+            }\n+\n+\n+\n+            public async Task<UserOperation> InitialiseUserOperationAsync(\n+                UserOperation userOperation)\n+            {\n+\n+                if (userOperation.InitCode != null && userOperation.InitCode.Length > 0)\n+                {\n+                    if (AccountAbstractionEIP7702Utils.IsEip7702UserOp(userOperation))\n+                    {\n+                        var delegateAddress = await Web3.Eth.GetEIP7022AuthorisationService().GetDelegatedAccountAddressAsync(userOperation.Sender);\n+                        if (string.IsNullOrEmpty(delegateAddress))\n+                        {\n+                            throw new Exception(\"Must provide eip7702delegate for EIP-7702 UserOperation initialisation\");\n+                        }\n+\n+                        if (userOperation.Nonce == null)\n+                        {\n+                            userOperation.Nonce = await Web3.Eth.Transactions\n+                                .GetTransactionCount\n+                                .SendRequestAsync(userOperation.Sender);\n+                        }\n+                    }\n+                    else\n+                    {\n+                            var initAddress = userOperation.InitCode.Take(20).ToArray();\n+                            var initCallData = userOperation.InitCode.Skip(20).ToArray();\n+\n+                            if (userOperation.Nonce == null) userOperation.Nonce = 0;\n+                            if (string.IsNullOrEmpty(userOperation.Sender))\n+                            {\n+                                try\n+                                {\n+                                    userOperation.Sender = await GetSenderAddressQueryAsync(userOperation.InitCode);\n+                                }\n+                                catch (SmartContractCustomErrorRevertException ex)\n+                                {\n+                                    var error = FindCustomErrorException(ex);\n+                                    if (error is SmartContractCustomErrorRevertException<SenderAddressResultError> addressError)\n+                                    {\n+                                        userOperation.Sender = addressError.CustomError.Sender;\n+                                    }\n+                                    else\n+                                    {\n+                                        throw new Exception(\"Sender address not found in initCode\");\n+                                    }\n+                                }\n+                            }\n+\n+                            if (userOperation.VerificationGasLimit == null)\n+                            {\n+                                var senderCreator = await SenderCreatorQueryAsync();\n+                                string toAddress = null;\n+                                if (initAddress != null && initAddress.Length > 0)\n+                                {\n+                                    toAddress = initAddress.ToHex(true);\n+                                }\n+\n+                                var initEstimate = await Web3.Eth.Transactions.EstimateGas.SendRequestAsync(\n+                                new CallInput\n+                                {\n+                                    From = senderCreator,\n+                                    To = toAddress,\n+                                    Data = initCallData.ToHex(true),\n+                                    Gas = new HexBigInteger(10000000)\n+                                });\n+                                userOperation.VerificationGasLimit = UserOperation.DEFAULT_VERIFICATION_GAS_LIMIT + initEstimate.Value;\n+                            }\n+                    }\n+                }\n+\n+                if (userOperation.Nonce == null)\n+                {\n+                    if (string.IsNullOrEmpty(userOperation.Sender))\n+                        throw new Exception(\"Sender must be specified to fetch nonce\");\n+                    userOperation.Nonce = await GetNonceQueryAsync(userOperation.Sender, 0);\n+                }\n+\n+                if (userOperation.CallGasLimit == null && (userOperation.CallData != null && userOperation.CallData.Length > 0))\n+                {\n+                    var gasEstimated = await Web3.Eth.Transactions.EstimateGas.SendRequestAsync(\n+                        new CallInput\n+                        {\n+                            From = ContractAddress,\n+                            To = userOperation.Sender,\n+                            Data = userOperation.CallData.ToHex(true)\n+                        });\n+                    userOperation.CallGasLimit = gasEstimated.Value;\n+                }\n+\n+                if (!string.IsNullOrEmpty(userOperation.Paymaster) && !userOperation.Paymaster.IsTheSameAddress(AddressUtil.ZERO_ADDRESS))\n+                {\n+                    userOperation.PaymasterVerificationGasLimit ??= UserOperation.DEFAULT_PAYMASTER_VERIFICATION_GAS_LIMIT;\n+                    userOperation.PaymasterPostOpGasLimit ??= UserOperation.DEFAULT_PAYMASTER_POST_OP_GAS_LIMIT;\n+                }\n+\n+                if (userOperation.MaxFeePerGas == null)\n+                {\n+                    var block = await Web3.Eth.Blocks.GetBlockWithTransactionsByNumber.SendRequestAsync(BlockParameter.CreateLatest());\n+                    userOperation.MaxFeePerGas = block.BaseFeePerGas.Value + (userOperation.MaxPriorityFeePerGas ?? UserOperation.DEFAULT_MAX_FEE_PER_GAS);\n+                }\n+\n+                if (userOperation.MaxPriorityFeePerGas == null)\n+                {\n+                    userOperation.MaxPriorityFeePerGas = UserOperation.DEFAULT_MAX_PRIORITY_FEE_PER_GAS;\n+                }\n+\n+\n+                if (userOperation.PreVerificationGas == null)\n+                {\n+                    userOperation.SetNullValuesToDefaultValues();\n+                    userOperation.PreVerificationGas = UserOperation.DEFAULT_PRE_VERIFICATION_GAS;\n+                    var packedFilledOp = UserOperationBuilder.PackUserOperation(userOperation);\n+                    //what about the signature size?\n+                    userOperation.PreVerificationGas = userOperation.PreVerificationGas + CalculateCallDataCost(new ABIEncode().GetABIParamsEncoded(packedFilledOp));\n+                }\n+\n+                userOperation.SetNullValuesToDefaultValues();\n+\n+               \n+\n+                return userOperation;\n+            }\n+\n+            public async Task<PackedUserOperation> SignAndInitialiseUserOperationAsync(\n+                UserOperation userOperation,\n+                EthECKey signer,\n+                string eip7702Delegate = null)\n+            {\n+                var chainId = await Web3.Eth.ChainId.SendRequestAsync();\n+                userOperation = await InitialiseUserOperationAsync(userOperation);\n+                \n+                if (AccountAbstractionEIP7702Utils.IsEip7702UserOp(userOperation))\n+                {\n+                    if (string.IsNullOrEmpty(eip7702Delegate))\n+                    {\n+                        var delegateAddress = await Web3.Eth.GetEIP7022AuthorisationService().GetDelegatedAccountAddressAsync(userOperation.Sender);\n+                        userOperation.InitCode = AccountAbstractionEIP7702Utils.UpdateInitCodeForHashing(userOperation.InitCode, delegateAddress);\n+                    }\n+                    else\n+                    {\n+                        userOperation.InitCode = AccountAbstractionEIP7702Utils.UpdateInitCodeForHashing(userOperation.InitCode, eip7702Delegate.HexToByteArray());\n+                    }\n+                }\n+                \n+                \n+                  var packedUserOperation = UserOperationBuilder.PackAndSignEIP712UserOperation(userOperation, ContractAddress, chainId, signer);\n+                  return packedUserOperation;\n+            }\n+\n+            private static BigInteger CalculateCallDataCost(byte[] data)\n+            {\n+                BigInteger cost = 0;\n+                foreach (var b in data)\n+                {\n+                    cost += b == 0 ? 4 : 16;\n+                }\n+                return cost;\n+            }\n+        }\n+    }\n+\n+"},{"sha":"5f227773c7a8f0ef72f4c1624fc60e230dd6f46f","filename":"src/Nethereum.AccountAbstraction/EntryPoint/EntryPointService.gen.cs","status":"added","additions":534,"deletions":0,"changes":534,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FEntryPoint%2FEntryPointService.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,534 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+using Nethereum.Web3;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.Contracts.CQS;\n+using Nethereum.Contracts.ContractHandlers;\n+using Nethereum.Contracts;\n+using System.Threading;\n+using Nethereum.AccountAbstraction.EntryPoint.ContractDefinition;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction.EntryPoint\n+{\n+    public partial class EntryPointService: EntryPointServiceBase\n+    {\n+        public static Task<TransactionReceipt> DeployContractAndWaitForReceiptAsync(Nethereum.Web3.IWeb3 web3, EntryPointDeployment entryPointDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<EntryPointDeployment>().SendRequestAndWaitForReceiptAsync(entryPointDeployment, cancellationTokenSource);\n+        }\n+\n+        public static Task<string> DeployContractAsync(Nethereum.Web3.IWeb3 web3, EntryPointDeployment entryPointDeployment)\n+        {\n+            return web3.Eth.GetContractDeploymentHandler<EntryPointDeployment>().SendRequestAsync(entryPointDeployment);\n+        }\n+\n+        public static async Task<EntryPointService> DeployContractAndGetServiceAsync(Nethereum.Web3.IWeb3 web3, EntryPointDeployment entryPointDeployment, CancellationTokenSource cancellationTokenSource = null)\n+        {\n+            var receipt = await DeployContractAndWaitForReceiptAsync(web3, entryPointDeployment, cancellationTokenSource);\n+            return new EntryPointService(web3, receipt.ContractAddress);\n+        }\n+\n+        public EntryPointService(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+    }\n+\n+\n+    public partial class EntryPointServiceBase: ContractWeb3ServiceBase\n+    {\n+\n+        public EntryPointServiceBase(Nethereum.Web3.IWeb3 web3, string contractAddress) : base(web3, contractAddress)\n+        {\n+        }\n+\n+        public virtual Task<string> AddStakeRequestAsync(AddStakeFunction addStakeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(addStakeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> AddStakeRequestAndWaitForReceiptAsync(AddStakeFunction addStakeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(addStakeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> AddStakeRequestAsync(uint unstakeDelaySec)\n+        {\n+            var addStakeFunction = new AddStakeFunction();\n+                addStakeFunction.UnstakeDelaySec = unstakeDelaySec;\n+            \n+             return ContractHandler.SendRequestAsync(addStakeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> AddStakeRequestAndWaitForReceiptAsync(uint unstakeDelaySec, CancellationTokenSource cancellationToken = null)\n+        {\n+            var addStakeFunction = new AddStakeFunction();\n+                addStakeFunction.UnstakeDelaySec = unstakeDelaySec;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(addStakeFunction, cancellationToken);\n+        }\n+\n+        public Task<BigInteger> BalanceOfQueryAsync(BalanceOfFunction balanceOfFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<BalanceOfFunction, BigInteger>(balanceOfFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> BalanceOfQueryAsync(string account, BlockParameter blockParameter = null)\n+        {\n+            var balanceOfFunction = new BalanceOfFunction();\n+                balanceOfFunction.Account = account;\n+            \n+            return ContractHandler.QueryAsync<BalanceOfFunction, BigInteger>(balanceOfFunction, blockParameter);\n+        }\n+\n+        public virtual Task<string> DelegateAndRevertRequestAsync(DelegateAndRevertFunction delegateAndRevertFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(delegateAndRevertFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> DelegateAndRevertRequestAndWaitForReceiptAsync(DelegateAndRevertFunction delegateAndRevertFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(delegateAndRevertFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> DelegateAndRevertRequestAsync(string target, byte[] data)\n+        {\n+            var delegateAndRevertFunction = new DelegateAndRevertFunction();\n+                delegateAndRevertFunction.Target = target;\n+                delegateAndRevertFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAsync(delegateAndRevertFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> DelegateAndRevertRequestAndWaitForReceiptAsync(string target, byte[] data, CancellationTokenSource cancellationToken = null)\n+        {\n+            var delegateAndRevertFunction = new DelegateAndRevertFunction();\n+                delegateAndRevertFunction.Target = target;\n+                delegateAndRevertFunction.Data = data;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(delegateAndRevertFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> DepositToRequestAsync(DepositToFunction depositToFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(depositToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> DepositToRequestAndWaitForReceiptAsync(DepositToFunction depositToFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(depositToFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> DepositToRequestAsync(string account)\n+        {\n+            var depositToFunction = new DepositToFunction();\n+                depositToFunction.Account = account;\n+            \n+             return ContractHandler.SendRequestAsync(depositToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> DepositToRequestAndWaitForReceiptAsync(string account, CancellationTokenSource cancellationToken = null)\n+        {\n+            var depositToFunction = new DepositToFunction();\n+                depositToFunction.Account = account;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(depositToFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<Eip712DomainOutputDTO> Eip712DomainQueryAsync(Eip712DomainFunction eip712DomainFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryDeserializingToObjectAsync<Eip712DomainFunction, Eip712DomainOutputDTO>(eip712DomainFunction, blockParameter);\n+        }\n+\n+        public virtual Task<Eip712DomainOutputDTO> Eip712DomainQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryDeserializingToObjectAsync<Eip712DomainFunction, Eip712DomainOutputDTO>(null, blockParameter);\n+        }\n+\n+        public virtual Task<GetDepositInfoOutputDTO> GetDepositInfoQueryAsync(GetDepositInfoFunction getDepositInfoFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryDeserializingToObjectAsync<GetDepositInfoFunction, GetDepositInfoOutputDTO>(getDepositInfoFunction, blockParameter);\n+        }\n+\n+        public virtual Task<GetDepositInfoOutputDTO> GetDepositInfoQueryAsync(string account, BlockParameter blockParameter = null)\n+        {\n+            var getDepositInfoFunction = new GetDepositInfoFunction();\n+                getDepositInfoFunction.Account = account;\n+            \n+            return ContractHandler.QueryDeserializingToObjectAsync<GetDepositInfoFunction, GetDepositInfoOutputDTO>(getDepositInfoFunction, blockParameter);\n+        }\n+\n+        public Task<byte[]> GetDomainSeparatorV4QueryAsync(GetDomainSeparatorV4Function getDomainSeparatorV4Function, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetDomainSeparatorV4Function, byte[]>(getDomainSeparatorV4Function, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> GetDomainSeparatorV4QueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetDomainSeparatorV4Function, byte[]>(null, blockParameter);\n+        }\n+\n+        public Task<BigInteger> GetNonceQueryAsync(GetNonceFunction getNonceFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(getNonceFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> GetNonceQueryAsync(string sender, BigInteger key, BlockParameter blockParameter = null)\n+        {\n+            var getNonceFunction = new GetNonceFunction();\n+                getNonceFunction.Sender = sender;\n+                getNonceFunction.Key = key;\n+            \n+            return ContractHandler.QueryAsync<GetNonceFunction, BigInteger>(getNonceFunction, blockParameter);\n+        }\n+\n+        public Task<byte[]> GetPackedUserOpTypeHashQueryAsync(GetPackedUserOpTypeHashFunction getPackedUserOpTypeHashFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetPackedUserOpTypeHashFunction, byte[]>(getPackedUserOpTypeHashFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> GetPackedUserOpTypeHashQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetPackedUserOpTypeHashFunction, byte[]>(null, blockParameter);\n+        }\n+\n+        public virtual Task<string> GetSenderAddressRequestAsync(GetSenderAddressFunction getSenderAddressFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(getSenderAddressFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> GetSenderAddressRequestAndWaitForReceiptAsync(GetSenderAddressFunction getSenderAddressFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(getSenderAddressFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> GetSenderAddressRequestAsync(byte[] initCode)\n+        {\n+            var getSenderAddressFunction = new GetSenderAddressFunction();\n+                getSenderAddressFunction.InitCode = initCode;\n+            \n+             return ContractHandler.SendRequestAsync(getSenderAddressFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> GetSenderAddressRequestAndWaitForReceiptAsync(byte[] initCode, CancellationTokenSource cancellationToken = null)\n+        {\n+            var getSenderAddressFunction = new GetSenderAddressFunction();\n+                getSenderAddressFunction.InitCode = initCode;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(getSenderAddressFunction, cancellationToken);\n+        }\n+\n+        public Task<byte[]> GetUserOpHashQueryAsync(GetUserOpHashFunction getUserOpHashFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<GetUserOpHashFunction, byte[]>(getUserOpHashFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<byte[]> GetUserOpHashQueryAsync(PackedUserOperation userOp, BlockParameter blockParameter = null)\n+        {\n+            var getUserOpHashFunction = new GetUserOpHashFunction();\n+                getUserOpHashFunction.UserOp = userOp;\n+            \n+            return ContractHandler.QueryAsync<GetUserOpHashFunction, byte[]>(getUserOpHashFunction, blockParameter);\n+        }\n+\n+        public virtual Task<string> HandleAggregatedOpsRequestAsync(HandleAggregatedOpsFunction handleAggregatedOpsFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(handleAggregatedOpsFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> HandleAggregatedOpsRequestAndWaitForReceiptAsync(HandleAggregatedOpsFunction handleAggregatedOpsFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(handleAggregatedOpsFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> HandleAggregatedOpsRequestAsync(List<UserOpsPerAggregator> opsPerAggregator, string beneficiary)\n+        {\n+            var handleAggregatedOpsFunction = new HandleAggregatedOpsFunction();\n+                handleAggregatedOpsFunction.OpsPerAggregator = opsPerAggregator;\n+                handleAggregatedOpsFunction.Beneficiary = beneficiary;\n+            \n+             return ContractHandler.SendRequestAsync(handleAggregatedOpsFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> HandleAggregatedOpsRequestAndWaitForReceiptAsync(List<UserOpsPerAggregator> opsPerAggregator, string beneficiary, CancellationTokenSource cancellationToken = null)\n+        {\n+            var handleAggregatedOpsFunction = new HandleAggregatedOpsFunction();\n+                handleAggregatedOpsFunction.OpsPerAggregator = opsPerAggregator;\n+                handleAggregatedOpsFunction.Beneficiary = beneficiary;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(handleAggregatedOpsFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> HandleOpsRequestAsync(HandleOpsFunction handleOpsFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(handleOpsFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> HandleOpsRequestAndWaitForReceiptAsync(HandleOpsFunction handleOpsFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(handleOpsFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> HandleOpsRequestAsync(List<PackedUserOperation> ops, string beneficiary)\n+        {\n+            var handleOpsFunction = new HandleOpsFunction();\n+                handleOpsFunction.Ops = ops;\n+                handleOpsFunction.Beneficiary = beneficiary;\n+            \n+             return ContractHandler.SendRequestAsync(handleOpsFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> HandleOpsRequestAndWaitForReceiptAsync(List<PackedUserOperation> ops, string beneficiary, CancellationTokenSource cancellationToken = null)\n+        {\n+            var handleOpsFunction = new HandleOpsFunction();\n+                handleOpsFunction.Ops = ops;\n+                handleOpsFunction.Beneficiary = beneficiary;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(handleOpsFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> IncrementNonceRequestAsync(IncrementNonceFunction incrementNonceFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(incrementNonceFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> IncrementNonceRequestAndWaitForReceiptAsync(IncrementNonceFunction incrementNonceFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(incrementNonceFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> IncrementNonceRequestAsync(BigInteger key)\n+        {\n+            var incrementNonceFunction = new IncrementNonceFunction();\n+                incrementNonceFunction.Key = key;\n+            \n+             return ContractHandler.SendRequestAsync(incrementNonceFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> IncrementNonceRequestAndWaitForReceiptAsync(BigInteger key, CancellationTokenSource cancellationToken = null)\n+        {\n+            var incrementNonceFunction = new IncrementNonceFunction();\n+                incrementNonceFunction.Key = key;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(incrementNonceFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> InnerHandleOpRequestAsync(InnerHandleOpFunction innerHandleOpFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(innerHandleOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> InnerHandleOpRequestAndWaitForReceiptAsync(InnerHandleOpFunction innerHandleOpFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(innerHandleOpFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> InnerHandleOpRequestAsync(byte[] callData, UserOpInfo opInfo, byte[] context)\n+        {\n+            var innerHandleOpFunction = new InnerHandleOpFunction();\n+                innerHandleOpFunction.CallData = callData;\n+                innerHandleOpFunction.OpInfo = opInfo;\n+                innerHandleOpFunction.Context = context;\n+            \n+             return ContractHandler.SendRequestAsync(innerHandleOpFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> InnerHandleOpRequestAndWaitForReceiptAsync(byte[] callData, UserOpInfo opInfo, byte[] context, CancellationTokenSource cancellationToken = null)\n+        {\n+            var innerHandleOpFunction = new InnerHandleOpFunction();\n+                innerHandleOpFunction.CallData = callData;\n+                innerHandleOpFunction.OpInfo = opInfo;\n+                innerHandleOpFunction.Context = context;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(innerHandleOpFunction, cancellationToken);\n+        }\n+\n+        public Task<BigInteger> NonceSequenceNumberQueryAsync(NonceSequenceNumberFunction nonceSequenceNumberFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<NonceSequenceNumberFunction, BigInteger>(nonceSequenceNumberFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<BigInteger> NonceSequenceNumberQueryAsync(string returnValue1, BigInteger returnValue2, BlockParameter blockParameter = null)\n+        {\n+            var nonceSequenceNumberFunction = new NonceSequenceNumberFunction();\n+                nonceSequenceNumberFunction.ReturnValue1 = returnValue1;\n+                nonceSequenceNumberFunction.ReturnValue2 = returnValue2;\n+            \n+            return ContractHandler.QueryAsync<NonceSequenceNumberFunction, BigInteger>(nonceSequenceNumberFunction, blockParameter);\n+        }\n+\n+        public Task<string> SenderCreatorQueryAsync(SenderCreatorFunction senderCreatorFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SenderCreatorFunction, string>(senderCreatorFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<string> SenderCreatorQueryAsync(BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SenderCreatorFunction, string>(null, blockParameter);\n+        }\n+\n+        public Task<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter = null)\n+        {\n+            return ContractHandler.QueryAsync<SupportsInterfaceFunction, bool>(supportsInterfaceFunction, blockParameter);\n+        }\n+\n+        \n+        public virtual Task<bool> SupportsInterfaceQueryAsync(byte[] interfaceId, BlockParameter blockParameter = null)\n+        {\n+            var supportsInterfaceFunction = new SupportsInterfaceFunction();\n+                supportsInterfaceFunction.InterfaceId = interfaceId;\n+            \n+            return ContractHandler.QueryAsync<SupportsInterfaceFunction, bool>(supportsInterfaceFunction, blockParameter);\n+        }\n+\n+        public virtual Task<string> UnlockStakeRequestAsync(UnlockStakeFunction unlockStakeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(unlockStakeFunction);\n+        }\n+\n+        public virtual Task<string> UnlockStakeRequestAsync()\n+        {\n+             return ContractHandler.SendRequestAsync<UnlockStakeFunction>();\n+        }\n+\n+        public virtual Task<TransactionReceipt> UnlockStakeRequestAndWaitForReceiptAsync(UnlockStakeFunction unlockStakeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(unlockStakeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<TransactionReceipt> UnlockStakeRequestAndWaitForReceiptAsync(CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync<UnlockStakeFunction>(null, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawStakeRequestAsync(WithdrawStakeFunction withdrawStakeFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(withdrawStakeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawStakeRequestAndWaitForReceiptAsync(WithdrawStakeFunction withdrawStakeFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawStakeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawStakeRequestAsync(string withdrawAddress)\n+        {\n+            var withdrawStakeFunction = new WithdrawStakeFunction();\n+                withdrawStakeFunction.WithdrawAddress = withdrawAddress;\n+            \n+             return ContractHandler.SendRequestAsync(withdrawStakeFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawStakeRequestAndWaitForReceiptAsync(string withdrawAddress, CancellationTokenSource cancellationToken = null)\n+        {\n+            var withdrawStakeFunction = new WithdrawStakeFunction();\n+                withdrawStakeFunction.WithdrawAddress = withdrawAddress;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawStakeFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawToRequestAsync(WithdrawToFunction withdrawToFunction)\n+        {\n+             return ContractHandler.SendRequestAsync(withdrawToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawToRequestAndWaitForReceiptAsync(WithdrawToFunction withdrawToFunction, CancellationTokenSource cancellationToken = null)\n+        {\n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawToFunction, cancellationToken);\n+        }\n+\n+        public virtual Task<string> WithdrawToRequestAsync(string withdrawAddress, BigInteger withdrawAmount)\n+        {\n+            var withdrawToFunction = new WithdrawToFunction();\n+                withdrawToFunction.WithdrawAddress = withdrawAddress;\n+                withdrawToFunction.WithdrawAmount = withdrawAmount;\n+            \n+             return ContractHandler.SendRequestAsync(withdrawToFunction);\n+        }\n+\n+        public virtual Task<TransactionReceipt> WithdrawToRequestAndWaitForReceiptAsync(string withdrawAddress, BigInteger withdrawAmount, CancellationTokenSource cancellationToken = null)\n+        {\n+            var withdrawToFunction = new WithdrawToFunction();\n+                withdrawToFunction.WithdrawAddress = withdrawAddress;\n+                withdrawToFunction.WithdrawAmount = withdrawAmount;\n+            \n+             return ContractHandler.SendRequestAndWaitForReceiptAsync(withdrawToFunction, cancellationToken);\n+        }\n+\n+        public override List<Type> GetAllFunctionTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(AddStakeFunction),\n+                typeof(BalanceOfFunction),\n+                typeof(DelegateAndRevertFunction),\n+                typeof(DepositToFunction),\n+                typeof(Eip712DomainFunction),\n+                typeof(GetDepositInfoFunction),\n+                typeof(GetDomainSeparatorV4Function),\n+                typeof(GetNonceFunction),\n+                typeof(GetPackedUserOpTypeHashFunction),\n+                typeof(GetSenderAddressFunction),\n+                typeof(GetUserOpHashFunction),\n+                typeof(HandleAggregatedOpsFunction),\n+                typeof(HandleOpsFunction),\n+                typeof(IncrementNonceFunction),\n+                typeof(InnerHandleOpFunction),\n+                typeof(NonceSequenceNumberFunction),\n+                typeof(SenderCreatorFunction),\n+                typeof(SupportsInterfaceFunction),\n+                typeof(UnlockStakeFunction),\n+                typeof(WithdrawStakeFunction),\n+                typeof(WithdrawToFunction)\n+            };\n+        }\n+\n+        public override List<Type> GetAllEventTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(AccountDeployedEventDTO),\n+                typeof(BeforeExecutionEventDTO),\n+                typeof(DepositedEventDTO),\n+                typeof(EIP712DomainChangedEventDTO),\n+                typeof(PostOpRevertReasonEventDTO),\n+                typeof(SignatureAggregatorChangedEventDTO),\n+                typeof(StakeLockedEventDTO),\n+                typeof(StakeUnlockedEventDTO),\n+                typeof(StakeWithdrawnEventDTO),\n+                typeof(UserOperationEventEventDTO),\n+                typeof(UserOperationPrefundTooLowEventDTO),\n+                typeof(UserOperationRevertReasonEventDTO),\n+                typeof(WithdrawnEventDTO)\n+            };\n+        }\n+\n+        public override List<Type> GetAllErrorTypes()\n+        {\n+            return new List<Type>\n+            {\n+                typeof(DelegateAndRevertError),\n+                typeof(FailedOpError),\n+                typeof(FailedOpWithRevertError),\n+                typeof(InvalidShortStringError),\n+                typeof(PostOpRevertedError),\n+                typeof(ReentrancyGuardReentrantCallError),\n+                typeof(SenderAddressResultError),\n+                typeof(SignatureValidationFailedError),\n+                typeof(StringTooLongError)\n+            };\n+        }\n+    }\n+}"},{"sha":"86289102d4cd39351fd8300443daf7099b578ea6","filename":"src/Nethereum.AccountAbstraction/Nethereum.AccountAbstraction.csproj","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FNethereum.AccountAbstraction.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FNethereum.AccountAbstraction.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FNethereum.AccountAbstraction.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,4 +6,9 @@\n     <Nullable>enable</Nullable>\n   </PropertyGroup>\n \n+  <ItemGroup>\n+    <ProjectReference Include=\"..\\Nethereum.ABI\\Nethereum.ABI.csproj\" />\n+    <ProjectReference Include=\"..\\Nethereum.Web3\\Nethereum.Web3.csproj\" />\n+  </ItemGroup>\n+\n </Project>"},{"sha":"8da5e0f4b2bcfd71fa986619e69e759f4d56ce73","filename":"src/Nethereum.AccountAbstraction/PackedUserOperationForHash.cs","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FPackedUserOperationForHash.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FPackedUserOperationForHash.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FPackedUserOperationForHash.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,36 @@\n+﻿using Nethereum.ABI.FunctionEncoding.Attributes;\n+using System.Numerics;\n+\n+\n+namespace Nethereum.AccountAbstraction\n+{\n+\n+    [Struct(\"PackedUserOperation\")]\n+    public class PackedUserOperationForHash\n+    {\n+\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public string Sender { get; set; }\n+\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public BigInteger Nonce { get; set; }\n+\n+        [Parameter(\"bytes\", \"initCode\", 3)]\n+        public byte[] InitCode { get; set; }\n+\n+        [Parameter(\"bytes\", \"callData\", 4)]\n+        public byte[] CallData { get; set; }\n+\n+        [Parameter(\"bytes32\", \"accountGasLimits\", 5)]\n+        public byte[] AccountGasLimits { get; set; }\n+\n+        [Parameter(\"uint256\", \"preVerificationGas\", 6)]\n+        public BigInteger PreVerificationGas { get; set; }\n+\n+        [Parameter(\"bytes32\", \"gasFees\", 7)]\n+        public byte[] GasFees { get; set; }\n+\n+        [Parameter(\"bytes\", \"paymasterAndData\", 8)]\n+        public byte[] PaymasterAndData { get; set; }\n+    }\n+}"},{"sha":"dd2e8dc9384b5579f84834615b0c8ecada403006","filename":"src/Nethereum.AccountAbstraction/Structs/PackedUserOperation.gen.cs","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FStructs%2FPackedUserOperation.gen.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FStructs%2FPackedUserOperation.gen.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FStructs%2FPackedUserOperation.gen.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,33 @@\n+using System;\n+using System.Threading.Tasks;\n+using System.Collections.Generic;\n+using System.Numerics;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n+\n+namespace Nethereum.AccountAbstraction.Structs\n+{\n+    public partial class PackedUserOperation : PackedUserOperationBase { }\n+\n+    public class PackedUserOperationBase \n+    {\n+        [Parameter(\"address\", \"sender\", 1)]\n+        public virtual string Sender { get; set; }\n+        [Parameter(\"uint256\", \"nonce\", 2)]\n+        public virtual BigInteger Nonce { get; set; }\n+        [Parameter(\"bytes\", \"initCode\", 3)]\n+        public virtual byte[] InitCode { get; set; }\n+        [Parameter(\"bytes\", \"callData\", 4)]\n+        public virtual byte[] CallData { get; set; }\n+        [Parameter(\"bytes32\", \"accountGasLimits\", 5)]\n+        public virtual byte[] AccountGasLimits { get; set; }\n+        [Parameter(\"uint256\", \"preVerificationGas\", 6)]\n+        public virtual BigInteger PreVerificationGas { get; set; }\n+        [Parameter(\"bytes32\", \"gasFees\", 7)]\n+        public virtual byte[] GasFees { get; set; }\n+        [Parameter(\"bytes\", \"paymasterAndData\", 8)]\n+        public virtual byte[] PaymasterAndData { get; set; }\n+        [Parameter(\"bytes\", \"signature\", 9)]\n+        public virtual byte[] Signature { get; set; }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"50438c6259151ecf046279e00ea0d18f531188dc","filename":"src/Nethereum.AccountAbstraction/UserOperation.cs","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FUserOperation.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FUserOperation.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FUserOperation.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,59 @@\n+﻿using Nethereum.Util;\n+using System.Numerics;\n+\n+\n+namespace Nethereum.AccountAbstraction\n+{\n+    public class UserOperation\n+    {\n+        public static readonly string DEFAULT_SENDER = AddressUtil.ZERO_ADDRESS;\n+        public static readonly BigInteger? DEFAULT_NONCE = 0;\n+        public static readonly byte[] DEFAULT_INIT_CODE = Array.Empty<byte>();\n+        public static readonly byte[] DEFAULT_CALL_DATA = Array.Empty<byte>();\n+        public static readonly BigInteger DEFAULT_CALL_GAS_LIMIT = 0;\n+        public static readonly BigInteger? DEFAULT_VERIFICATION_GAS_LIMIT = 15000;\n+        public static readonly BigInteger DEFAULT_PRE_VERIFICATION_GAS = 21000;\n+        public static readonly BigInteger DEFAULT_MAX_FEE_PER_GAS = 0;\n+        public static readonly BigInteger DEFAULT_MAX_PRIORITY_FEE_PER_GAS = 1000000000;\n+        public static readonly string DEFAULT_PAYMASTER = AddressUtil.ZERO_ADDRESS;\n+        public static readonly byte[] DEFAULT_PAYMASTER_DATA = Array.Empty<byte>();\n+        public static readonly byte[] DEFAULT_SIGNATURE = Array.Empty<byte>();\n+        public static readonly BigInteger DEFAULT_PAYMASTER_VERIFICATION_GAS_LIMIT = 300000; // default verification gas. will add create2 cost (3200+200*length) if initCode exists\n+        public static readonly BigInteger DEFAULT_PAYMASTER_POST_OP_GAS_LIMIT = 0;\n+\n+        public string Sender { get; set; }\n+        public BigInteger? Nonce { get; set; }\n+        public byte[] InitCode { get; set; } = DEFAULT_INIT_CODE;\n+        public byte[] CallData { get; set; } = DEFAULT_CALL_DATA;\n+        public BigInteger? CallGasLimit { get; set; }\n+        public BigInteger? VerificationGasLimit { get; set; }\n+        public BigInteger? PreVerificationGas { get; set; }\n+        public BigInteger? MaxFeePerGas { get; set; }\n+        public BigInteger? MaxPriorityFeePerGas { get; set; }\n+        public string Paymaster { get; set; }\n+        public byte[] PaymasterData { get; set; }\n+        public byte[] Signature { get; set; }\n+        public BigInteger? PaymasterVerificationGasLimit { get; set; }\n+        public BigInteger? PaymasterPostOpGasLimit { get; set; }\n+\n+\n+        public virtual void SetNullValuesToDefaultValues()\n+        {\n+            Sender ??= DEFAULT_SENDER;\n+            Nonce ??= DEFAULT_NONCE;\n+            InitCode ??= DEFAULT_INIT_CODE;\n+            CallData ??= DEFAULT_CALL_DATA;\n+            CallGasLimit ??= DEFAULT_CALL_GAS_LIMIT;\n+            VerificationGasLimit ??= DEFAULT_VERIFICATION_GAS_LIMIT;\n+            PreVerificationGas ??= DEFAULT_PRE_VERIFICATION_GAS;\n+            MaxFeePerGas ??= DEFAULT_MAX_FEE_PER_GAS;\n+            MaxPriorityFeePerGas ??= DEFAULT_MAX_PRIORITY_FEE_PER_GAS;\n+            Paymaster ??= DEFAULT_PAYMASTER;\n+            PaymasterData ??= DEFAULT_PAYMASTER_DATA;\n+            Signature ??= DEFAULT_SIGNATURE;\n+            PaymasterVerificationGasLimit ??= DEFAULT_PAYMASTER_VERIFICATION_GAS_LIMIT;\n+            PaymasterPostOpGasLimit ??= DEFAULT_PAYMASTER_POST_OP_GAS_LIMIT;\n+        }\n+\n+    }\n+}"},{"sha":"d8d549ab484d0cbd54a3027dec54b4cc6f9c4bcc","filename":"src/Nethereum.AccountAbstraction/UserOperationBuilder.cs","status":"added","additions":162,"deletions":0,"changes":162,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FUserOperationBuilder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.AccountAbstraction%2FUserOperationBuilder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.AccountAbstraction%2FUserOperationBuilder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,162 @@\n+﻿using Nethereum.ABI;\n+using Nethereum.ABI.EIP712;\n+using Nethereum.Contracts.Services;\n+using Nethereum.RLP;\n+using Nethereum.Util;\n+using System.Numerics;\n+using System.Linq;\n+using Nethereum.Signer.EIP712;\n+using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.Signer;\n+using Nethereum.AccountAbstraction.Structs;\n+\n+namespace Nethereum.AccountAbstraction\n+{ \n+    \n+    public class UserOperationBuilder\n+    {\n+        public static PackedUserOperation PackUserOperation(UserOperation userOperation)\n+        {\n+            var packedUserOperationForHash = PackUserOperationForHash(userOperation);\n+            return new PackedUserOperation\n+            {\n+                Sender = packedUserOperationForHash.Sender,\n+                Nonce = packedUserOperationForHash.Nonce,\n+                InitCode = packedUserOperationForHash.InitCode,\n+                CallData = packedUserOperationForHash.CallData,\n+                AccountGasLimits = packedUserOperationForHash.AccountGasLimits,\n+                PreVerificationGas = packedUserOperationForHash.PreVerificationGas,\n+                GasFees = packedUserOperationForHash.GasFees,\n+                PaymasterAndData = packedUserOperationForHash.PaymasterAndData,\n+                Signature = userOperation.Signature\n+            };\n+        }\n+\n+        public static PackedUserOperationForHash PackUserOperationForHash(UserOperation userOperation)\n+        {\n+            var accountGasLimits = PackAccountGasLimits(userOperation.VerificationGasLimit.Value, userOperation.CallGasLimit.Value);\n+            var gasFees = PackAccountGasLimits(userOperation.MaxPriorityFeePerGas.Value, userOperation.MaxFeePerGas.Value);\n+            var paymasterAndData = new byte[0];\n+            if(userOperation.Paymaster.IsAnEmptyAddress() == false && userOperation.Paymaster.IsValidEthereumAddressLength() && userOperation.Paymaster != AddressUtil.ZERO_ADDRESS)\n+            {\n+                paymasterAndData = PackPaymasterData(userOperation.Paymaster, userOperation.PaymasterVerificationGasLimit.Value, userOperation.PaymasterPostOpGasLimit.Value, userOperation.PaymasterData);\n+            }\n+\n+            return new PackedUserOperationForHash\n+            {\n+                Sender = userOperation.Sender,\n+                Nonce = userOperation.Nonce.Value,\n+                CallData = userOperation.CallData,\n+                AccountGasLimits = accountGasLimits,\n+                InitCode = userOperation.InitCode,\n+                PreVerificationGas = userOperation.PreVerificationGas.Value,\n+                GasFees = gasFees,\n+                PaymasterAndData = paymasterAndData,\n+            };\n+        }\n+\n+        public static byte[] PackAccountGasLimits(BigInteger verificationGasLimit, BigInteger callGasLimit)\n+        {\n+           var verificationBytes = ByteUtil.PadBytesLeft(verificationGasLimit.ToBytesForRLPEncoding(), 16);\n+           var callBytes = ByteUtil.PadBytesLeft(callGasLimit.ToBytesForRLPEncoding(), 16);\n+           return ByteUtil.Merge(verificationBytes, callBytes);\n+        }\n+\n+        public static byte[] HashUserOperation(PackedUserOperation userOperation, string entryPointAddress, BigInteger chainId)\n+        {\n+            var domain = new ERC4337Domain(entryPointAddress, chainId);\n+            var typedData = CreateUserOperationTypeData(domain);\n+            var packedUserOperation = new PackedUserOperationForHash\n+            {\n+                Sender = userOperation.Sender,\n+                Nonce = userOperation.Nonce,\n+                InitCode = userOperation.InitCode,\n+                CallData = userOperation.CallData,\n+                AccountGasLimits = userOperation.AccountGasLimits,\n+                PreVerificationGas = userOperation.PreVerificationGas,\n+                GasFees = userOperation.GasFees,\n+                PaymasterAndData = userOperation.PaymasterAndData\n+            };\n+\n+            var typedDataEncoder = new Eip712TypedDataEncoder();\n+            var encoded = typedDataEncoder.EncodeTypedData(packedUserOperation, typedData);\n+            return encoded;\n+\n+        }\n+\n+        public static byte[] PackPaymasterData(string paymaster, BigInteger paymasterVerificationGasLimit, BigInteger postOpGasLimit, byte[] paymasterData)\n+        {\n+            return ByteUtil.Merge(\n+                new AddressType().Encode(paymaster),\n+                ByteUtil.PadBytesLeft(paymasterVerificationGasLimit.ToBytesForRLPEncoding(), 16),\n+                ByteUtil.PadBytesLeft(postOpGasLimit.ToBytesForRLPEncoding(), 16),\n+                paymasterData\n+            );\n+        }\n+\n+        public static byte[] PackAndHashEIP712UserOperation(UserOperation userOperation, string entryPointAddress, BigInteger chainId)\n+        {\n+            return PackAndHashEIP712UserOperation(userOperation, new ERC4337Domain(entryPointAddress, chainId));\n+        }\n+\n+        public static PackedUserOperation PackAndSignEIP712UserOperation(UserOperation userOperation, string entryPointAddress, BigInteger chainId, EthECKey signer)\n+        {\n+            var typedDataSigner = new Eip712TypedDataSigner();\n+            var packedUserOperation = PackUserOperationForHash(userOperation);\n+            var domain = new ERC4337Domain(entryPointAddress, chainId);\n+            var typedData = CreateUserOperationTypeData(domain);\n+\n+            var signature = typedDataSigner.SignTypedDataV4(packedUserOperation, typedData, signer);\n+\n+            var packedUserOperationWithSignature = new PackedUserOperation\n+            {\n+                Sender = packedUserOperation.Sender,\n+                Nonce = packedUserOperation.Nonce,\n+                InitCode = packedUserOperation.InitCode,\n+                CallData = packedUserOperation.CallData,\n+                AccountGasLimits = packedUserOperation.AccountGasLimits,\n+                PreVerificationGas = packedUserOperation.PreVerificationGas,\n+                GasFees = packedUserOperation.GasFees,\n+                PaymasterAndData = packedUserOperation.PaymasterAndData,\n+                Signature = signature.HexToByteArray()\n+            };\n+            return packedUserOperationWithSignature;\n+        }\n+\n+        public static byte[] PackAndHashEIP712UserOperation(UserOperation userOperation, ERC4337Domain domain)\n+        {\n+            var typedDataEncoder = new Eip712TypedDataEncoder();\n+            var packedUserOperation = PackUserOperationForHash(userOperation);\n+            var typedData = CreateUserOperationTypeData(domain);\n+            var encoded = typedDataEncoder.EncodeAndHashTypedData(packedUserOperation, typedData);\n+            return encoded;\n+        }\n+\n+        public static byte[] PackAndEncodeEip712UserOperation(UserOperation userOperation, string entryPointAddress, BigInteger chainId)\n+        {\n+            var packedUserOperation = PackUserOperationForHash(userOperation);\n+            var domain = new ERC4337Domain(entryPointAddress, chainId);\n+            var typedData = CreateUserOperationTypeData(domain);\n+            var typedDataEncoder = new Eip712TypedDataEncoder();\n+            var encoded = typedDataEncoder.EncodeTypedData(packedUserOperation, typedData);\n+            return encoded;\n+        }\n+\n+        public static byte[] PackAndEncodeUserOperationStruct(UserOperation userOperation)\n+        {\n+            var packedUserOperation = PackUserOperationForHash(userOperation);\n+            var typedDataEncoder = new Eip712TypedDataEncoder();\n+            return typedDataEncoder.EncodeStruct(packedUserOperation, \"PackedUserOperation\", typeof(PackedUserOperationForHash));\n+        }\n+\n+        public static TypedData<ERC4337Domain> CreateUserOperationTypeData(ERC4337Domain eRC4337Domain)\n+        {\n+            var typedData = new TypedData<ERC4337Domain>();\n+            typedData.Domain = eRC4337Domain;\n+            typedData.PrimaryType = typeof(PackedUserOperation).Name;\n+            typedData.Types = MemberDescriptionFactory.GetTypesMemberDescription(new[] { typeof(ERC4337Domain), typeof(PackedUserOperationForHash) });\n+            return typedData;\n+        }\n+\n+    }\n+}"},{"sha":"bb5090f1ad1161e6d4992dcf64c6c0ac40f8ac6b","filename":"src/Nethereum.Accounts/AccountOfflineTransactionSigner.cs","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FAccountOfflineTransactionSigner.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FAccountOfflineTransactionSigner.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FAccountOfflineTransactionSigner.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -14,17 +14,21 @@ public class AccountOfflineTransactionSigner\n     {\n         private readonly LegacyTransactionSigner _legacyTransactionSigner;\n         private readonly Transaction1559Signer _transaction1559Signer;\n+        private readonly Transaction7702Signer _transaction7702Signer;\n \n-        public AccountOfflineTransactionSigner(LegacyTransactionSigner legacyTransactionSigner, Transaction1559Signer transaction1559Signer)\n+        public AccountOfflineTransactionSigner(LegacyTransactionSigner legacyTransactionSigner, Transaction1559Signer transaction1559Signer, Transaction7702Signer transaction7702Signer)\n         {\n             _legacyTransactionSigner = legacyTransactionSigner;\n             _transaction1559Signer = transaction1559Signer;\n+            _transaction7702Signer = transaction7702Signer;\n+\n         }\n \n         public AccountOfflineTransactionSigner()\n         {\n             _legacyTransactionSigner = new LegacyTransactionSigner();\n             _transaction1559Signer = new Transaction1559Signer();\n+            _transaction7702Signer = new Transaction7702Signer();\n         }\n \n         public string SignTransaction(Account account, TransactionInput transaction, BigInteger? overridingAccountChainId = null)\n@@ -61,6 +65,18 @@ public string SignTransaction(Account account, TransactionInput transaction, Big\n                 _transaction1559Signer.SignTransaction(new EthECKey(account.PrivateKey), transaction1559);\n                 signedTransaction = transaction1559.GetRLPEncoded().ToHex();\n             }\n+            else if (transaction.Type != null && transaction.Type.Value == TransactionType.EIP7702.AsByte())\n+            {\n+                var maxPriorityFeePerGas = transaction.MaxPriorityFeePerGas.Value;\n+                var maxFeePerGas = transaction.MaxFeePerGas.Value;\n+                if (chainId == null) throw new ArgumentException(\"ChainId required for TransactionType 0X04 EIP7702\");\n+\n+                var transaction7702 = new Transaction7702(chainId.Value, nonce, maxPriorityFeePerGas, maxFeePerGas,\n+                    gasLimit, transaction.To, value, transaction.Data,\n+                    transaction.AccessList.ToSignerAccessListItemArray(), transaction.AuthorisationList.ToAuthorisation7720SignedList());\n+                _transaction7702Signer.SignTransaction(new EthECKey(account.PrivateKey), transaction7702);\n+                signedTransaction = transaction7702.GetRLPEncoded().ToHex();\n+            }\n             else\n             {\n                 var gasPrice = transaction.GasPrice;"},{"sha":"75ae82d19d160771fe11f9159075f7f3f9ef3aec","filename":"src/Nethereum.Accounts/AccountSignerTransactionManager.cs","status":"modified","additions":60,"deletions":1,"changes":61,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FAccountSignerTransactionManager.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FAccountSignerTransactionManager.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FAccountSignerTransactionManager.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -11,12 +11,15 @@\n using Nethereum.RPC.TransactionManagers;\n using Nethereum.Signer;\n using Nethereum.Util;\n+using Nethereum.RPC.Eth.Mappers;\n+using System.Collections.Generic;\n \n namespace Nethereum.Web3.Accounts\n {\n     public class AccountSignerTransactionManager : TransactionManagerBase\n     {\n         private readonly AccountOfflineTransactionSigner _transactionSigner;\n+        private readonly Authorisation7702Signer _authorisation7702Signer;\n \n \n         public AccountSignerTransactionManager(IClient rpcClient, Account account, BigInteger? overridingAccountChainId = null)\n@@ -33,6 +36,7 @@ public AccountSignerTransactionManager(IClient rpcClient, Account account, BigIn\n             Account = account ?? throw new ArgumentNullException(nameof(account));\n             Client = rpcClient;\n             _transactionSigner = new AccountOfflineTransactionSigner();\n+            _authorisation7702Signer = new Authorisation7702Signer();\n         }\n \n \n@@ -44,6 +48,7 @@ public AccountSignerTransactionManager(IClient rpcClient, string privateKey, Big\n             Account = new Account(privateKey, chainId);\n             Account.NonceService = new InMemoryNonceService(Account.Address, rpcClient);\n             _transactionSigner = new AccountOfflineTransactionSigner();\n+            _authorisation7702Signer = new Authorisation7702Signer();\n         }\n \n         public AccountSignerTransactionManager(string privateKey, BigInteger? chainId = null) : this(null, privateKey,\n@@ -86,6 +91,35 @@ protected async Task<string> SignTransactionRetrievingNextNonceAsync(Transaction\n             var nonce = await GetNonceAsync(transaction).ConfigureAwait(false);\n             transaction.Nonce = nonce;\n \n+            //authorisations happen after nonce is retrieved and set\n+\n+            if (NextRequest7022Authorisations != null && NextRequest7022Authorisations.Count > 0)\n+            {\n+                if(transaction.AuthorisationList == null)\n+                {\n+                    transaction.AuthorisationList = new List<Authorisation>();\n+                }\n+                transaction.AuthorisationList.AddRange(NextRequest7022Authorisations);\n+                NextRequest7022Authorisations.Clear();\n+            }\n+\n+            if (transaction.AuthorisationList != null)\n+            {\n+                var newAuthorisationList = new List<Authorisation>();\n+                foreach (var authorisation in transaction.AuthorisationList)\n+                {\n+                    if (authorisation.Nonce == null && authorisation.YParity == null) // not signed already\n+                    {\n+                        newAuthorisationList.Add(await SignAuthorisationAsync(authorisation).ConfigureAwait(false));\n+                    }\n+                    else\n+                    {\n+                        newAuthorisationList.Add(authorisation);\n+                    }\n+                }\n+\n+                transaction.AuthorisationList = newAuthorisationList;\n+            }\n             await SetTransactionFeesOrPricingAsync(transaction).ConfigureAwait(false);\n \n             return SignTransaction(transaction);\n@@ -112,11 +146,36 @@ private async Task<string> SignAndSendTransactionAsync(TransactionInput transact\n             if (Client == null) throw new NullReferenceException(\"Client not configured\");\n             if (transaction == null) throw new ArgumentNullException(nameof(transaction));\n             if (!transaction.From.IsTheSameAddress(Account.Address))\n-                throw new Exception(\"Invalid account used signing\");\n+                throw new Exception(\"Invalid account used for signing, From Address does not match the account address, please ensure that is the same address\");\n \n             var ethSendTransaction = new EthSendRawTransaction(Client);\n             var signedTransaction = await SignTransactionRetrievingNextNonceAsync(transaction).ConfigureAwait(false);\n             return await ethSendTransaction.SendRequestAsync(signedTransaction.EnsureHexPrefix()).ConfigureAwait(false);\n         }\n+\n+      \n+        public override async Task<Authorisation> SignAuthorisationAsync(Authorisation authorisation)\n+        {\n+            if (authorisation == null) throw new ArgumentNullException(nameof(authorisation));\n+            if (authorisation.ChainId == null)\n+            {\n+                await EnsureChainIdAndChainFeatureIsSetAsync();\n+                authorisation.ChainId = new HexBigInteger(ChainId.Value);\n+            } \n+            if (authorisation.Address == null) throw new ArgumentNullException(nameof(authorisation.Address));\n+            if (authorisation.Nonce == null)\n+            {\n+                authorisation.Nonce = await GetNonceAsync(new TransactionInput()).ConfigureAwait(false);\n+            }\n+            var authorisation7702 = new Authorisation7702\n+            {\n+                Address = authorisation.Address,\n+                ChainId = authorisation.ChainId.Value,\n+                Nonce = authorisation.Nonce.Value,\n+            };\n+\n+            var authorisationSigned = _authorisation7702Signer.SignAuthorisation(((Account)Account).PrivateKey, authorisation7702);\n+            return authorisationSigned.ToRPCAuthorisation();\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"b42d6d98735bac7ce52e5c80e8e6a2ae4ce1fb1a","filename":"src/Nethereum.Accounts/Basic/BasicAccountTransactionManager.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FBasic%2FBasicAccountTransactionManager.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FBasic%2FBasicAccountTransactionManager.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FBasic%2FBasicAccountTransactionManager.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -83,5 +83,10 @@ public override Task<string> SignTransactionAsync(TransactionInput transaction)\n         {\n             throw new InvalidOperationException(\"Basic accounts cannot sign offline transactions\");\n         }\n+\n+        public override Task<Authorisation> SignAuthorisationAsync(Authorisation authorisation)\n+        {\n+            throw new InvalidOperationException(\"Basic accounts cannot sign authorisations\");\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"b6a23af7c9ef7bc0e66564d3dabc1cba9ac7bc87","filename":"src/Nethereum.Accounts/EIP7022SponsorAuthorisationService.cs","status":"added","additions":148,"deletions":0,"changes":148,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FEIP7022SponsorAuthorisationService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FEIP7022SponsorAuthorisationService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FEIP7022SponsorAuthorisationService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,148 @@\n+﻿using Nethereum.Hex.HexTypes;\n+using Nethereum.Model;\n+using Nethereum.RPC;\n+using Nethereum.RPC.Eth;\n+using Nethereum.RPC.Eth.DTOs;\n+using Nethereum.RPC.Eth.Mappers;\n+using Nethereum.RPC.Eth.Transactions;\n+using Nethereum.RPC.TransactionManagers;\n+using Nethereum.Signer;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+using System.Text;\n+using System.Threading.Tasks;\n+\n+namespace Nethereum.Accounts\n+{\n+    public class EIP7022SponsorAuthorisationService\n+    {\n+        private const int DefaultTopUpGas = 1000;\n+        private readonly Authorisation7702Signer _authorisation7702Signer;\n+        private readonly ITransactionManager transactionManager;\n+        private readonly IEthApiService ethApiService;\n+\n+        public BigInteger? ChainId { get; protected set; }\n+\n+        public EIP7022SponsorAuthorisationService(ITransactionManager transactionManager, IEthApiService ethApiService)\n+        {\n+           \n+            ChainId = transactionManager.ChainId;\n+            _authorisation7702Signer = new Authorisation7702Signer();\n+            this.transactionManager = transactionManager;\n+            this.ethApiService = ethApiService;\n+        }\n+\n+        private TransactionInput CreateDefaultTransactionInputToAuthoriseMultipleAddresses(int topUpGas = DefaultTopUpGas)\n+        {\n+            return new TransactionInput()\n+            {\n+                From = transactionManager.Account.Address,\n+                Gas =\n+                new HexBigInteger(transactionManager.DefaultGas + topUpGas), //the rest is handled by the transaction manager\n+                To = transactionManager.Account.Address,\n+                Value = new HexBigInteger(0),\n+                Data = \"0x\"\n+            };\n+        }\n+\n+       \n+\n+        protected async Task EnsureChainIdAndChainFeatureIsSetAsync()\n+        {\n+            if (ChainId == null)\n+            {\n+                var ethGetChainId = new EthChainId(ethApiService.Client);\n+                try\n+                {\n+                    ChainId = await ethGetChainId.SendRequestAsync().ConfigureAwait(false);\n+                }\n+                catch\n+                {\n+                    ChainId = -1;\n+                }\n+\n+            }\n+        }\n+\n+        private async Task<BigInteger> GetNonceAsync(string address)\n+        {\n+            var ethGetTransactionCount = new EthGetTransactionCount(ethApiService.Client);\n+            var nonce = await ethGetTransactionCount.SendRequestAsync(address, BlockParameter.CreatePending()).ConfigureAwait(false);\n+            return nonce;\n+        }\n+\n+        public async Task<Authorisation> SignSponsoredAuthorisationAsync(EthECKey privateKeySponsoredAccount, string contractAddress, bool useUniversalZeroChainId = false, bool brandNewAccount = false)\n+        {\n+            await EnsureChainIdAndChainFeatureIsSetAsync();\n+\n+            var address = privateKeySponsoredAccount.GetPublicAddress();\n+            BigInteger nonce = 0;\n+            if (!brandNewAccount)\n+            {\n+                nonce = await GetNonceAsync(address).ConfigureAwait(false);\n+            }\n+\n+            var authorisation = new Authorisation7702\n+            {\n+                Address = contractAddress,\n+                ChainId = useUniversalZeroChainId ? new HexBigInteger(0) : new HexBigInteger(ChainId.Value),\n+                Nonce = nonce,\n+            };\n+\n+            var authorisationSigned = _authorisation7702Signer.SignAuthorisation(privateKeySponsoredAccount, authorisation);\n+            return authorisationSigned.ToRPCAuthorisation();\n+        }\n+\n+        public async Task<string> AuthoriseSponsoredRequestAsync(EthECKey privateKeySponsoredAccount, string contractAddress, int topUpGas = DefaultTopUpGas, bool useUniversalZeroChainId = false, bool brandNewAccount = false)\n+        {\n+            TransactionInput transactionInput = await SignAndCreateAuthoriseSponsoredTransactionInput(privateKeySponsoredAccount, contractAddress, topUpGas, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+            var transactionHash = await transactionManager.SendTransactionAsync(transactionInput).ConfigureAwait(false);\n+            return transactionHash;\n+        }\n+\n+        public async Task<TransactionInput> SignAndCreateAuthoriseSponsoredTransactionInput(EthECKey privateKeySponsoredAccount, string contractAddress, int topUpGas, bool useUniversalZeroChainId, bool brandNewAccount)\n+        {\n+            var authorisation = await SignSponsoredAuthorisationAsync(privateKeySponsoredAccount, contractAddress, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+            var transactionInput = CreateDefaultTransactionInputToAuthoriseMultipleAddresses(topUpGas);\n+            transactionInput.AuthorisationList.Add(authorisation);\n+            return transactionInput;\n+        }\n+\n+        public async Task<TransactionReceipt> AuthoriseBatchSponsoredRequestAndWaitForReceiptAsync(EthECKey[] privateKeySponsoredAccounts, string contractAddress, int topUpGas = DefaultTopUpGas, bool useUniversalZeroChainId = false, bool brandNewAccount = false)\n+        {\n+            TransactionInput transactionInput = await SignAndCreateAuthoriseBatchSponsoredTransactionInput(privateKeySponsoredAccounts, contractAddress, topUpGas, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+            var transactionHash = await transactionManager.SendTransactionAndWaitForReceiptAsync(transactionInput).ConfigureAwait(false);\n+            return transactionHash;\n+        }\n+\n+        public async Task<string> AuthoriseBatchSponsoredRequestAsync(EthECKey[] privateKeySponsoredAccounts, string contractAddress, int topUpGas = DefaultTopUpGas, bool useUniversalZeroChainId = false, bool brandNewAccount = false)\n+        {\n+            TransactionInput transactionInput = await SignAndCreateAuthoriseBatchSponsoredTransactionInput(privateKeySponsoredAccounts, contractAddress, topUpGas, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+            var transactionHash = await transactionManager.SendTransactionAsync(transactionInput).ConfigureAwait(false);\n+            return transactionHash;\n+        }\n+\n+        private async Task<TransactionInput> SignAndCreateAuthoriseBatchSponsoredTransactionInput(EthECKey[] privateKeySponsoredAccounts, string contractAddress, int topUpGas, bool useUniversalZeroChainId, bool brandNewAccount)\n+        {\n+            var authorisations = new List<Authorisation>();\n+            foreach (var signer in privateKeySponsoredAccounts)\n+            {\n+                var authorisation = await SignSponsoredAuthorisationAsync(signer, contractAddress, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+                authorisations.Add(authorisation);\n+            }\n+\n+            var transactionInput = CreateDefaultTransactionInputToAuthoriseMultipleAddresses(topUpGas);\n+            transactionInput.AuthorisationList = authorisations;\n+            return transactionInput;\n+        }\n+\n+        public async Task<TransactionReceipt> AuthoriseSponsoredRequestAndWaitForReceiptAsync(EthECKey privateKeySponsoredAccount, string contractAddress, int topUpGas = DefaultTopUpGas, bool useUniversalZeroChainId = false, bool brandNewAccount = false)\n+        {\n+            var transactionInput = await SignAndCreateAuthoriseSponsoredTransactionInput(privateKeySponsoredAccount, contractAddress, topUpGas, useUniversalZeroChainId, brandNewAccount).ConfigureAwait(false);\n+            return await transactionManager.SendTransactionAndWaitForReceiptAsync(transactionInput).ConfigureAwait(false);\n+        }\n+\n+    }\n+}"},{"sha":"d9b79b2c3bafec0344325868a3d5ad072abb895a","filename":"src/Nethereum.Accounts/External/ExternalAccountSignerTransactionManager.cs","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FExternal%2FExternalAccountSignerTransactionManager.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FExternal%2FExternalAccountSignerTransactionManager.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FExternal%2FExternalAccountSignerTransactionManager.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -19,6 +19,7 @@ public class ExternalAccountSignerTransactionManager : TransactionManagerBase\n     {\n         private readonly LegacyTransactionSigner _legacyTransactionSigner;\n         private readonly Transaction1559Signer _transaction1559Signer;\n+        private readonly Transaction7702Signer _transaction7702Signer;\n         public ExternalAccountSignerTransactionManager(IClient rpcClient, ExternalAccount account,\n             BigInteger? chainId = null)\n         {\n@@ -27,9 +28,12 @@ public ExternalAccountSignerTransactionManager(IClient rpcClient, ExternalAccoun\n             Client = rpcClient;\n             _legacyTransactionSigner = new LegacyTransactionSigner();\n             _transaction1559Signer = new Transaction1559Signer();\n+            _transaction7702Signer = new Transaction7702Signer();\n+\n             TransactionVerificationAndRecovery = new TransactionVerificationAndRecoveryImp();\n         }\n \n+   \n \n         public override BigInteger DefaultGas { get; set; } = SignedLegacyTransaction.DEFAULT_GAS_LIMIT;\n \n@@ -78,6 +82,18 @@ public async Task<string> SignTransactionExternallyAsync(TransactionInput transa\n                     transaction.AccessList.ToSignerAccessListItemArray());\n                 await _transaction1559Signer.SignExternallyAsync(externalSigner, transaction1559).ConfigureAwait(false);\n                 signedTransaction = transaction1559.GetRLPEncoded().ToHex();\n+            }else if (externalSigner.Supported1559 && transaction.Type != null &&\n+                transaction.Type.Value == TransactionType.EIP7702.AsByte())\n+            {\n+                var maxPriorityFeePerGas = transaction.MaxPriorityFeePerGas.Value;\n+                var maxFeePerGas = transaction.MaxFeePerGas.Value;\n+                var transaction7702 = new Transaction7702(ChainId.Value, nonce, maxPriorityFeePerGas, maxFeePerGas,\n+                    gasLimit, transaction.To, value, transaction.Data,\n+                    transaction.AccessList.ToSignerAccessListItemArray(),\n+                    transaction.AuthorisationList.ToAuthorisation7720SignedList());\n+\n+                await _transaction7702Signer.SignExternallyAsync(externalSigner, transaction7702).ConfigureAwait(false);\n+                signedTransaction = transaction7702.GetRLPEncoded().ToHex();\n             }\n             else\n             {\n@@ -151,5 +167,10 @@ private async Task<string> SignAndSendTransactionAsync(TransactionInput transact\n             var signedTransaction = await SignTransactionRetrievingNextNonceAsync(transaction).ConfigureAwait(false);\n             return await ethSendTransaction.SendRequestAsync(signedTransaction.EnsureHexPrefix()).ConfigureAwait(false);\n         }\n+\n+        public override Task<Authorisation> SignAuthorisationAsync(Authorisation authorisation)\n+        {\n+            throw new NotImplementedException(\"Authorisation signing not implemented yet for external accounts\");\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"bda6744724ead66c3a305c50ba0d3d45ecf849ac","filename":"src/Nethereum.Accounts/Managed/ManagedAccountTransactionManager.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FManaged%2FManagedAccountTransactionManager.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Accounts%2FManaged%2FManagedAccountTransactionManager.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Accounts%2FManaged%2FManagedAccountTransactionManager.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -83,5 +83,10 @@ public override Task<string> SignTransactionAsync(TransactionInput transaction)\n         {\n             throw new InvalidOperationException(\"Managed accounts cannot sign offline transactions\");\n         }\n+\n+        public override Task<Authorisation> SignAuthorisationAsync(Authorisation authorisation)\n+        {\n+            throw new InvalidOperationException(\"Managed accounts cannot sign authorisations\");\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"79be8716fed1c3377f3badea5f660feea12fbbdd","filename":"src/Nethereum.BlockchainProcessing/BlockStorage/Entities/Mapping/TransactionMapping.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.BlockchainProcessing%2FBlockStorage%2FEntities%2FMapping%2FTransactionMapping.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.BlockchainProcessing%2FBlockStorage%2FEntities%2FMapping%2FTransactionMapping.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.BlockchainProcessing%2FBlockStorage%2FEntities%2FMapping%2FTransactionMapping.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,7 +9,7 @@ public static void Map(this TransactionBase to, TransactionReceipt @from)\n             to.TransactionIndex = @from.TransactionIndex.Value.ToString();\n             to.GasUsed = @from.GasUsed?.Value.ToString();\n             to.CumulativeGasUsed = @from.CumulativeGasUsed?.Value.ToString();\n-            to.HasLog = @from.Logs?.Count > 0;\n+            to.HasLog = from.HasLogs();\n         }\n \n         public static void Map(this TransactionBase to, Nethereum.RPC.Eth.DTOs.Transaction @from)"},{"sha":"405b03d86ab7c197a2baa1209d2e285de8a059a4","filename":"src/Nethereum.Contracts/CQS/ContractMessageBase.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FCQS%2FContractMessageBase.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FCQS%2FContractMessageBase.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FCQS%2FContractMessageBase.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -58,5 +58,10 @@ public abstract class ContractMessageBase\n         ///   Access list. Introduced in EIP 1559\n         /// </summary>\n         public List<AccessList> AccessList { get; set; }\n+\n+        /// <summary>\n+        ///  AuthorisationList. Introduced in EIP 7022\n+        /// </summary>\n+        public List<Authorisation> AuthorisationList { get; set; }\n     }\n }\n\\ No newline at end of file"},{"sha":"cca55e1d344583693c5bc3ffd1ceea8032224b9f","filename":"src/Nethereum.Contracts/ContractRevertExceptionHandler.cs","status":"modified","additions":4,"deletions":39,"changes":43,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FContractRevertExceptionHandler.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FContractRevertExceptionHandler.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FContractRevertExceptionHandler.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -2,54 +2,19 @@\n using Nethereum.ABI.FunctionEncoding;\n using Nethereum.Hex.HexConvertors.Extensions;\n using Nethereum.JsonRpc.Client;\n-using Nethereum.RPC.Eth.Transactions;\n-using Newtonsoft.Json.Linq;\n \n namespace Nethereum.Contracts\n {\n     public class ContractRevertExceptionHandler\n     {\n         public static void HandleContractRevertException(RpcResponseException rpcException)\n         {\n-            if (rpcException.RpcError.Data != null)\n-            {\n-                var encodedErrorData = rpcException.RpcError.Data.ToString();\n-                if (encodedErrorData.IsHex())\n-                {\n-                    //check normal revert\n-                    new FunctionCallDecoder().ThrowIfErrorOnOutput(encodedErrorData);\n+            var encodedErrorData = rpcException.RpcError.GetDataAsString();\n+            if (!encodedErrorData.IsHex()) return;\n \n-                    //throw custom error\n-                    throw new SmartContractCustomErrorRevertException(encodedErrorData);\n-                }\n+            new FunctionCallDecoder().ThrowIfErrorOnOutput(encodedErrorData);\n \n-                if (rpcException.RpcError.Data[\"result\"] != null)\n-                {\n-                     encodedErrorData = rpcException.RpcError.Data[\"result\"].ToString();\n-                    if (encodedErrorData.IsHex())\n-                    {\n-                        //check normal revert\n-                        new FunctionCallDecoder().ThrowIfErrorOnOutput(encodedErrorData);\n-\n-                        //throw custom error\n-                        throw new SmartContractCustomErrorRevertException(encodedErrorData);\n-                    }\n-                }\n-\n-                if (rpcException.RpcError.Data[\"data\"] != null)\n-                {\n-                    encodedErrorData = rpcException.RpcError.Data[\"data\"].ToString();\n-                    if (encodedErrorData.IsHex())\n-                    {\n-                        //check normal revert\n-                        new FunctionCallDecoder().ThrowIfErrorOnOutput(encodedErrorData);\n-\n-                        //throw custom error\n-                        throw new SmartContractCustomErrorRevertException(encodedErrorData);\n-                    }\n-                }\n-\n-            }\n+            throw new SmartContractCustomErrorRevertException(encodedErrorData);\n         }\n \n        "},{"sha":"49cae1b33234a11062270375896890b39f8820e9","filename":"src/Nethereum.Contracts/Extensions/ErrorExtensions.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FErrorExtensions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FErrorExtensions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FExtensions%2FErrorExtensions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -114,7 +114,7 @@ public static JObject FindAndDecodeExceptionDataToJObject(this List<ErrorABI> er\n         public static bool IsExceptionForError(this ErrorABI errorABI, RpcResponseException exception)\n         {\n             if (exception.RpcError.Data == null) return false;\n-            var encodedData = exception.RpcError.Data.ToString();\n+            var encodedData = exception.RpcError.GetDataAsString();\n             if (!encodedData.IsHex()) return false;\n             return encodedData.IsExceptionEncodedDataForError(errorABI.Sha3Signature);\n         }\n@@ -123,7 +123,7 @@ public static List<ErrorABI> FindErrorABIFromRpcResponseException(this\n          RpcResponseException exception, IABIInfoStorage abiInfoStorage)\n         {\n             if(exception.RpcError.Data == null) return null;\n-            var encodedData = exception.RpcError.Data.ToString();\n+            var encodedData = exception.RpcError.GetDataAsString();\n             if (!encodedData.IsHex()) return null;\n             var signature = SignatureEncoder.GetSignatureFromData(encodedData);\n             return abiInfoStorage.FindErrorABI(signature);"},{"sha":"4349c771789465782dee0b5c880e37bb89de1bee","filename":"src/Nethereum.Contracts/Extensions/EventExtensions.cs","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FEventExtensions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FEventExtensions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FExtensions%2FEventExtensions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -386,6 +386,17 @@ public static FilterLog[] ConvertToFilterLog(this JArray logs)\n             return JsonConvert.DeserializeObject<FilterLog[]>(logs.ToString());\n         }\n \n+        public static FilterLog ConvertToFilterLog(this FilterLog log)\n+        {\n+            return log;\n+        }\n+\n+        public static FilterLog[] ConvertToFilterLog(this FilterLog[] logs)\n+        {\n+            return logs;\n+        }\n+\n+\n         public static FilterLog[] GetLogsForEvent(this EventABI eventABI, JArray logs)\n         {\n             var returnList = new List<FilterLog>();"},{"sha":"4b2bda5c87d1e1c67f29fffb24c30ae277f15f41","filename":"src/Nethereum.Contracts/Extensions/FunctionMessageExtensions.cs","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FFunctionMessageExtensions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FExtensions%2FFunctionMessageExtensions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FExtensions%2FFunctionMessageExtensions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,5 +1,6 @@\n ﻿using Nethereum.ABI.ABIRepository;\n using Nethereum.ABI.FunctionEncoding;\n+using Nethereum.ABI.FunctionEncoding.Attributes;\n using Nethereum.ABI.Model;\n using Nethereum.Contracts.MessageEncodingServices;\n using Nethereum.RPC.Eth.DTOs;\n@@ -33,6 +34,19 @@ public static TContractMessage DecodeInput<TContractMessage>(this TContractMessa\n             return GetEncodingService<TContractMessage>(contractMessage).DecodeInput(contractMessage, data);\n         }\n \n+        public static MulticallInputOutput<TFunctionMessage, TFunctionOutput> CreateMulticallInputOutput<TFunctionMessage, TFunctionOutput>(this TFunctionMessage functionMessage, string contractAddress)\n+          where TFunctionMessage : FunctionMessage, new()\n+          where TFunctionOutput : IFunctionOutputDTO, new()\n+        {\n+            return new MulticallInputOutput<TFunctionMessage, TFunctionOutput>(functionMessage, contractAddress);\n+        }\n+\n+        public static MulticallInput<TFunctionMessage>  CreateMulticallInput<TFunctionMessage>(this TFunctionMessage functionMessage, string contractAddress)\n+          where TFunctionMessage : FunctionMessage, new()\n+        {\n+            return new MulticallInput<TFunctionMessage>(functionMessage, contractAddress);\n+        }\n+\n         public static bool IsTransactionForFunctionMessage<TContractMessage>(this\n             Transaction transaction) where TContractMessage : FunctionMessage, new()\n         {"},{"sha":"ddfa66ecced460f3cc04af49290cd1e3c6b5a7a2","filename":"src/Nethereum.Contracts/MessageEncodingServices/DeploymentMessageEncodingService.cs","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMessageEncodingServices%2FDeploymentMessageEncodingService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMessageEncodingServices%2FDeploymentMessageEncodingService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FMessageEncodingServices%2FDeploymentMessageEncodingService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -36,6 +36,7 @@ public TransactionInput CreateTransactionInput(TContractDeployment contractMessa\n             transactionInput.MaxFeePerGas = contractMessage.GetHexMaxFeePerGas();\n             transactionInput.MaxPriorityFeePerGas = contractMessage.GetMaxPriorityFeePerGas();\n             transactionInput.AccessList = contractMessage.AccessList;\n+            transactionInput.AuthorisationList = contractMessage.AuthorisationList;\n             transactionInput.Nonce = contractMessage.GetHexNonce();\n \n             return transactionInput;\n@@ -72,6 +73,7 @@ public CallInput CreateCallInput(TContractDeployment contractMessage)\n             transactionInput.MaxFeePerGas = contractMessage.GetHexMaxFeePerGas();\n             transactionInput.MaxPriorityFeePerGas = contractMessage.GetMaxPriorityFeePerGas();\n             transactionInput.AccessList = contractMessage.AccessList;\n+            transactionInput.AuthorisationList = contractMessage.AuthorisationList;\n             transactionInput.Nonce = contractMessage.GetHexNonce();\n \n             return transactionInput;\n@@ -114,6 +116,7 @@ public TContractDeployment DecodeTransaction(TContractDeployment contractMessage\n             }\n \n             contractMessageOutput.AccessList = transactionInput.AccessList;\n+            contractMessageOutput.AuthorisationList = transactionInput.AuthorisationList;\n \n             return contractMessageOutput;\n         }"},{"sha":"03204cfb75852c59d12597ddce6a70cb1682a75d","filename":"src/Nethereum.Contracts/MessageEncodingServices/FunctionMessageEncodingService.cs","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMessageEncodingServices%2FFunctionMessageEncodingService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMessageEncodingServices%2FFunctionMessageEncodingService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FMessageEncodingServices%2FFunctionMessageEncodingService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -53,7 +53,8 @@ public TransactionInput CreateTransactionInput(TContractFunction contractMessage\n             transactionInput.Type = contractMessage.GetHexTransactionType();\n             transactionInput.MaxFeePerGas = contractMessage.GetHexMaxFeePerGas();\n             transactionInput.MaxPriorityFeePerGas = contractMessage.GetMaxPriorityFeePerGas();\n-            transactionInput.AccessList = contractMessage.AccessList;   \n+            transactionInput.AccessList = contractMessage.AccessList;\n+            transactionInput.AuthorisationList = contractMessage.AuthorisationList;\n             transactionInput.Nonce = contractMessage.GetHexNonce();\n             return transactionInput;\n         }\n@@ -88,8 +89,9 @@ public TContractFunction DecodeTransactionInput(TContractFunction contractMessag\n             }\n \n             contractMessageOutput.AccessList = transaction.AccessList;\n-            \n-                 \n+            contractMessageOutput.AuthorisationList = transaction.AuthorisationList;\n+\n+\n             return contractMessageOutput;\n         }\n "},{"sha":"18ac8b8b2760695cc0ec143648bb47097c170101","filename":"src/Nethereum.Contracts/MulticallInputOutputRpcBatchItem.cs","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMulticallInputOutputRpcBatchItem.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FMulticallInputOutputRpcBatchItem.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FMulticallInputOutputRpcBatchItem.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,37 @@\n+﻿using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.JsonRpc.Client;\n+using Nethereum.JsonRpc.Client.RpcMessages;\n+using Nethereum.RPC.Eth.Transactions;\n+\n+namespace Nethereum.Contracts\n+{\n+    public class MulticallInputOutputRpcBatchItem: IRpcRequestResponseBatchItem\n+        \n+    {\n+        public int RpcObjectId { get; protected set; }\n+        public IMulticallInputOutput MulticallInputOutput { get; protected set; }\n+        public RpcRequestResponseBatchItem<EthCall, string> RpcRequestResponseBatchItem { get; protected set; }\n+\n+        public bool HasError => ((IRpcRequestResponseBatchItem)RpcRequestResponseBatchItem).HasError;\n+\n+        public object RawResponse => ((IRpcRequestResponseBatchItem)RpcRequestResponseBatchItem).RawResponse;\n+\n+        public JsonRpc.Client.RpcError RpcError => ((IRpcRequestResponseBatchItem)RpcRequestResponseBatchItem).RpcError;\n+\n+        public RpcRequestMessage RpcRequestMessage => ((IRpcRequestResponseBatchItem)RpcRequestResponseBatchItem).RpcRequestMessage;\n+\n+\n+        public MulticallInputOutputRpcBatchItem(IMulticallInputOutput multicallInputOutput, RpcRequestResponseBatchItem<EthCall, string> rpcRequestResponseBatchItem, int rpcObjectId)   \n+        {\n+           MulticallInputOutput = multicallInputOutput;\n+           RpcRequestResponseBatchItem = rpcRequestResponseBatchItem;\n+           RpcObjectId = rpcObjectId;\n+        }\n+\n+        public void DecodeResponse(RpcResponseMessage rpcResponse)\n+        {\n+            ((IRpcRequestResponseBatchItem)RpcRequestResponseBatchItem).DecodeResponse(rpcResponse);\n+            MulticallInputOutput.Decode(RpcRequestResponseBatchItem.Response.HexToByteArray());\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"cda7eabe74d025c7f7944622ad73303274d79318","filename":"src/Nethereum.Contracts/QueryHandlers/MultiCall/MultiQueryBatchRpcHandler.cs","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FQueryHandlers%2FMultiCall%2FMultiQueryBatchRpcHandler.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Contracts%2FQueryHandlers%2FMultiCall%2FMultiQueryBatchRpcHandler.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Contracts%2FQueryHandlers%2FMultiCall%2FMultiQueryBatchRpcHandler.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -41,6 +41,36 @@ public Task<IMulticallInputOutput[]> MultiCallAsync(int pageSize = DEFAULT_CALLS\n             return MultiCallAsync(null, pageSize, multiCalls);\n         }\n \n+\n+        /// <summary>\n+        /// Use this method to create a batch of calls to be executed in a single request in combination with other rpc batch requests\n+        /// </summary>\n+        /// <param name=\"rpcObjectIdStartAt\">This the rpc object id to start with</param>\n+        /// <param name=\"multiCalls\"></param>\n+        /// <returns></returns>\n+        public MulticallInputOutputRpcBatchItem[] CreateMulticallInputOutputRpcBatchItems(int rpcObjectIdStartAt = 0,\n+            params IMulticallInputOutput[] multiCalls)\n+        {\n+            var batchItems = new List<MulticallInputOutputRpcBatchItem>();\n+            for (var i = 0; i < multiCalls.Length; i++)\n+            {\n+                var callInput = new CallInput\n+                {\n+                    Data = multiCalls[i].GetCallData().ToHex(),\n+                    To = multiCalls[i].Target,\n+                    Value = new HexBigInteger(multiCalls[i].Value),\n+                    From = DefaultAddressFrom\n+                };\n+\n+                var ethCall = new EthCall(Client);\n+                var rpcRequestResponseBatchItem = ethCall.CreateBatchItem(callInput, rpcObjectIdStartAt + i);\n+\n+                batchItems.Add(new MulticallInputOutputRpcBatchItem(multiCalls[i], rpcRequestResponseBatchItem, rpcObjectIdStartAt + i));\n+            }\n+            return batchItems.ToArray();\n+        }\n+\n+\n         public async Task<IMulticallInputOutput[]> MultiCallAsync(BlockParameter block, int pageSize = DEFAULT_CALLS_PER_REQUEST,\n             params IMulticallInputOutput[] multiCalls)\n         {"},{"sha":"123415f41a5d32ce34e358063dc8e37c01d215f8","filename":"src/Nethereum.EVM.Contracts/ERC20/ERC20ContractSimulator.cs","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM.Contracts%2FERC20%2FERC20ContractSimulator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM.Contracts%2FERC20%2FERC20ContractSimulator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM.Contracts%2FERC20%2FERC20ContractSimulator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -106,7 +106,9 @@ public async Task<ProgramResult> SimulateTransferAsync(string addressSender, str\n             var programContext = new ProgramContext(callInput, executionStateService);\n             var code = await GetCodeAsync();\n             var program = new Program(code, programContext);\n+\n             var evmSimulator = new EVMSimulator();\n+     \n             await evmSimulator.ExecuteAsync(program);\n             return program.ProgramResult;\n            "},{"sha":"32283c6f94130a8255c46a9079baebb79db41260","filename":"src/Nethereum.EVM/BlockchainState/AccountExecutionBalance.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionBalance.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionBalance.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionBalance.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -15,6 +15,11 @@ public BigInteger GetTotalBalance()\n             return originalBalance + internalBalance;\n         }\n \n+        public bool IsZero()\n+        {\n+            return GetTotalBalance() == 0;\n+        }\n+\n         public void UpdateExecutionBalance(BigInteger value)\n         {\n             if (ExecutionBalance != null)"},{"sha":"1b784ff8ea4d14c113dc6579daf2712d5f5a8774","filename":"src/Nethereum.EVM/BlockchainState/AccountExecutionState.cs","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionState.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionState.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FBlockchainState%2FAccountExecutionState.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -9,6 +9,9 @@ public class AccountExecutionState\n         public string Address { get; set; }\n         public AccountExecutionBalance Balance { get; set; } = new AccountExecutionBalance();\n         public Dictionary<BigInteger, byte[]> Storage { get; set; } = new Dictionary<BigInteger, byte[]>();\n+        public Dictionary<BigInteger, byte[]> OriginalStorageValues { get; } = new();\n+        public HashSet<BigInteger> WarmStorageKeys { get; } = new();\n+\n         public BigInteger? Nonce { get; set; }\n         public byte[] Code { get; set; }\n \n@@ -17,8 +20,18 @@ public bool StorageContainsKey(BigInteger key)\n             return Storage.ContainsKey(key);\n         }\n \n+        public void TrackAndWriteStorage(BigInteger key, byte[] value)\n+        {\n+            if (!OriginalStorageValues.ContainsKey(key))\n+            {\n+                OriginalStorageValues[key] = value;\n+            }\n+            Storage[key] = value;\n+        }\n+\n         public void UpsertStorageValue(BigInteger key, byte[] value)\n         {\n+\n             if (!Storage.ContainsKey(key))\n             {\n                 Storage.Add(key, value);\n@@ -38,6 +51,10 @@ public byte[] GetStorageValue(BigInteger key)\n             return null;\n         }\n \n+        public bool IsStorageKeyWarm(BigInteger key) => WarmStorageKeys.Contains(key);\n+\n+        public void MarkStorageKeyAsWarm(BigInteger key) => WarmStorageKeys.Add(key);\n+\n         public Dictionary<string, string> GetContractStorageAsHex()\n         {\n             var storage = Storage;"},{"sha":"44eccdda3541c71a4b43c2fb10bcaa511083346e","filename":"src/Nethereum.EVM/BlockchainState/ExecutionStateService.cs","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FExecutionStateService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FBlockchainState%2FExecutionStateService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FBlockchainState%2FExecutionStateService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -19,13 +19,15 @@ public ExecutionStateService(INodeDataService nodeDataService)\n \n         public INodeDataService NodeDataService { get; set; }\n \n+\n+\n         public async Task<byte[]> GetFromStorageAsync(string address, BigInteger key)\n         {\n             var accountState = CreateOrGetAccountExecutionState(address);\n             if (!accountState.StorageContainsKey(key))\n             {\n                 var storageValue = await NodeDataService.GetStorageAtAsync(address, key);\n-                accountState.UpsertStorageValue(key, storageValue);\n+                accountState.TrackAndWriteStorage(key, storageValue);\n             }\n \n             return accountState.GetStorageValue(key);\n@@ -58,13 +60,32 @@ public async Task<BigInteger> GetNonceAsync(string address)\n             return accountState.Nonce.Value;\n         }\n \n+        public async Task<AccountExecutionState> LoadBalanceNonceAndCodeFromStorageAsync(string address)\n+        {\n+            await GetCodeAsync(address);\n+            await GetNonceAsync(address);\n+            await GetTotalBalanceAsync(address);\n+            return CreateOrGetAccountExecutionState(address);\n+        }\n+\n \n         public void SetNonce(string address, BigInteger nonce)\n         {\n             var accountState = CreateOrGetAccountExecutionState(address);\n             accountState.Nonce = nonce;\n         }\n \n+        public bool AddressIsWarm(string address)\n+        {\n+            address = AddressUtil.Current.ConvertToValid20ByteAddress(address).ToLower();\n+            return AccountsState.ContainsKey(address);\n+        }\n+\n+        public void MarkAddressAsWarm(string address)\n+        {\n+            CreateOrGetAccountExecutionState(address);\n+        }\n+\n         public AccountExecutionState CreateOrGetAccountExecutionState(string address)\n         {\n             address = AddressUtil.Current.ConvertToValid20ByteAddress(address).ToLower();"},{"sha":"a700d39ee7e19bbbfbf8f6ddb7066614ed652ce6","filename":"src/Nethereum.EVM/EVMSimulator.cs","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FEVMSimulator.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FEVMSimulator.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FEVMSimulator.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,4 +1,5 @@\n ﻿using Nethereum.EVM.Execution;\n+using Nethereum.EVM.Gas;\n using System;\n using System.Collections.Generic;\n using System.Diagnostics;\n@@ -9,7 +10,6 @@ namespace Nethereum.EVM\n     /// <summary>\n     /// EVM simulator \n     /// Experimental needs more testing\n-    /// Gas calculation not implemented (this might be a future release)\n     /// </summary>\n     public class EVMSimulator\n     {\n@@ -36,10 +36,14 @@ public async Task<Program> ExecuteAsync(Program program, int vmExecutionCounter\n             while(program.Stopped != true)\n             {\n                 var currentInstruction = program.GetCurrentInstruction();\n+                var gasCost = await OpcodeGasTable.GetGasCostAsync(currentInstruction.Instruction.Value, program);\n+                program.UpdateGasUsed(gasCost);\n                 if (traceEnabled)\n                 {\n                     \n                     var trace = ProgramTrace.CreateTraceFromCurrentProgram(program.ProgramContext.AddressContract, vmExecutionCounter, programExecutionCounter, depth, program, currentInstruction, program.ProgramContext.CodeAddress);\n+                    trace.GasCost = gasCost;\n+\n                     program.Trace.Add(trace);\n #if DEBUG\n                     if (EnableTraceToDebugOuptput)\n@@ -63,6 +67,7 @@ public async Task<List<ProgramTrace>> StepAsync(Program program, int vmExecution\n                 var instruction = program.GetCurrentInstruction();\n                 if (instruction.Instruction != null)\n                 {\n+\n                     switch (instruction.Instruction.Value)\n                     {\n                         case Instruction.STOP:\n@@ -224,6 +229,12 @@ public async Task<List<ProgramTrace>> StepAsync(Program program, int vmExecution\n                         case Instruction.BASEFEE:\n                             EvmProgramExecution.BlockchainCurrentContractContext.BaseFee(program);\n                             break;\n+                        case Instruction.BLOBBASEFEE:\n+                            EvmProgramExecution.BlockchainCurrentContractContext.BlobBaseFee(program);\n+                            break;\n+                        case Instruction.BLOBHASH:\n+                            EvmProgramExecution.BlockchainCurrentContractContext.BlobHash(program);\n+                            break;\n                         case Instruction.BLOCKHASH:\n                             await EvmProgramExecution.BlockchainCurrentContractContext.BlockHashAsync(program);\n                             break;\n@@ -335,7 +346,14 @@ public async Task<List<ProgramTrace>> StepAsync(Program program, int vmExecution\n                             await EvmProgramExecution.StorageMemory.SLoad(program);\n                             break;\n                         case Instruction.SSTORE:\n-                            EvmProgramExecution.StorageMemory.SStore(program);\n+                            await EvmProgramExecution.StorageMemory.SStore(program);\n+                            break;\n+                        case Instruction.TLOAD:\n+                            EvmProgramExecution.BlockchainCurrentContractContext.TLoad(program);\n+                            break;\n+\n+                        case Instruction.TSTORE:\n+                            EvmProgramExecution.BlockchainCurrentContractContext.TStore(program);\n                             break;\n                         //--------------------//      \n                         case Instruction.LOG0:"},{"sha":"b92f28a7819019a880c6a0e20872d26849e9830f","filename":"src/Nethereum.EVM/Execution/EvmArithmeticExecution.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmArithmeticExecution.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmArithmeticExecution.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FExecution%2FEvmArithmeticExecution.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -94,9 +94,9 @@ public void Add(Program program)\n \n         public void Exp(Program program)\n         {\n-            var first = program.StackPopAndConvertToUBigInteger();\n-            var second = program.StackPopAndConvertToUBigInteger();\n-            var result = BigInteger.ModPow(first, second, Two256);\n+            var value = program.StackPopAndConvertToUBigInteger();\n+            var exponent = program.StackPopAndConvertToUBigInteger();\n+            var result = BigInteger.ModPow(value, exponent, Two256);\n             program.StackPush(result);\n             program.Step();\n         }"},{"sha":"9db3b94133fa6c61123d330cd9782b2d75cd61d1","filename":"src/Nethereum.EVM/Execution/EvmBlockchainCurrentContractContextExecution.cs","status":"modified","additions":51,"deletions":3,"changes":54,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmBlockchainCurrentContractContextExecution.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmBlockchainCurrentContractContextExecution.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FExecution%2FEvmBlockchainCurrentContractContextExecution.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -65,8 +65,8 @@ public void Address(Program program)\n         public void SHA3(Program program)\n         {\n             var index = program.StackPopAndConvertToUBigInteger();\n-            var lenght = program.StackPopAndConvertToUBigInteger();\n-            var data = program.Memory.GetRange((int)index, (int)lenght);\n+            var length = program.StackPopAndConvertToUBigInteger();\n+            var data = program.Memory.GetRange((int)index, (int)length);\n             var encoded = Sha3Keccack.Current.CalculateHash(data.ToArray());\n             program.StackPush(encoded);\n             program.Step();\n@@ -108,7 +108,7 @@ public void GasLimit(Program program)\n         }\n         public void Gas(Program program)\n         {\n-            var gas = program.ProgramContext.Gas;\n+            var gas = BigInteger.Max(program.GasRemaining, 0);\n             program.StackPush(gas);\n             program.Step();\n         }\n@@ -130,6 +130,54 @@ public void BaseFee(Program program)\n             program.StackPush(baseFee);\n             program.Step();\n         }\n+\n+        public void BlobBaseFee(Program program)\n+        {\n+            program.StackPush(program.ProgramContext.BlobBaseFee);\n+            program.Step();\n+        }\n+\n+        public void BlobHash(Program program)\n+        {\n+            var index = program.StackPopAndConvertToUBigInteger();\n+\n+            if (program.ProgramContext.BlobHashes == null || index >= program.ProgramContext.BlobHashes.Length)\n+            {\n+                program.StackPush(new byte[32]); // push zeroed 32 bytes\n+            }\n+            else\n+            {\n+                program.StackPush(program.ProgramContext.BlobHashes[(int)index].PadTo32Bytes());\n+            }\n+\n+            program.Step();\n+        }\n+\n+        public void TLoad(Program program)\n+        {\n+            var key = program.StackPopAndConvertToUBigInteger();\n+            if (program.ProgramContext.IsStatic)\n+                throw new Exception(\"TLOAD not allowed in static context\");\n+\n+            byte[] value = program.ProgramContext.TransientStorage.TryGetValue(key, out var val)\n+                ? val\n+                : new byte[32];\n+\n+            program.StackPush(value);\n+            program.Step();\n+        }\n+\n+        public void TStore(Program program)\n+        {\n+            var key = program.StackPopAndConvertToUBigInteger();\n+            var value = program.StackPop().PadTo32Bytes();\n+\n+            if (program.ProgramContext.IsStatic)\n+                throw new Exception(\"TSTORE not allowed in static context\");\n+\n+            program.ProgramContext.TransientStorage[key] = value;\n+            program.Step();\n+        }\n     }\n \n }\n\\ No newline at end of file"},{"sha":"f55124e4334f9ddcb5a1b03a01600f6eeff7a577","filename":"src/Nethereum.EVM/Execution/EvmCallingCreationExecution.cs","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmCallingCreationExecution.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmCallingCreationExecution.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FExecution%2FEvmCallingCreationExecution.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -159,7 +159,7 @@ public async Task<List<ProgramTrace>> CallAsync(Program program, int vmExecution\n             var value = program.StackPopAndConvertToBigInteger();\n             var from = program.ProgramContext.AddressContract;\n             var to = codeAddress.ConvertToEthereumChecksumAddress();\n-\n+  \n             return await GenericCallAsync(program, vmExecutionStep, depth, traceEnabled, gas, codeAddress, value, from, to);\n \n         }\n@@ -243,6 +243,7 @@ private async Task<List<ProgramTrace>> GenericCallAsync(Program program, int vmE\n                 programContext.Difficulty = program.ProgramContext.Difficulty;\n                 programContext.GasLimit = program.ProgramContext.GasLimit;\n                 var callProgram = new Program(byteCode, programContext);\n+                callProgram.GasRemaining = gas;\n                 var vm = new EVMSimulator(evmProgramExecutionParent);\n                 \n                 try\n@@ -274,6 +275,9 @@ private async Task<List<ProgramTrace>> GenericCallAsync(Program program, int vmE\n                         {\n                             program.ProgramResult.InsertInnerContractCodeIfDoesNotExist(codeItem.Key, codeItem.Value);\n                         }\n+\n+                        program.GasRemaining += callProgram.GasRemaining;\n+                        program.TotalGasUsed += callProgram.TotalGasUsed;\n                         program.Step();\n                     }\n                     else"},{"sha":"f8647eb912cb80a07cd9c8eb32c1ad8dc660567e","filename":"src/Nethereum.EVM/Execution/EvmReturnRevertLogExecution.cs","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmReturnRevertLogExecution.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmReturnRevertLogExecution.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FExecution%2FEvmReturnRevertLogExecution.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -17,7 +17,7 @@ public void Log(Program program, int numberTopics)\n             var address = program.ProgramContext.AddressContract;\n \n             var memStart = (int)program.StackPopAndConvertToUBigInteger();\n-            var memOffset = (int)program.StackPopAndConvertToUBigInteger();\n+            var memLength = (int)program.StackPopAndConvertToUBigInteger();\n \n             var topics = new List<string>();\n             for (int i = 0; i < numberTopics; ++i)\n@@ -26,7 +26,7 @@ public void Log(Program program, int numberTopics)\n                 topics.Add(topic.ToHex());\n             }\n \n-            byte[] data = program.Memory.GetRange(memStart, memOffset).ToArray();\n+            byte[] data = program.Memory.GetRange(memStart, memLength).ToArray();\n \n             var filterLog = new FilterLog\n             {"},{"sha":"22d0faa94d1f22e8a900f0b7063e22c00ee65b81","filename":"src/Nethereum.EVM/Execution/EvmStorageMemoryExecution.cs","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmStorageMemoryExecution.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FExecution%2FEvmStorageMemoryExecution.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FExecution%2FEvmStorageMemoryExecution.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -26,9 +26,12 @@ public async Task<BigInteger> SLoad(Program program)\n             return key;\n         }\n \n-        public void SStore(Program program)\n+        public async Task SStore(Program program)\n         {\n             var key = program.StackPopAndConvertToUBigInteger();\n+            //ensure we have the value in storage to track it\n+            //always first so we can track the original value\n+            await program.ProgramContext.GetFromStorageAsync(key);\n             var storageValue = program.StackPop();\n             program.ProgramContext.SaveToStorage(key, storageValue);\n             program.Step();\n@@ -53,6 +56,24 @@ public void MLoad(Program program)\n             program.Step();\n         }\n \n+        public void MCopy(Program program)\n+        {\n+            var destOffset = (int)program.StackPopAndConvertToUBigInteger(); \n+            var srcOffset = (int)program.StackPopAndConvertToUBigInteger();  \n+            var length = (int)program.StackPopAndConvertToUBigInteger();     \n+\n+            var srcData = new byte[length];\n+\n+            if (srcOffset < program.Memory.Count)\n+            {\n+                var available = Math.Min(length, program.Memory.Count - srcOffset);\n+                program.Memory.CopyTo(srcOffset, srcData, 0, available);\n+            }\n+\n+            program.WriteToMemory(destOffset, length, srcData);\n+            program.Step();\n+        }\n+\n         public void MStore8(Program program)\n         {\n             var index = program.StackPopAndConvertToUBigInteger();"},{"sha":"5a548d854eb1520e3c01a5d393e96f01c0ecc2eb","filename":"src/Nethereum.EVM/Gas/GasCost.cs","status":"removed","additions":0,"deletions":62,"changes":62,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FGasCost.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FGasCost.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FGas%2FGasCost.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,62 +0,0 @@\n-﻿namespace Nethereum.EVM.Gas\n-{\n-    public class GasCost\n-    {\n-\n-        /* backwards compatibility, remove eventually */\n-        public const int STEP = 1;\n-        public const int SSTORE = 300;\n-        /* backwards compatibility, remove eventually */\n-\n-        public const int ZEROSTEP = 0;\n-        public const int QUICKSTEP = 2;\n-        public const int FASTESTSTEP = 3;\n-        public const int FASTSTEP = 5;\n-        public const int MIDSTEP = 8;\n-        public const int SLOWSTEP = 10;\n-        public const int EXTSTEP = 20;\n-\n-        public const int GENESISGASLIMIT = 1000000;\n-        public const int MINGASLIMIT = 125000;\n-\n-        public const int BALANCE = 20;\n-        public const int SHA3 = 30;\n-        public const int SHA3_WORD = 6;\n-        public const int SLOAD = 50;\n-        public const int STOP = 0;\n-        public const int SUICIDE = 0;\n-        public const int CLEAR_SSTORE = 5000;\n-        public const int SET_SSTORE = 20000;\n-        public const int RESET_SSTORE = 5000;\n-        public const int REFUND_SSTORE = 15000;\n-        public const int CREATE = 32000;\n-\n-        public const int JUMPDEST = 1;\n-        public const int CREATE_DATA_BYTE = 5;\n-        public const int CALL = 40;\n-        public const int STIPEND_CALL = 2300;\n-        public const int VT_CALL = 9000; //value transfer call\n-        public const int NEW_ACCT_CALL = 25000; //new account call\n-        public const int MEMORY = 3;\n-        public const int SUICIDE_REFUND = 24000;\n-        public const int QUAD_COEFF_DIV = 512;\n-        public const int CREATE_DATA = 200;\n-        public const int TX_NO_ZERO_DATA = 68;\n-        public const int TX_ZERO_DATA = 4;\n-        public const int TRANSACTION = 21000;\n-        public const int TRANSACTION_CREATE_CONTRACT = 53000;\n-        public const int LOG_GAS = 375;\n-        public const int LOG_DATA_GAS = 8;\n-        public const int LOG_TOPIC_GAS = 375;\n-        public const int COPY_GAS = 3;\n-        public const int EXP_GAS = 10;\n-        public const int EXP_BYTE_GAS = 10;\n-        public const int IDENTITY = 15;\n-        public const int IDENTITY_WORD = 3;\n-        public const int RIPEMD160 = 600;\n-        public const int RIPEMD160_WORD = 120;\n-        public const int SHA256 = 60;\n-        public const int SHA256_WORD = 12;\n-        public const int EC_RECOVER = 3000;\n-    }\n-}\n\\ No newline at end of file"},{"sha":"f2bdbb58052fa86df8a1507eb289c2576248fac8","filename":"src/Nethereum.EVM/Gas/GasPriceTier.cs","status":"removed","additions":0,"deletions":20,"changes":20,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FGasPriceTier.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FGasPriceTier.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FGas%2FGasPriceTier.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,20 +0,0 @@\n-﻿using System;\n-using System.Linq;\n-using System.Threading.Tasks;\n-\n-namespace Nethereum.EVM.Gas\n-{\n-    //0, 2, 3, 5, 8, 10, 20, 0}\n-    public enum GasPriceTier\n-    {\n-        ZeroTier = 0,   // 0, Zero\n-        BaseTier,       // 2, Quick\n-        VeryLowTier,    // 3, Fastest\n-        LowTier,        // 5, Fast\n-        MidTier,        // 8, Mid\n-        HighTier,       // 10, Slow\n-        ExtTier,        // 20, Ext\n-        SpecialTier,    // multiparam or otherwise special\n-        InvalidTier     // Invalid.\n-    }\n-}"},{"sha":"b29c7af56a0fc838f7e017ecb04a271549b63c82","filename":"src/Nethereum.EVM/Gas/InstructionInfo.cs","status":"removed","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FInstructionInfo.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FInstructionInfo.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FGas%2FInstructionInfo.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,42 +0,0 @@\n-﻿namespace Nethereum.EVM.Gas\n-{\n-    public class InstructionInfo\n-    {\n-        public InstructionInfo(string name, int additional, int args, int ret, bool sideEffects, GasPriceTier gasPriceTier)\n-        {\n-            Name = name;\n-            Additional = additional;\n-            Args = args;\n-            Ret = ret;\n-            SideEffects = sideEffects;\n-            GasPriceTier = gasPriceTier;\n-        }\n-        /// <summary>\n-        /// The name of the instruction.\n-        /// </summary>\n-        public string Name { get; set; }\n-        /// <summary>\n-        /// Additional items required in memory for this instructions (only for PUSH).\n-        /// </summary>\n-        public int Additional { get; set; }\n-        /// <summary>\n-        /// Number of items required on the stack for this instruction (and, for the purposes of ret, the number taken from the stack).\n-        /// </summary>\n-        public int Args { get; set; }\n-\n-        /// <summary>\n-        /// Number of items placed (back) on the stack by this instruction, assuming args items were removed.\n-        /// </summary>\n-        public int Ret { get; set; }\n-\n-        /// <summary>\n-        /// false if the only effect on the execution environment (apart from gas usage) is a change to a topmost segment of the stack\n-        /// </summary>\n-        public bool SideEffects { get; set; }\n-\n-        /// <summary>\n-        /// Tier for gas pricing.\n-        /// </summary>\n-        public GasPriceTier GasPriceTier { get; set; }\n-    }\n-}\n\\ No newline at end of file"},{"sha":"2ab783a0a5a699c85727cff9624962b755a0a813","filename":"src/Nethereum.EVM/Gas/InstructionInfoCollection.cs","status":"removed","additions":0,"deletions":148,"changes":148,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FInstructionInfoCollection.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.EVM%2FGas%2FInstructionInfoCollection.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FGas%2FInstructionInfoCollection.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,148 +0,0 @@\n-﻿using System.Collections.Generic;\n-\n-namespace Nethereum.EVM.Gas\n-{\n-    public class InstructionInfoCollection\n-    {\n-\n-        public static Dictionary<Instruction, InstructionInfo> Instructions = new Dictionary<Instruction, InstructionInfo>()\n-        { //                                                                  Add, Args, Ret, SideEffects, GasPriceTier\n-            { Instruction.STOP,        new InstructionInfo( \"STOP\",           0, 0, 0, true, GasPriceTier.ZeroTier ) } ,\n-            { Instruction.ADD,         new InstructionInfo( \"ADD\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SUB,         new InstructionInfo( \"SUB\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.MUL,         new InstructionInfo( \"MUL\",            0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.DIV,         new InstructionInfo( \"DIV\",            0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.SDIV,        new InstructionInfo( \"SDIV\",           0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.MOD,         new InstructionInfo( \"MOD\",            0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.SMOD,        new InstructionInfo( \"SMOD\",           0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.EXP,         new InstructionInfo( \"EXP\",            0, 2, 1, false, GasPriceTier.SpecialTier ) },\n-            { Instruction.NOT,         new InstructionInfo( \"NOT\",            0, 1, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.LT,          new InstructionInfo( \"LT\",             0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.GT,          new InstructionInfo( \"GT\",             0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SLT,         new InstructionInfo( \"SLT\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SGT,         new InstructionInfo( \"SGT\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.EQ,          new InstructionInfo( \"EQ\",             0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.ISZERO,      new InstructionInfo( \"ISZERO\",         0, 1, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.AND,         new InstructionInfo( \"AND\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.OR,          new InstructionInfo( \"OR\",             0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.XOR,         new InstructionInfo( \"XOR\",            0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.BYTE,        new InstructionInfo( \"BYTE\",           0, 2, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.ADDMOD,      new InstructionInfo( \"ADDMOD\",         0, 3, 1, false, GasPriceTier.MidTier ) },\n-            { Instruction.MULMOD,      new InstructionInfo( \"MULMOD\",         0, 3, 1, false, GasPriceTier.MidTier ) },\n-            { Instruction.SIGNEXTEND,  new InstructionInfo( \"SIGNEXTEND\",     0, 2, 1, false, GasPriceTier.LowTier ) },\n-            { Instruction.KECCAK256,        new InstructionInfo( \"KECCAK256\",           0, 2, 1, false, GasPriceTier.SpecialTier ) },\n-            { Instruction.ADDRESS,     new InstructionInfo( \"ADDRESS\",        0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.BALANCE,     new InstructionInfo( \"BALANCE\",        0, 1, 1, false, GasPriceTier.ExtTier ) },\n-            { Instruction.ORIGIN,      new InstructionInfo( \"ORIGIN\",         0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.CALLER,      new InstructionInfo( \"CALLER\",         0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.CALLVALUE,   new InstructionInfo( \"CALLVALUE\",      0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.CALLDATALOAD,new InstructionInfo( \"CALLDATALOAD\",   0, 1, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.CALLDATASIZE,new InstructionInfo( \"CALLDATASIZE\",   0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.CALLDATACOPY,new InstructionInfo( \"CALLDATACOPY\",   0, 3, 0, true, GasPriceTier.VeryLowTier ) },\n-            { Instruction.CODESIZE,    new InstructionInfo( \"CODESIZE\",       0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.CODECOPY,    new InstructionInfo( \"CODECOPY\",       0, 3, 0, true, GasPriceTier.VeryLowTier ) },\n-            { Instruction.GASPRICE,    new InstructionInfo( \"GASPRICE\",       0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.EXTCODESIZE, new InstructionInfo( \"EXTCODESIZE\",    0, 1, 1, false, GasPriceTier.ExtTier ) },\n-            { Instruction.EXTCODECOPY, new InstructionInfo( \"EXTCODECOPY\",    0, 4, 0, true, GasPriceTier.ExtTier ) },\n-            { Instruction.BLOCKHASH,   new InstructionInfo( \"BLOCKHASH\",      0, 1, 1, false, GasPriceTier.ExtTier ) },\n-            { Instruction.COINBASE,    new InstructionInfo( \"COINBASE\",       0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.TIMESTAMP,   new InstructionInfo( \"TIMESTAMP\",      0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.NUMBER,      new InstructionInfo( \"NUMBER\",         0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.DIFFICULTY,  new InstructionInfo( \"DIFFICULTY\",     0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.GASLIMIT,    new InstructionInfo( \"GASLIMIT\",       0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.POP,         new InstructionInfo( \"POP\",            0, 1, 0, false, GasPriceTier.BaseTier ) },\n-            { Instruction.MLOAD,       new InstructionInfo( \"MLOAD\",          0, 1, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.MSTORE,      new InstructionInfo( \"MSTORE\",         0, 2, 0, true, GasPriceTier.VeryLowTier ) },\n-            { Instruction.MSTORE8,     new InstructionInfo( \"MSTORE8\",        0, 2, 0, true, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SLOAD,       new InstructionInfo( \"SLOAD\",          0, 1, 1, false, GasPriceTier.SpecialTier ) },\n-            { Instruction.SSTORE,      new InstructionInfo( \"SSTORE\",         0, 2, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.JUMP,        new InstructionInfo( \"JUMP\",           0, 1, 0, true, GasPriceTier.MidTier ) },\n-            { Instruction.JUMPI,       new InstructionInfo( \"JUMPI\",          0, 2, 0, true, GasPriceTier.HighTier ) },\n-            { Instruction.PC,          new InstructionInfo( \"PC\",             0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.MSIZE,       new InstructionInfo( \"MSIZE\",          0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.GAS,         new InstructionInfo( \"GAS\",            0, 0, 1, false, GasPriceTier.BaseTier ) },\n-            { Instruction.JUMPDEST,    new InstructionInfo( \"JUMPDEST\",       0, 0, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.PUSH1,       new InstructionInfo( \"PUSH1\",          1, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH2,       new InstructionInfo( \"PUSH2\",          2, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH3,       new InstructionInfo( \"PUSH3\",          3, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH4,       new InstructionInfo( \"PUSH4\",          4, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH5,       new InstructionInfo( \"PUSH5\",          5, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH6,       new InstructionInfo( \"PUSH6\",          6, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH7,       new InstructionInfo( \"PUSH7\",          7, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH8,       new InstructionInfo( \"PUSH8\",          8, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH9,       new InstructionInfo( \"PUSH9\",          9, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH10,      new InstructionInfo( \"PUSH10\",         10, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH11,      new InstructionInfo( \"PUSH11\",         11, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH12,      new InstructionInfo( \"PUSH12\",         12, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH13,      new InstructionInfo( \"PUSH13\",         13, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH14,      new InstructionInfo( \"PUSH14\",         14, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH15,      new InstructionInfo( \"PUSH15\",         15, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH16,      new InstructionInfo( \"PUSH16\",         16, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH17,      new InstructionInfo( \"PUSH17\",         17, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH18,      new InstructionInfo( \"PUSH18\",         18, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH19,      new InstructionInfo( \"PUSH19\",         19, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH20,      new InstructionInfo( \"PUSH20\",         20, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH21,      new InstructionInfo( \"PUSH21\",         21, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH22,      new InstructionInfo( \"PUSH22\",         22, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH23,      new InstructionInfo( \"PUSH23\",         23, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH24,      new InstructionInfo( \"PUSH24\",         24, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH25,      new InstructionInfo( \"PUSH25\",         25, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH26,      new InstructionInfo( \"PUSH26\",         26, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH27,      new InstructionInfo( \"PUSH27\",         27, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH28,      new InstructionInfo( \"PUSH28\",         28, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH29,      new InstructionInfo( \"PUSH29\",         29, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH30,      new InstructionInfo( \"PUSH30\",         30, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH31,      new InstructionInfo( \"PUSH31\",         31, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.PUSH32,      new InstructionInfo( \"PUSH32\",         32, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP1,        new InstructionInfo( \"DUP1\",           0, 1, 2, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP2,        new InstructionInfo( \"DUP2\",           0, 2, 3, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP3,        new InstructionInfo( \"DUP3\",           0, 3, 4, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP4,        new InstructionInfo( \"DUP4\",           0, 4, 5, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP5,        new InstructionInfo( \"DUP5\",           0, 5, 6, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP6,        new InstructionInfo( \"DUP6\",           0, 6, 7, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP7,        new InstructionInfo( \"DUP7\",           0, 7, 8, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP8,        new InstructionInfo( \"DUP8\",           0, 8, 9, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP9,        new InstructionInfo( \"DUP9\",           0, 9, 10, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP10,       new InstructionInfo( \"DUP10\",          0, 10, 11, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP11,       new InstructionInfo( \"DUP11\",          0, 11, 12, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP12,       new InstructionInfo( \"DUP12\",          0, 12, 13, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP13,       new InstructionInfo( \"DUP13\",          0, 13, 14, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP14,       new InstructionInfo( \"DUP14\",          0, 14, 15, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP15,       new InstructionInfo( \"DUP15\",          0, 15, 16, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.DUP16,       new InstructionInfo( \"DUP16\",          0, 16, 17, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP1,       new InstructionInfo( \"SWAP1\",          0, 2, 2, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP2,       new InstructionInfo( \"SWAP2\",          0, 3, 3, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP3,       new InstructionInfo( \"SWAP3\",          0, 4, 4, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP4,       new InstructionInfo( \"SWAP4\",          0, 5, 5, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP5,       new InstructionInfo( \"SWAP5\",          0, 6, 6, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP6,       new InstructionInfo( \"SWAP6\",          0, 7, 7, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP7,       new InstructionInfo( \"SWAP7\",          0, 8, 8, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP8,       new InstructionInfo( \"SWAP8\",          0, 9, 9, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP9,       new InstructionInfo( \"SWAP9\",          0, 10, 10, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP10,      new InstructionInfo( \"SWAP10\",         0, 11, 11, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP11,      new InstructionInfo( \"SWAP11\",         0, 12, 12, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP12,      new InstructionInfo( \"SWAP12\",         0, 13, 13, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP13,      new InstructionInfo( \"SWAP13\",         0, 14, 14, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP14,      new InstructionInfo( \"SWAP14\",         0, 15, 15, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP15,      new InstructionInfo( \"SWAP15\",         0, 16, 16, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.SWAP16,      new InstructionInfo( \"SWAP16\",         0, 17, 17, false, GasPriceTier.VeryLowTier ) },\n-            { Instruction.LOG0,        new InstructionInfo( \"LOG0\",           0, 2, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.LOG1,        new InstructionInfo( \"LOG1\",           0, 3, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.LOG2,        new InstructionInfo( \"LOG2\",           0, 4, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.LOG3,        new InstructionInfo( \"LOG3\",           0, 5, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.LOG4,        new InstructionInfo( \"LOG4\",           0, 6, 0, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.CREATE,      new InstructionInfo( \"CREATE\",         0, 3, 1, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.CALL,        new InstructionInfo( \"CALL\",           0, 7, 1, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.CALLCODE,    new InstructionInfo( \"CALLCODE\",       0, 7, 1, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.RETURN,      new InstructionInfo( \"RETURN\",         0, 2, 0, true, GasPriceTier.ZeroTier ) },\n-            { Instruction.DELEGATECALL,new InstructionInfo( \"DELEGATECALL\",   0, 6, 1, true, GasPriceTier.SpecialTier ) },\n-            { Instruction.SELFDESTRUCT,     new InstructionInfo( \"SELFDESTRUCT\",        0, 1, 0, true, GasPriceTier.ZeroTier ) },\n-\n-           // // these are generated by the interpreter - should never be in user code\n-           // { Instruction.PUSHC,       new InstructionInfo( \"PUSHC\",          2, 0, 1, false, GasPriceTier.VeryLowTier ) },\n-           // { Instruction.JUMPV,       new InstructionInfo( \"JUMPV\",          0, 1, 0, true, GasPriceTier.MidTier ) },\n-           // { Instruction.JUMPVI,      new InstructionInfo( \"JUMPVI\",         0, 1, 0, true, GasPriceTier.HighTier ) }\n-           //// { Instruction.STOP,        new InstructionInfo( \"BAD\",            0, 0, 0, true, GasPriceTier.ZeroTier ) },\n-        };\n-    }\n-}\n\\ No newline at end of file"},{"sha":"7b8cf68070f81bbe11948d80774fbb630dc4b580","filename":"src/Nethereum.EVM/Gas/OpcodeGasTable.cs","status":"added","additions":523,"deletions":0,"changes":523,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FGas%2FOpcodeGasTable.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FGas%2FOpcodeGasTable.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FGas%2FOpcodeGasTable.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,523 @@\n+﻿namespace Nethereum.EVM.Gas\n+{\n+    using Nethereum.Hex.HexConvertors.Extensions;\n+    using Nethereum.Util;\n+    using System;\n+    using System.Collections.Generic;\n+    using System.Numerics;\n+    using System.Threading.Tasks;\n+\n+    public static class OpcodeGasTable\n+    {\n+        public static readonly Dictionary<Instruction, BigInteger> GasCosts = new()\n+    {\n+        // Arithmetic & Bitwise\n+        { Instruction.STOP, 0 },\n+        { Instruction.ADD, 3 },\n+        { Instruction.SUB, 3 },\n+        { Instruction.MUL, 5 },\n+        { Instruction.DIV, 5 },\n+        { Instruction.SDIV, 5 },\n+        { Instruction.MOD, 5 },\n+        { Instruction.SMOD, 5 },\n+        { Instruction.ADDMOD, 8 },\n+        { Instruction.MULMOD, 8 },\n+        { Instruction.SIGNEXTEND, 5 },\n+        { Instruction.LT, 3 },\n+        { Instruction.GT, 3 },\n+        { Instruction.SLT, 3 },\n+        { Instruction.SGT, 3 },\n+        { Instruction.EQ, 3 },\n+        { Instruction.ISZERO, 3 },\n+        { Instruction.AND, 3 },\n+        { Instruction.OR, 3 },\n+        { Instruction.XOR, 3 },\n+        { Instruction.NOT, 3 },\n+        { Instruction.BYTE, 3 },\n+        { Instruction.SHL, 3 },\n+        { Instruction.SHR, 3 },\n+        { Instruction.SAR, 3 },\n+\n+        // Dynamic Gas\n+        { Instruction.EXP, -1 },\n+        { Instruction.KECCAK256, -1 },\n+        { Instruction.CALLDATACOPY, -1 },\n+        { Instruction.CODECOPY, -1 },\n+        { Instruction.EXTCODESIZE, -1 },\n+        { Instruction.EXTCODECOPY, -1 },\n+        { Instruction.EXTCODEHASH, -1 },\n+        { Instruction.RETURNDATACOPY, -1 },\n+        { Instruction.SLOAD, -1 },\n+        { Instruction.SSTORE, -1 },\n+        { Instruction.LOG0, -1 },\n+        { Instruction.LOG1, -1 },\n+        { Instruction.LOG2, -1 },\n+        { Instruction.LOG3, -1 },\n+        { Instruction.LOG4, -1 },\n+        { Instruction.CREATE, -1 },\n+        { Instruction.CREATE2, -1 },\n+        { Instruction.CALL, -1 },\n+        { Instruction.CALLCODE, -1 },\n+        { Instruction.DELEGATECALL, -1 },\n+        { Instruction.STATICCALL, -1 },\n+        { Instruction.MCOPY, -1 },\n+\n+        // Context\n+        { Instruction.ADDRESS, 2 },\n+        { Instruction.BALANCE, -1 },\n+        { Instruction.ORIGIN, 2 },\n+        { Instruction.CALLER, 2 },\n+        { Instruction.CALLVALUE, 2 },\n+        { Instruction.CALLDATALOAD, 3 },\n+        { Instruction.CALLDATASIZE, 2 },\n+        { Instruction.CODESIZE, 2 },\n+        { Instruction.GASPRICE, 2 },\n+        { Instruction.BLOCKHASH, 20 },\n+        { Instruction.COINBASE, 2 },\n+        { Instruction.TIMESTAMP, 2 },\n+        { Instruction.NUMBER, 2 },\n+        { Instruction.DIFFICULTY, 2 },\n+        { Instruction.GASLIMIT, 2 },\n+        { Instruction.CHAINID, 2 },\n+        { Instruction.SELFBALANCE, 5 },\n+        { Instruction.BASEFEE, 2 },\n+        { Instruction.BLOBHASH, 3 },\n+        { Instruction.BLOBBASEFEE, 2 },\n+\n+        // Flow / Memory\n+        { Instruction.POP, 2 },\n+        { Instruction.MLOAD, -1 },\n+        { Instruction.MSTORE, -1 },\n+        { Instruction.MSTORE8, -1 },\n+        { Instruction.JUMP, 8 },\n+        { Instruction.JUMPI, 10 },\n+        { Instruction.PC, 2 },\n+        { Instruction.MSIZE, 2 },\n+        { Instruction.GAS, 2 },\n+        { Instruction.JUMPDEST, 1 },\n+        { Instruction.TLOAD, 100 },\n+        { Instruction.TSTORE, 100 },\n+\n+        // Return control\n+        { Instruction.RETURN, -1 },\n+        { Instruction.REVERT, -1 },\n+        { Instruction.INVALID, 0 },\n+        { Instruction.SELFDESTRUCT, 5000 },\n+\n+        // PUSH0\n+        { Instruction.PUSH0, 2 },\n+    };\n+\n+        static OpcodeGasTable()\n+        {\n+            // PUSH1–PUSH32\n+            for (int i = 1; i <= 32; i++)\n+                GasCosts[(Instruction)Enum.Parse(typeof(Instruction), $\"PUSH{i}\")] = 3;\n+\n+            // DUP1–DUP16\n+            for (int i = 1; i <= 16; i++)\n+                GasCosts[(Instruction)Enum.Parse(typeof(Instruction), $\"DUP{i}\")] = 3;\n+\n+            // SWAP1–SWAP16\n+            for (int i = 1; i <= 16; i++)\n+                GasCosts[(Instruction)Enum.Parse(typeof(Instruction), $\"SWAP{i}\")] = 3;\n+        }\n+\n+        public static bool IsDynamic(Instruction instruction) =>\n+            GasCosts.TryGetValue(instruction, out var cost) && cost == -1;\n+\n+        public static BigInteger GetStaticGas(Instruction instruction) =>\n+            GasCosts.TryGetValue(instruction, out var cost) && cost >= 0 ? cost : 0;\n+\n+        public static async Task<BigInteger> GetGasCostAsync(Instruction instruction, Program program)\n+        {\n+            if (GasCosts.TryGetValue(instruction, out var cost))\n+            {\n+                if (cost >= 0)\n+                    return cost;\n+\n+                return await GetDynamicGasCost(instruction, program);\n+            }\n+            return 0;\n+        }\n+\n+        private static async Task<BigInteger> GetDynamicGasCost(Instruction instruction, Program program)\n+        {\n+            return instruction switch\n+            {\n+                Instruction.EXP => CalculateExpGas(program),\n+                Instruction.KECCAK256 => CalculateSha3Gas(program),\n+                Instruction.CALLDATACOPY => CalculateCallDataCopyGas(program),\n+                Instruction.CODECOPY => CalculateCopyGas(program),\n+                Instruction.EXTCODESIZE => CalculateExtCodeSizeGas(program),\n+                Instruction.EXTCODECOPY => CalculateExtCodeCopyGas(program),\n+                Instruction.EXTCODEHASH => CalculateExtCodeHashGas(program),\n+                Instruction.RETURNDATACOPY => CalculateReturnDataCopyGas(program),\n+                Instruction.SLOAD => CalculateSloadGas(program),\n+                Instruction.SSTORE => CalculateSStoreGas(program),\n+                Instruction.LOG0 => CalculateLogGas(program),\n+                Instruction.LOG1 => CalculateLogGas(program),\n+                Instruction.LOG2 => CalculateLogGas(program),\n+                Instruction.LOG3 => CalculateLogGas(program),\n+                Instruction.LOG4 => CalculateLogGas(program),\n+                Instruction.CREATE => CalculateCreateGas(program),\n+                Instruction.CREATE2 => CalculateCreate2Gas(program),\n+                Instruction.CALL => await CalculateCallGas(program),\n+                Instruction.CALLCODE => CalculateCallCodeGas(program),\n+                Instruction.DELEGATECALL => CalculateDelegateCallGas(program),\n+                Instruction.STATICCALL => CalculateStaticCallGas(program),\n+                Instruction.MCOPY => CalculateMCopyGas(program),\n+                Instruction.BALANCE => CalculateBalanceGas(program),\n+                Instruction.MLOAD => CalculateMLoadGas(program),\n+                Instruction.MSTORE => CalculateMStoreGas(program),\n+                Instruction.MSTORE8 => CalculateMStore8Gas(program),\n+                Instruction.RETURN => CalculateReturnGas(program),\n+                Instruction.REVERT => CalculateRevertGas(program),\n+                _ => throw new NotImplementedException($\"Dynamic gas not implemented for {instruction}\")\n+            };\n+        }\n+\n+        // Dynamic gas handlers (stubs)\n+        private static BigInteger CalculateExpGas(Program program)\n+        {\n+            var baseVal = program.StackPeekAt(1); // Exponent is second in stack (topmost is base)\n+            var bytesInExponent = baseVal.Length;\n+            return 10 + 50 * bytesInExponent;\n+        }\n+        private static BigInteger CalculateSha3Gas(Program program)\n+        {\n+            var index = program.StackPeekAtAndConvertToUBigInteger(0); // memoryIndex is second from top\n+            var length = program.StackPeekAtAndConvertToUBigInteger(1); // indexInMemory is top of stack\n+\n+            var lengthWords = (int)((length + 31) / 32); // ceil(len / 32)\n+\n+            var memoryCost = program.CalculateMemoryExpansionGas(index, length);\n+            return 30 + (6 * lengthWords) + memoryCost;\n+        }\n+\n+        private static BigInteger CalculateCallDataCopyGas(Program program)\n+        {\n+            return CalculateMemoryCopyGas(program, indexInMemoryPeekIndex: 0, lengthDataToCopyPeekIndex: 2);\n+        }\n+\n+        private static BigInteger CalculateCopyGas(Program program)\n+        {\n+            return CalculateMemoryCopyGas(program, indexInMemoryPeekIndex: 0, lengthDataToCopyPeekIndex: 2);\n+        }\n+\n+        private static BigInteger CalculateReturnDataCopyGas(Program program)\n+        {\n+            return CalculateMemoryCopyGas(program, indexInMemoryPeekIndex: 0, lengthDataToCopyPeekIndex: 2);\n+        }\n+\n+        private static BigInteger CalculateMemoryCopyGas(Program program, int indexInMemoryPeekIndex, int lengthDataToCopyPeekIndex)\n+        {\n+            var indexInMemory = program.StackPeekAtAndConvertToUBigInteger(indexInMemoryPeekIndex);\n+            var lengthDataToCopy = program.StackPeekAtAndConvertToUBigInteger(lengthDataToCopyPeekIndex);\n+\n+            var words = (int)((indexInMemory + 31) / 32);\n+            var memoryCost = program.CalculateMemoryExpansionGas(lengthDataToCopy, indexInMemory);\n+\n+            return 3 + (3 * words) + memoryCost;\n+        }\n+\n+        private static BigInteger CalculateExtCodeSizeGas(Program program)\n+        {\n+            var addressBytes = program.StackPeekAt(0);\n+            var isWarm = program.IsAddressWarm(addressBytes);\n+\n+            if (!isWarm)\n+            {\n+                program.MarkAddressAsWarm(addressBytes); // mark for future ops\n+                return 2600;\n+            }\n+\n+            return 100;\n+        }\n+\n+\n+        private static BigInteger CalculateExtCodeCopyGas(Program program)\n+        {\n+            var length = program.StackPeekAtAndConvertToUBigInteger(0);        \n+            var indexOfByteCode = program.StackPeekAtAndConvertToUBigInteger(1); \n+            var indexInMemory = program.StackPeekAtAndConvertToUBigInteger(2); \n+            var addressBytes = program.StackPeekAt(3);                         \n+\n+            var words = (length + 31) / 32;\n+            var memoryCost = program.CalculateMemoryExpansionGas(indexInMemory, length);\n+\n+            var isWarm = program.IsAddressWarm(addressBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(addressBytes);\n+\n+            var accessCost = isWarm ? 100 : 2600;\n+\n+            return accessCost + (3 * words) + memoryCost;\n+        }\n+\n+\n+        private static BigInteger CalculateExtCodeHashGas(Program program)\n+        {\n+            var addressBytes = program.StackPeekAt(0); \n+\n+            var isWarm = program.IsAddressWarm(addressBytes);\n+            if (!isWarm)\n+                program.MarkAddressAsWarm(addressBytes);\n+\n+            return isWarm ? 100 : 2600;\n+        }\n+\n+        private static BigInteger CalculateSloadGas(Program program)\n+        {\n+            var key = program.StackPeekAtAndConvertToUBigInteger(0);\n+            var isWarm = program.IsStorageSlotWarm(key);\n+\n+            if (!isWarm)\n+                program.MarkStorageSlotAsWarm(key);\n+\n+            return isWarm ? 100 : 2100;\n+        }\n+\n+        private static BigInteger CalculateSStoreGas(Program program)\n+        {\n+            var key = program.StackPeekAtAndConvertToUBigInteger(0);\n+            var newValue = program.StackPeekAt(1).PadTo32Bytes();\n+\n+            var contextAddress = program.ProgramContext.AddressContract;\n+            var state = program.ProgramContext.ExecutionStateService.CreateOrGetAccountExecutionState(contextAddress);\n+\n+            var isWarm = state.IsStorageKeyWarm(key);\n+            if (!isWarm)\n+            {\n+                state.MarkStorageKeyAsWarm(key);\n+            }\n+\n+            BigInteger gasCost = isWarm ? 0 : 2100;\n+\n+            var currentVal = state.GetStorageValue(key)?.PadTo32Bytes() ?? ByteUtil.InitialiseEmptyByteArray(32);\n+            var origVal = state.OriginalStorageValues.ContainsKey(key)\n+                ? state.OriginalStorageValues[key]?.PadTo32Bytes() ?? ByteUtil.InitialiseEmptyByteArray(32)\n+                : currentVal;\n+\n+            if (ByteUtil.AreEqual(newValue, currentVal))\n+            {\n+                return gasCost + 100;\n+            }\n+\n+            var isClean = ByteUtil.AreEqual(currentVal, origVal);\n+\n+            if (isClean)\n+            {\n+                gasCost += ByteUtil.IsZero(origVal) ? 20000 : 2900;\n+            }\n+            else\n+            {\n+                gasCost += 100;\n+            }\n+\n+            return gasCost;\n+        }\n+       \n+        private static BigInteger CalculateLogGas(Program program)\n+        {\n+            var opcode = program.GetCurrentInstruction().Instruction.Value;\n+            var numTopics = opcode - Instruction.LOG0; // LOG0 = A0, LOG4 = A4\n+\n+            var memStart = program.StackPeekAtAndConvertToUBigInteger(0);\n+            var memLength = program.StackPeekAtAndConvertToUBigInteger(1); \n+\n+            var memoryCost = program.CalculateMemoryExpansionGas(memStart, memLength);\n+            var dataGas = 8 * memLength;\n+            var topicGas = 375 * numTopics;\n+\n+            return 375 + topicGas + dataGas + memoryCost;\n+        }\n+\n+        private static BigInteger CalculateCreateGas(Program program)\n+        {\n+            var memoryIndex = program.StackPeekAtAndConvertToUBigInteger(1); \n+            var memoryLength = program.StackPeekAtAndConvertToUBigInteger(2);\n+\n+            var memoryCost = program.CalculateMemoryExpansionGas(memoryIndex, memoryLength);\n+\n+            return 32000 + memoryCost;\n+        }\n+\n+        private static BigInteger CalculateCreate2Gas(Program program)\n+        {\n+            var memoryIndex = program.StackPeekAtAndConvertToUBigInteger(1);   \n+            var memoryLength = program.StackPeekAtAndConvertToUBigInteger(2);  \n+\n+            var words = (memoryLength + 31) / 32;\n+            var memoryCost = program.CalculateMemoryExpansionGas(memoryIndex, memoryLength);\n+\n+            return 32000 + (6 * words) + memoryCost;\n+        }\n+\n+\n+        private static async Task<BigInteger> CalculateCallGas(Program program)\n+        {\n+            var gas = program.StackPeekAtAndConvertToBigInteger(0);\n+            var toBytes = program.StackPeekAt(1);\n+            var value = program.StackPeekAtAndConvertToBigInteger(2);\n+            var inOffset = program.StackPeekAtAndConvertToBigInteger(3);\n+            var inSize = program.StackPeekAtAndConvertToBigInteger(4);\n+            var outOffset = program.StackPeekAtAndConvertToBigInteger(5);\n+            var outSize = program.StackPeekAtAndConvertToBigInteger(6);\n+\n+            var to = toBytes.ConvertToEthereumChecksumAddress();\n+            // Cold access cost\n+            var isWarm = program.IsAddressWarm(toBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(toBytes);\n+            var accountState = await program.ProgramContext.ExecutionStateService.LoadBalanceNonceAndCodeFromStorageAsync(to);\n+\n+\n+\n+            // Memory cost for input/output\n+            var memCost = program.CalculateMemoryExpansionGas(inOffset, inSize)\n+                        + program.CalculateMemoryExpansionGas(outOffset, outSize);\n+\n+           \n+            var accessCost = isWarm ? 100 : 2600;\n+\n+            var baseGas = accessCost + memCost;\n+\n+            if (value > 0)\n+            {\n+                baseGas += 9000;\n+\n+                // If account was empty before, extra cost for account creation\n+                if (accountState.Balance.IsZero() && accountState.Nonce == 0 && (accountState.Code == null || accountState.Code.Length == 0))\n+                {\n+                    baseGas += 25000;\n+                }\n+            }\n+\n+            return baseGas;\n+        }\n+\n+        private static BigInteger CalculateCallCodeGas(Program program)\n+        {\n+            var gas = program.StackPeekAtAndConvertToBigInteger(0);\n+            var toBytes = program.StackPeekAt(1);\n+            var value = program.StackPeekAtAndConvertToBigInteger(2);\n+            var inOffset = program.StackPeekAtAndConvertToBigInteger(3);\n+            var inSize = program.StackPeekAtAndConvertToBigInteger(4);\n+            var outOffset = program.StackPeekAtAndConvertToBigInteger(5);\n+            var outSize = program.StackPeekAtAndConvertToBigInteger(6);\n+\n+            var isWarm = program.IsAddressWarm(toBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(toBytes);\n+\n+            var accessCost = isWarm ? 100 : 2600;\n+            var memCost = program.CalculateMemoryExpansionGas(inOffset, inSize) +\n+                          program.CalculateMemoryExpansionGas(outOffset, outSize);\n+\n+            var baseGas = accessCost + memCost;\n+\n+            if (value > 0)\n+            {\n+                baseGas += 9000;\n+                // No +25000 for account creation in CALLCODE\n+            }\n+\n+            return baseGas;\n+        }\n+\n+        private static BigInteger CalculateDelegateCallGas(Program program)\n+        {\n+            var gas = program.StackPeekAtAndConvertToBigInteger(0);\n+            var toBytes = program.StackPeekAt(1);\n+            var inOffset = program.StackPeekAtAndConvertToBigInteger(2);\n+            var inSize = program.StackPeekAtAndConvertToBigInteger(3);\n+            var outOffset = program.StackPeekAtAndConvertToBigInteger(4);\n+            var outSize = program.StackPeekAtAndConvertToBigInteger(5);\n+\n+            var isWarm = program.IsAddressWarm(toBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(toBytes);\n+\n+            var accessCost = isWarm ? 100 : 2600;\n+            var memCost = program.CalculateMemoryExpansionGas(inOffset, inSize) +\n+                          program.CalculateMemoryExpansionGas(outOffset, outSize);\n+\n+            return accessCost + memCost;\n+        }\n+\n+        private static BigInteger CalculateStaticCallGas(Program program)\n+        {\n+            var gas = program.StackPeekAtAndConvertToBigInteger(0);\n+            var toBytes = program.StackPeekAt(1);\n+            var inOffset = program.StackPeekAtAndConvertToBigInteger(2);\n+            var inSize = program.StackPeekAtAndConvertToBigInteger(3);\n+            var outOffset = program.StackPeekAtAndConvertToBigInteger(4);\n+            var outSize = program.StackPeekAtAndConvertToBigInteger(5);\n+\n+            var isWarm = program.IsAddressWarm(toBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(toBytes);\n+\n+            var accessCost = isWarm ? 100 : 2600;\n+            var memCost = program.CalculateMemoryExpansionGas(inOffset, inSize) +\n+                          program.CalculateMemoryExpansionGas(outOffset, outSize);\n+\n+            return accessCost + memCost;\n+        }\n+\n+        private static BigInteger CalculateMCopyGas(Program program)\n+        {\n+            var destOffset = program.StackPeekAtAndConvertToUBigInteger(0); // top\n+            var srcOffset = program.StackPeekAtAndConvertToUBigInteger(1);  // second\n+            var length = program.StackPeekAtAndConvertToUBigInteger(2);     // third\n+\n+            var words = (length + 31) / 32;\n+            var memoryCost =\n+                program.CalculateMemoryExpansionGas(destOffset, length) +\n+                program.CalculateMemoryExpansionGas(srcOffset, length);\n+\n+            return 3 + (3 * words) + memoryCost;\n+        }\n+        \n+        private static BigInteger CalculateBalanceGas(Program program)\n+        {\n+            var addressBytes = program.StackPeekAt(0); // top of stack\n+\n+            var isWarm = program.IsAddressWarm(addressBytes);\n+            if (!isWarm) program.MarkAddressAsWarm(addressBytes);\n+\n+            return isWarm ? 100 : 2600;\n+        }\n+\n+        private static BigInteger CalculateMLoadGas(Program program)\n+        {\n+            var offset = program.StackPeekAtAndConvertToUBigInteger(0);\n+            return 3 + program.CalculateMemoryExpansionGas(offset, 32);\n+        }\n+\n+        private static BigInteger CalculateMStoreGas(Program program)\n+        {\n+            var offset = program.StackPeekAtAndConvertToUBigInteger(0);\n+            return 3 + program.CalculateMemoryExpansionGas(offset, 32);\n+        }\n+\n+        private static BigInteger CalculateMStore8Gas(Program program)\n+        {\n+            var offset = program.StackPeekAtAndConvertToUBigInteger(0);\n+            return 3 + program.CalculateMemoryExpansionGas(offset, 1);\n+        }\n+\n+        private static BigInteger CalculateReturnGas(Program program)\n+        {\n+            var offset = program.StackPeekAtAndConvertToUBigInteger(0);\n+            var length = program.StackPeekAtAndConvertToUBigInteger(1);\n+            return program.CalculateMemoryExpansionGas(offset, length);\n+        }\n+\n+        private static BigInteger CalculateRevertGas(Program program)\n+        {\n+            var offset = program.StackPeekAtAndConvertToUBigInteger(0);\n+            var length = program.StackPeekAtAndConvertToUBigInteger(1);\n+            return program.CalculateMemoryExpansionGas(offset, length);\n+        }\n+\n+    }\n+    \n+\n+}\n\\ No newline at end of file"},{"sha":"9994a30af6718cd6c3fe003fdd37ba9daa67e0a5","filename":"src/Nethereum.EVM/Instruction.cs","status":"modified","additions":22,"deletions":3,"changes":25,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FInstruction.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FInstruction.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FInstruction.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -109,13 +109,20 @@ public enum Instruction\n         ///<summary>Istanbul hardfork, EIP-1884: balance of the executing contract in wei</summary>///\n         SELFBALANCE,\n         ///<summary>London hardfork, EIP-3198: current block's base fee</summary>///\n-        BASEFEE,\n-\n+        BASEFEE = 0x48,\n+        /// <summary>\n+        /// Cancun: Get versioned hashes\n+        /// </summary>\n+        BLOBHASH = 0x49,\n+        /// <summary>\n+        /// Cancun: Returns the value of the blob base-fee of the current block\n+        /// </summary>\n+        BLOBBASEFEE = 0x4A,\n         ///<summary>remove item from stack</summary>///\n         POP = 0x50,         \n         ///<summary>load word from memory</summary>///\n         MLOAD,              \n-        ///<summary>save word to memory</summary>///\n+        ///<su  mmary>save word to memory</summary>///\n         MSTORE,             \n         ///<summary>save byte to memory</summary>///\n         MSTORE8,            \n@@ -135,6 +142,18 @@ public enum Instruction\n         GAS,                \n         ///<summary>set a potential jump destination</summary>///\n         JUMPDEST,\n+        /// <summary>\n+        /// Load word from transient storage\n+        /// </summary>\n+        TLOAD,\n+        /// <summary>\n+        /// Cancun, Save word to transient storage\n+        /// </summary>\n+        TSTORE,\n+        /// <summary>\n+        /// Copies a word from memory to memory\n+        /// </summary>\n+        MCOPY = 0x5e,\n         ///<summary>place 0 byte item on stack</summary>///\n         PUSH0 = 0x5f,\n         ///<summary>place 1 byte item on stack</summary>///"},{"sha":"fc06b56fc8f34b647a72f5c38a07679ae016acc6","filename":"src/Nethereum.EVM/Nethereum.EVM.csproj","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FNethereum.EVM.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FNethereum.EVM.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FNethereum.EVM.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,6 +8,7 @@\n \t<AssemblyName>Nethereum.EVM</AssemblyName>\n \t<PackageId>Nethereum.EVM</PackageId>\n \t<PackageTags>Netherum;Ethereum;Blockchain;EVM</PackageTags>\n+\t<LangVersion>9.0</LangVersion>\n </PropertyGroup>\n \n   <ItemGroup>"},{"sha":"2b72dab64ea51cbd2535044f17618b47faba0b22","filename":"src/Nethereum.EVM/Program.cs","status":"modified","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgram.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgram.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FProgram.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -110,6 +110,26 @@ public byte[] StackPeek()\n             return stack[0];\n         }\n \n+        public byte[] StackPeekAt(int index)\n+        {\n+            if (index < 0 || index >= stack.Count)\n+            {\n+                throw new Exception(\"Invalid stack index\");\n+            }\n+            return stack[index];\n+        }\n+\n+        public BigInteger StackPeekAtAndConvertToBigInteger(int index)\n+        {\n+            return StackPeekAt(index).ConvertToInt256();\n+        }\n+\n+        public BigInteger StackPeekAtAndConvertToUBigInteger(int index)\n+        {\n+            return StackPeekAt(index).ConvertToUInt256();\n+        }\n+\n+\n         public void StackSwap(int index)\n         {\n             var swapTemp = stack[0];\n@@ -213,6 +233,61 @@ public void StackPush(BigInteger value)\n             StackPush(IntTypeEncoder.EncodeSignedUnsigned256(value, 32));\n         }\n \n+        public bool IsAddressWarm(byte[] addressBytes)\n+        {\n+            return ProgramContext.ExecutionStateService.AddressIsWarm(addressBytes.ToHex());\n+        }\n \n+        public void MarkAddressAsWarm(byte[] addressBytes)\n+        {\n+            ProgramContext.ExecutionStateService.MarkAddressAsWarm(addressBytes.ToHex());\n+        }\n+\n+        public bool IsStorageSlotWarm(BigInteger key)\n+        {\n+            var state = ProgramContext.ExecutionStateService.CreateOrGetAccountExecutionState(ProgramContext.AddressContract);\n+            return state.IsStorageKeyWarm(key);\n+        }\n+\n+        public void MarkStorageSlotAsWarm(BigInteger key)\n+        {\n+            var state = ProgramContext.ExecutionStateService.CreateOrGetAccountExecutionState(ProgramContext.AddressContract);\n+            state.MarkStorageKeyAsWarm(key);\n+        }\n+\n+        public BigInteger CalculateMemoryExpansionGas(BigInteger offset, BigInteger length)\n+        {\n+            if (length == 0) return 0;\n+\n+            var currentBytes = Memory?.Count ?? 0;\n+            var currentWords = (currentBytes + 31) / 32;\n+\n+            var highestAccessedByte = (int)(offset + length);\n+            var requiredWords = (highestAccessedByte + 31) / 32;\n+\n+            if (requiredWords <= currentWords)\n+                return 0;\n+\n+            return MemoryCost(requiredWords) - MemoryCost(currentWords);\n+        }\n+\n+        private static BigInteger MemoryCost(int words)\n+        {\n+            return (words * words / 512) + (3 * words);\n+        }\n+\n+        public BigInteger TotalGasUsed { get; set; } = 0;\n+        public BigInteger GasRemaining { get; set; } = 0;\n+\n+        public void UpdateGasUsed(BigInteger gasCost)\n+        {\n+            //if (GasRemaining < gasCost)\n+            //{\n+            //    throw new Exception(\"Out of gas\");\n+            //}\n+\n+            TotalGasUsed += gasCost;\n+            GasRemaining -= gasCost;\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"bc1dbb0c9c38fa2e06f592b8b474bf2706461674","filename":"src/Nethereum.EVM/ProgramContext.cs","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgramContext.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgramContext.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FProgramContext.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,6 +4,7 @@\n using Nethereum.RLP;\n using Nethereum.RPC.Eth.DTOs;\n using Nethereum.Util;\n+using System;\n using System.Collections.Generic;\n using System.Numerics;\n using System.Text;\n@@ -32,10 +33,14 @@ public class ProgramContext\n         public BigInteger Timestamp { get; }\n         public string Coinbase { get; }\n         public BigInteger BaseFee { get; }\n+        public BigInteger BlobBaseFee { get; set; } = 0;\n+        public byte[][] BlobHashes { get; set; } = new byte[0][];\n         public BigInteger GasPrice { get; internal set; } = 0;\n         public BigInteger GasLimit { get; set; } = 10000000;\n         public BigInteger Difficulty { get; set; } = 1;\n         public BigInteger Fee { get; set; }\n+        public Dictionary<BigInteger, byte[]> TransientStorage { get; } = new();\n+        public bool IsStatic { get; set; } = false;\n \n         public ExecutionStateService ExecutionStateService { get; protected set; }\n "},{"sha":"55ec9dfa9abdd4ca458521518a93de5dc409d8d7","filename":"src/Nethereum.EVM/ProgramTrace.cs","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgramTrace.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.EVM%2FProgramTrace.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.EVM%2FProgramTrace.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,6 +1,7 @@\n ﻿using System;\n using System.Collections.Generic;\n using System.Linq;\n+using System.Numerics;\n using System.Text;\n \n namespace Nethereum.EVM\n@@ -18,13 +19,15 @@ public class ProgramTrace\n         public Dictionary<string, string> Storage { get; set; }\n         public int Depth { get; set; }\n         public List<string> MemoryAsArray { get; set; } = new List<string>();\n+        public BigInteger GasCost { get; internal set; }\n+\n         public override string ToString()\n         {\n             var builder = new StringBuilder();\n             builder.AppendLine(\"Address:\" + ProgramAddress);\n             builder.AppendLine(\"VMTraceStep Trace step:\" + VMTraceStep);\n             builder.AppendLine(\"Depth: \" + Depth);\n-\n+            builder.AppendLine(\"Gas:\" + GasCost);\n             builder.AppendLine(\"Program Trace step:\" + ProgramTraceStep);\n             builder.AppendLine(Instruction.ToDisassemblyLine());\n             if (Stack != null)"},{"sha":"4dbda0720bee113ff2c2670a91aa4fe0875bd891","filename":"src/Nethereum.Fx.csproj","status":"modified","additions":30,"deletions":17,"changes":47,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Fx.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Fx.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Fx.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -26,31 +26,31 @@\n   </ItemGroup>\n \n   <PropertyGroup>\n-    <TargetFrameworks>net8.0;net9.0;net5.0;netstandard2.0;netstandard2.1</TargetFrameworks>\n+    <TargetFrameworks>net8.0;net9.0;net6.0;netstandard2.1</TargetFrameworks>\n   </PropertyGroup>\n \n \n-\t<!--\n+\t\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'net6.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0'\">\n-    <PackageReference Include=\"BouncyCastle.Cryptography\" Version=\"[2.4.0,3.0)\" />\n+    <PackageReference Include=\"BouncyCastle.Cryptography\" Version=\"[2.6.0,3.0)\" />\n   </ItemGroup>\n \n   <ItemGroup Condition=\"'$(TargetFramework)' != 'net6.0' And '$(TargetFramework)' != 'net8.0' And '$(TargetFramework)' != 'net9.0'\">\n     <PackageReference Include=\"Portable.BouncyCastle\" Version=\"[1.8.2,2.0)\" />\n   </ItemGroup>\n \n-  Define LATEST_BOUNCYCASTLE as we're using BouncyCastle.Cryptography\n+ <!-- Define LATEST_BOUNCYCASTLE as we're using BouncyCastle.Cryptography -->\n   <PropertyGroup Condition=\"'$(TargetFramework)' == 'net6.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0'\">\n   \n     <DefineConstants>$(DefineConstants);LATEST_BOUNCYCASTLE</DefineConstants>\n   </PropertyGroup>\n-\t-->\n+\n \t<PropertyGroup>\n     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n     <OutputPath>..\\FxOutput\\Nethereum.Fx\\</OutputPath>\n   </PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net5.0|AnyCPU'\">\n+  <PropertyGroup Condition=\"'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net6.0|AnyCPU'\">\n     <Optimize>True</Optimize>\n   </PropertyGroup>\n \n@@ -62,10 +62,6 @@\n \t\t<Optimize>True</Optimize>\n \t</PropertyGroup>\n \n-  <PropertyGroup Condition=\"'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netcoreapp3.1|AnyCPU'\">\n-    <Optimize>True</Optimize>\n-  </PropertyGroup>\n-\n   <PropertyGroup Condition=\"'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|AnyCPU'\">\n     <Optimize>True</Optimize>\n   </PropertyGroup>\n@@ -74,11 +70,6 @@\n     <Optimize>True</Optimize>\n   </PropertyGroup>\n \n-  <ItemGroup Condition=\"'$(TargetFramework)' == 'netcoreapp3.1'\">\n-    <PackageReference Include=\"NBitcoin.Secp256k1\">\n-\t\t<Version>3.1.1</Version>\n-    </PackageReference>\n-  </ItemGroup>\n   <ItemGroup Condition=\"'$(TargetFramework)' == 'net8.0'\">\n     <PackageReference Include=\"NBitcoin.Secp256k1\">\n \t\t<Version>3.1.1</Version>\n@@ -89,7 +80,7 @@\n \t\t<Version>3.1.1</Version>\n     </PackageReference>\n   </ItemGroup>\n-<ItemGroup Condition=\"'$(TargetFramework)' == 'net5.0'\">\n+<ItemGroup Condition=\"'$(TargetFramework)' == 'net6.0'\">\n \t<PackageReference Include=\"NBitcoin.Secp256k1\">\n \t\t<Version>3.1.1</Version>\n \t</PackageReference>\n@@ -107,15 +98,21 @@\n     <PackageReference Include=\"NBitcoin\" Version=\"7.0.6\" />\n     <PackageReference Include=\"Newtonsoft.Json\" Version=\"[11.0.2,14)\" />\n     <PackageReference Include=\"System.Reactive\" Version=\"4.1.3\" />\n-\t<PackageReference Include=\"Portable.BouncyCastle\" Version=\"[1.8.2,2.0)\" />\n   </ItemGroup>\n \n   <ItemGroup>\n+    <Compile Remove=\"Nethereum.AccountAbstraction.SimpleAccount\\**\" />\n+    <Compile Remove=\"Nethereum.AccountAbstraction\\**\" />\n     <Compile Remove=\"Nethereum.BigInteger.N351\\**\" />\n     <Compile Remove=\"Nethereum.ClassDiagrams\\**\" />\n     <Compile Remove=\"Nethereum.ENS\\**\" />\n \t<Compile Remove=\"Nethereum.Etherscan\\**\" />\n+\t<Compile Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\bin\\**\" />\n+\t<Compile Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\obj\\**\" />\n \t<Compile Remove=\"Nethereum.JsonRpc.WebSocketStreamingClient\\obj\\**\" />\n+\t<Compile Remove=\"Nethereum.MudBlazorComponents\\**\" />\n+\t<None Remove=\"Nethereum.AccountAbstraction.SimpleAccount\\**\" />\n+\t<None Remove=\"Nethereum.AccountAbstraction\\**\" />\n \t<None Remove=\"Nethereum.Etherscan\\**\" />\n     <Compile Remove=\"Nethereum.EVM\\obj\\**\" />\n     <Compile Remove=\"Nethereum.EVM\\Properties\\**\" />\n@@ -144,10 +141,16 @@\n \n     <Compile Remove=\"Nethereum.RPC\\Properties\\**;Nethereum.RPC\\bin\\**;Nethereum.RPC\\obj\\**\" />\n \n+    <None Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\bin\\**\" />\n+\n+    <None Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\obj\\**\" />\n+\n     <None Remove=\"Nethereum.JsonRpc.UnixIpcClient\\**\" />\n \n     <None Remove=\"Nethereum.JsonRpc.WebSocketStreamingClient\\obj\\**\" />\n \n+    <None Remove=\"Nethereum.MudBlazorComponents\\**\" />\n+\n \n     <None Remove=\"Nethereum.RPC\\Properties\\**;Nethereum.RPC\\bin\\**;Nethereum.RPC\\obj\\**\" />\n \n@@ -318,6 +321,10 @@\n \n     <EmbeddedResource Remove=\"compiledlibraries\\**\" />\n \n+    <EmbeddedResource Remove=\"Nethereum.AccountAbstraction.SimpleAccount\\**\" />\n+\n+    <EmbeddedResource Remove=\"Nethereum.AccountAbstraction\\**\" />\n+\n     <EmbeddedResource Remove=\"Nethereum.BigInteger.N351\\**\" />\n \n     <EmbeddedResource Remove=\"Nethereum.ClassDiagrams\\**\" />\n@@ -330,10 +337,16 @@\n \n     <EmbeddedResource Remove=\"Nethereum.GSN\\**\" />\n \n+    <EmbeddedResource Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\bin\\**\" />\n+\n+    <EmbeddedResource Remove=\"Nethereum.JsonRpc.SystemTextJsonRpcClient\\obj\\**\" />\n+\n     <EmbeddedResource Remove=\"Nethereum.JsonRpc.UnixIpcClient\\**\" />\n \n     <EmbeddedResource Remove=\"Nethereum.JsonRpc.WebSocketStreamingClient\\obj\\**\" />\n \n+    <EmbeddedResource Remove=\"Nethereum.MudBlazorComponents\\**\" />\n+\n     <EmbeddedResource Remove=\"Nethereum.Signer.AzureKeyVault\\**\" />\n \n     <EmbeddedResource Remove=\"Nethereum.Signer.Ledger\\**\" />"},{"sha":"e69de29bb2d1d6434b8b29ae775ad8c2e48c5391","filename":"src/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.d.ts","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.d.ts?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"72a743e219599af7750c0eab583e077f8c82fef7","filename":"src/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.js","status":"added","additions":5758,"deletions":0,"changes":5758,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"37d75d1d17e4f426baff67fe448ae5c730b4b9b8","filename":"src/Nethereum.Generators.JavaScript/Nethereum.Generators.DuoCode.js.map","status":"added","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Generators.JavaScript%2FNethereum.Generators.DuoCode.js.map?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"e9fa93361e3d1149757cdf55c29c7be57566bc4f","filename":"src/Nethereum.Geth/MinerApiService.cs","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FMinerApiService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FMinerApiService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FMinerApiService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,5 +1,4 @@\n using Nethereum.Geth.RPC.Miner;\n-using Nethereum.Geth.RPC.TxnPool;\n using Nethereum.JsonRpc.Client;\n using Nethereum.RPC;\n "},{"sha":"ecf8207ae01c6e0af0358916572551a3e942f332","filename":"src/Nethereum.Geth/Nethereum.Geth.csproj","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FNethereum.Geth.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FNethereum.Geth.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FNethereum.Geth.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -25,5 +25,8 @@\n   <ItemGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetUnityNet461AOT)' != 'true'\">\n     <None Include=\"..\\..\\NethereumKey.snk\" />\n   </ItemGroup>\n+  <ItemGroup>\n+    <Folder Include=\"RPC\\DTOs\\\" />\n+  </ItemGroup>\n \n </Project>"},{"sha":"a4e4854628ed76dc6fd5c5b079c7642d39f6ea04","filename":"src/Nethereum.Geth/RPC/ApiMethods.cs","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FApiMethods.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FApiMethods.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FApiMethods.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -39,6 +39,7 @@ public enum ApiMethods\n         debug_startGoTrace,\n         debug_stopCPUProfile,\n         debug_stopGoTrace,\n+        debug_traceBadBlock,\n         debug_traceBlock,\n         debug_traceBlockByNumber,\n         debug_traceBlockByHash,"},{"sha":"256b4f3a1689198e4ce3f0263966529e42626b79","filename":"src/Nethereum.Geth/RPC/DTOs/StateChange.cs","status":"removed","additions":0,"deletions":40,"changes":40,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FDTOs%2FStateChange.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FDTOs%2FStateChange.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FDTOs%2FStateChange.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,40 +0,0 @@\n-using System.Runtime.Serialization;\n-using Nethereum.Hex.HexTypes;\n-using Newtonsoft.Json;\n-using Newtonsoft.Json.Linq;\n-\n-namespace Nethereum.Geth.RPC.DTOs\n-{\n-\n-    public class StateChange\n-\n-    {\n-        /// <summary>\n-        /// Fake balance to set for the account before executing the call.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"balance\")]\n-        public HexBigInteger Balance { get; set; }\n-        /// <summary>\n-        /// Fake nonce to set for the account before executing the call.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"nonce\")]\n-        public HexBigInteger Nonce { get; set; }\n-        /// <summary>\n-        /// Fake EVM bytecode to inject into the account before executing the call.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"code\")]\n-        public string Code { get; set; }\n-\n-        /// <summary>\n-        /// Fake key-value mapping to override all slots in the account storage before executing the call.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"state\")]\n-        public JObject State { get; set; }\n-\n-        /// <summary>\n-        /// Fake key-value mapping to override individual slots in the account storage before executing the call.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"stateDiff\")]\n-        public JObject StateDiff { get; set; }\n-    }\n-}\n\\ No newline at end of file"},{"sha":"cdd7baf1b583020925e4a5bc6928741ea3c0ffbb","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/BlockOverridesDto.cs","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockOverridesDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockOverridesDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockOverridesDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,76 @@\n+using System.Collections.Generic;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    /// <summary>\n+    /// The fields of this object customize the block as part of which a call is simulated.\n+    /// </summary>\n+    public class BlockOverridesDto\n+    {\n+        /// <summary>\n+        /// Block number.\n+        /// </summary>\n+        [JsonProperty(\"number\")]\n+        public HexBigInteger Number { get; set; }\n+\n+        /// <summary>\n+        /// The previous value of randomness beacon.\n+        /// </summary>\n+        [JsonProperty(\"prevRandao\")]\n+        public HexBigInteger PrevRandao { get; set; }\n+\n+        /// <summary>\n+        /// Block timestamp.\n+        /// </summary>\n+        [JsonProperty(\"time\")]\n+        public HexBigInteger Time { get; set; }\n+\n+        /// <summary>\n+        /// Gas limit\n+        /// </summary>\n+        [JsonProperty(\"gasLimit\")]\n+        public HexBigInteger GasLimit { get; set; }\n+\n+        /// <summary>\n+        /// Fee recipient (also known as coinbase).\n+        /// </summary>\n+        [JsonProperty(\"feeRecipient\")]\n+        public string FeeRecipient { get; set; }\n+\n+        /// <summary>\n+        /// Withdrawals made by validators.\n+        /// </summary>\n+        [JsonProperty(\"withdrawals\")]\n+        public List<Withdrawal> Withdrawals { get; set; }\n+\n+        /// <summary>\n+        /// Base fee per unit of gas (see EIP-1559).\n+        /// </summary>\n+        [JsonProperty(\"baseFeePerGas\")]\n+        public string BaseFeePerGas { get; set; }\n+\n+        /// <summary>\n+        /// Base fee per unit of blob gas (see EIP-4844).\n+        /// </summary>\n+        [JsonProperty(\"blobBaseFee\")]\n+        public HexBigInteger BlobBaseFee { get; set; }\n+        \n+    }\n+    \n+    public class Withdrawal\n+    {\n+        [JsonProperty(\"index\")]\n+        public HexBigInteger Index { get; set; }\n+\n+        [JsonProperty(\"validatorIndex\")]\n+        public HexBigInteger ValidatorIndex { get; set; }\n+\n+        [JsonProperty(\"address\")]\n+        public string Address { get; set; }\n+\n+        [JsonProperty(\"amount\")]\n+        public HexBigInteger Amount { get; set; }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"0504f6e78db72007c81505eb1cc7de3d17485aff","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/BlockResponseDto.cs","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockResponseDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockResponseDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FBlockResponseDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,21 @@\n+using System.Collections.Generic;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class BlockResponseItemDto<TTracerResponse>\n+    {\n+        [JsonProperty(PropertyName = \"txHash\")]\n+        public string TxHash { get; set; }\n+        \n+        [JsonProperty(PropertyName = \"result\")]\n+        public TTracerResponse Result { get; set; }\n+    }\n+\n+    public class BlockResponseDto<TTracerResponse> : List<BlockResponseItemDto<TTracerResponse>>\n+    {\n+        \n+    }\n+\n+    \n+}\n\\ No newline at end of file"},{"sha":"b9bcac18c5abb07a25354da217ae367a85f6967c","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/ITracerConfigDto.cs","status":"added","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FITracerConfigDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FITracerConfigDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FITracerConfigDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,7 @@\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public interface ITracerConfigDto\n+    {\n+        \n+    }\n+}\n\\ No newline at end of file"},{"sha":"c9a936811b5e324f8280c1f788ebee3339cd7446","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/StateOverrideDto.cs","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FStateOverrideDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FStateOverrideDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FStateOverrideDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,49 @@\n+using System.Collections.Generic;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    /// <summary>\n+    /// The state override set is an optional address-to-state mapping, used in eth_call and eth_simulateV1, where each\n+    /// entry specifies some state to be ephemerally overridden prior to executing the call\n+    /// </summary>\n+    public class StateOverrideDto\n+    {\n+        /// <summary>\n+        /// Fake balance to set for the account before executing the call.\n+        /// </summary>\n+        [JsonProperty(\"balance\")]\n+        public HexBigInteger Balance { get; set; }\n+\n+        /// <summary>\n+        /// Fake nonce to set for the account before executing the call.\n+        /// </summary>\n+        [JsonProperty(\"nonce\")]\n+        public string Nonce { get; set; }\n+\n+        /// <summary>\n+        /// Fake EVM bytecode to inject into the account before executing the call.\n+        /// </summary>\n+        [JsonProperty(\"code\")]\n+        public string Code { get; set; }\n+\n+        /// <summary>\n+        /// Fake key-value mapping to override all slots in the account storage before executing the call.\n+        /// </summary>\n+        [JsonProperty(\"state\")]\n+        public Dictionary<string, string> State { get; set; }\n+\n+        /// <summary>\n+        /// Fake key-value mapping to override individual slots in the account storage before executing the call.\n+        /// </summary>\n+        [JsonProperty(\"stateDiff\")]\n+        public Dictionary<string, string> StateDiff { get; set; }\n+\n+        /// <summary>\n+        /// Moves precompile to given address\n+        /// </summary>\n+        [JsonProperty(\"movePrecompileToAddress\")]\n+        public string MovePrecompileToAddress { get; set; }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"4ce547afe9fab722ff8caa134679562f8608f532","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TraceCallConfigDto.cs","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallConfigDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallConfigDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallConfigDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,28 @@\n+using System.Collections.Generic;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class TraceCallConfigDto : TraceConfigDto\n+    {\n+        /// <summary>\n+        /// Overrides for the state data (accounts/storage) for the call.\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"stateOverrides\")]\n+        public Dictionary<string, StateOverrideDto> StateOverrides { get; set; }\n+        \n+        /// <summary>\n+        /// Overrides for the block data (number, timestamp etc) for the call.\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"blockOverrides\")]\n+        public BlockOverridesDto BlockOverridesDto { get; set; }\n+        \n+        /// <summary>\n+        /// If set, the state at the given transaction index will be used to tracing\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"txIndex\")]\n+        public HexBigInteger TxIndex { get; set; }\n+        \n+    }\n+}\n\\ No newline at end of file"},{"sha":"aa2e6ca5bc21e5c646a86db5f5835f541e2b2298","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TraceCallOptions.cs","status":"removed","additions":0,"deletions":21,"changes":21,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallOptions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallOptions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceCallOptions.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,21 +0,0 @@\n-﻿using System.Runtime.Serialization;\n-using Newtonsoft.Json;\n-\n-namespace Nethereum.Geth.RPC.Debug.DTOs\n-{\n-    public class TraceCallOptions\n-    {\n-        /// <summary>\n-        /// Setting this will enable JavaScript-based transaction tracing.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"tracer\")]\n-        public string Tracer { get; set; }\n-\n-        /// <summary>\n-        /// Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Valid values are described here:\n-        /// https://golang.org/pkg/time/#ParseDuration\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"timeout\")]\n-        public string Timeout { get; set; }\n-    }\n-}"},{"sha":"8984945884c5219c3b96defb51913d4a641f3401","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TraceConfigDto.cs","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceConfigDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceConfigDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceConfigDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,35 @@\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class TraceConfigDto\n+    {\n+        /// <summary>\n+        /// Name for built-in tracer or Javascript expression.\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"tracer\")]\n+        public string Tracer { get; set; }\n+\n+        /// <summary>\n+        /// Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Valid values are described here:\n+        /// https://golang.org/pkg/time/#ParseDuration\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"timeout\")]\n+        public string Timeout { get; set; }\n+        \n+        /// <summary>\n+        /// Config for the specified tracer formatted as a JSON object\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"tracerConfig\")]\n+        public ITracerConfigDto TracerConfig { get; set; }\n+        \n+        /// <summary>\n+        /// The number of blocks the tracer is willing to go back and re-execute to produce missing historical state\n+        /// necessary to run a specific trace.\n+        /// </summary>\n+        [JsonProperty(PropertyName = \"reexec\")]\n+        public long? Reexec { get; set; }\n+    }\n+\n+    \n+}\n\\ No newline at end of file"},{"sha":"6b6997fa1faf1e4bbd129476273f5e798ccc2a18","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TraceTransactionOptions.cs","status":"removed","additions":0,"deletions":49,"changes":49,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceTransactionOptions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceTransactionOptions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTraceTransactionOptions.cs?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,49 +0,0 @@\n-﻿using System.Runtime.Serialization;\n-using Newtonsoft.Json;\n-\n-namespace Nethereum.Geth.RPC.Debug.DTOs\n-{\n-    public class TraceTransactionOptions\n-    {\n-        /// <summary>\n-        ///     Setting this to true will disable storage capture (default = false).\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"disableStorage\")]\n-        public bool DisableStorage { get; set; }\n-\n-        /// <summary>\n-        ///     Setting this to true will disable memory capture (default = false).\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"disableMemory\")]\n-        public bool DisableMemory { get; set; }\n-\n-        /// <summary>\n-        ///     Setting this to true will disable stack capture (default = false).\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"disableStack\")]\n-        public bool DisableStack { get; set; }\n-\n-        /// <summary>\n-        ///     Setting this to true will return you, for each opcode, the full storage, including everything which hasn't changed.\n-        ///     This is a slow process and is therefor defaulted to false. By default it will only ever give you the changed\n-        ///     storage values.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"fullStorage\")]\n-        public bool FullStorage { get; set; }\n-        \n-        /// <summary>\n-        /// Setting this will enable JavaScript-based transaction tracing, described below.\n-        /// If set, the previous four arguments will be ignored.\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"tracer\")]\n-        public string Tracer { get; set; }\n-\n-        /// <summary>\n-        /// Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Valid values are described here:\n-        /// https://golang.org/pkg/time/#ParseDuration\n-        /// </summary>\n-        [JsonProperty(PropertyName = \"timeout\")]\n-        public string Timeout { get; set; }\n-        \n-    }\n-}\n\\ No newline at end of file"},{"sha":"b653c9ffe3e63a595e36c7c08b989c612fa866e1","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TracerConfigDto.cs","status":"added","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerConfigDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerConfigDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerConfigDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,9 @@\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.GethDebug.Tracers\n+{\n+    public class TracerConfigDto<TTracer> : ITracerConfigDto\n+    {\n+        \n+    }\n+}\n\\ No newline at end of file"},{"sha":"3b003eb5a75e061946b28be84322e8ec9ebf8656","filename":"src/Nethereum.Geth/RPC/GethDebug/DTOs/TracerLogDto.cs","status":"added","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerLogDto.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerLogDto.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDTOs%2FTracerLogDto.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,14 @@\n+using System.Collections.Generic;\n+using Nethereum.Hex.HexTypes;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class TracerLogDto\n+    {\n+        public string Address { get; set; }\n+        public string Data { get; set; }\n+        public List<object> Topics { get; set; }\n+        public HexBigInteger Position { get; set; }\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"8ec78d54040ab8eaeea8b3503f4332d063142603","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceBadBlock.cs","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBadBlock.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBadBlock.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBadBlock.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,34 @@\n+using System.Threading.Tasks;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.JsonRpc.Client;\n+using Newtonsoft.Json.Linq;\n+\n+namespace Nethereum.Geth.RPC.Debug\n+{\n+    /// <Summary>\n+    ///     Returns the structured logs created during the execution of EVM against a block pulled from the pool of\n+    ///     bad ones and returns them as a JSON object.\n+    /// </Summary>\n+    public class DebugTraceBadBlock : RpcRequestResponseHandler<JArray>, IDebugTraceBadBlock\n+    {\n+        public DebugTraceBadBlock(IClient client) : base(client, ApiMethods.debug_traceBadBlock.ToString())\n+        {\n+        }\n+\n+        public RpcRequest BuildRequest(string blockHash, TracingCallOptions options, object id = null)\n+        {\n+            return base.BuildRequest(id, blockHash, options.ToDto());\n+        }\n+        \n+        public Task<JArray> SendRequestAsync(string blockHash, TracingCallOptions options, object id = null)\n+        {\n+            return base.SendRequestAsync(id, blockHash, options.ToDto());\n+        }\n+\n+        public async Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string blockHash, TracingCallOptions options, object id = null)\n+        {\n+            var rawResult = await base.SendRequestAsync(id, blockHash, options.ToDto());\n+            return rawResult.ToObject<BlockResponseDto<TOutput>>();\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"dc83ba8b1ee0bd1c12c3274fb73bcf15c1e32906","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceBlock.cs","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlock.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlock.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlock.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -15,14 +15,21 @@ public DebugTraceBlock(IClient client) : base(client, ApiMethods.debug_traceBloc\n         {\n         }\n \n-        public RpcRequest BuildRequest(string blockRlpHex, TraceTransactionOptions options, object id = null)\n+        public RpcRequest BuildRequest(string blockRlpHex, TracingCallOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, blockRlpHex, options);\n+            return base.BuildRequest(id, blockRlpHex, options.ToDto());\n+        }\n+        \n+        public Task<JArray> SendRequestAsync(string blockRlpHex, TracingCallOptions options, object id = null)\n+        {\n+            return base.SendRequestAsync(id, blockRlpHex, options.ToDto());\n         }\n \n-        public Task<JArray> SendRequestAsync(string blockRlpHex, TraceTransactionOptions options, object id = null)\n+        public async Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string blockRlpHex, TracingCallOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, blockRlpHex, options);\n+            var rawResult = await base.SendRequestAsync(id, blockRlpHex, options.ToDto());\n+            return rawResult.ToObject<BlockResponseDto<TOutput>>();\n         }\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"060b042cbb7f8e8ccca1dfb87d470c2f8b28f0f6","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceBlockByHash.cs","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByHash.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByHash.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByHash.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -15,14 +15,20 @@ public DebugTraceBlockByHash(IClient client) : base(client, ApiMethods.debug_tra\n         {\n         }\n \n-        public RpcRequest BuildRequest(string hash, TraceTransactionOptions options, object id = null)\n+        public RpcRequest BuildRequest(string hash, TracingCallOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, hash, options);\n+            return base.BuildRequest(id, hash, options.ToDto());\n+        }\n+        \n+        public Task<JArray> SendRequestAsync(string hash, TracingCallOptions options, object id = null)\n+        {\n+            return base.SendRequestAsync(id, hash, options.ToDto());\n         }\n \n-        public Task<JArray> SendRequestAsync(string hash, TraceTransactionOptions options, object id = null)\n+        public async Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string hash, TracingCallOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, hash, options);\n+            var rawResult = await base.SendRequestAsync(id, hash, options.ToDto());\n+            return rawResult.ToObject<BlockResponseDto<TOutput>>();\n         }\n     }\n }\n\\ No newline at end of file"},{"sha":"174688f9b1263645e35655c7834bb8c0238df00b","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceBlockByNumber.cs","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByNumber.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByNumber.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockByNumber.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -16,14 +16,20 @@ public DebugTraceBlockByNumber(IClient client) : base(client, ApiMethods.debug_t\n         {\n         }\n \n-        public RpcRequest BuildRequest(ulong blockNumber, TraceTransactionOptions options, object id = null)\n+        public RpcRequest BuildRequest(ulong blockNumber, TracingCallOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, new HexBigInteger(blockNumber), options);\n+            return base.BuildRequest(id, new HexBigInteger(blockNumber), options.ToDto());\n+        }\n+        \n+        public Task<JArray> SendRequestAsync(ulong blockNumber, TracingCallOptions options, object id = null)\n+        {\n+            return base.SendRequestAsync(id, new HexBigInteger(blockNumber), options.ToDto());\n         }\n \n-        public Task<JArray> SendRequestAsync(ulong blockNumber, TraceTransactionOptions options, object id = null)\n+        public async Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(ulong blockNumber, TracingCallOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, new HexBigInteger(blockNumber), options);\n+            var rawResult = await base.SendRequestAsync(id, new HexBigInteger(blockNumber), options.ToDto());\n+            return rawResult.ToObject<BlockResponseDto<TOutput>>();\n         }\n     }\n }\n\\ No newline at end of file"},{"sha":"e422b1fbdb6dce9d0262949acfc923935d75901b","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceBlockFromFile.cs","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockFromFile.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockFromFile.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceBlockFromFile.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -14,14 +14,22 @@ public DebugTraceBlockFromFile(IClient client) : base(client, ApiMethods.debug_t\n         {\n         }\n          \n-        public RpcRequest BuildRequest(string filePath, TraceTransactionOptions options, object id = null)\n+        public RpcRequest BuildRequest(string filePath, TracingCallOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, filePath, options);\n+            return base.BuildRequest(id, filePath, options.ToDto());\n+        }\n+        \n+        public Task<JArray> SendRequestAsync(string filePath, TracingCallOptions options, object id = null)\n+        {\n+            return base.SendRequestAsync(id, filePath, options.ToDto());\n         }\n \n-        public Task<JArray> SendRequestAsync(string filePath, TraceTransactionOptions options, object id = null)\n+        public async Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string filePath, TracingCallOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, filePath, options);\n+            var rawResult = await base.SendRequestAsync(id, filePath, options.ToDto());\n+            return rawResult.ToObject<BlockResponseDto<TOutput>>();\n         }\n+        \n+        \n     }\n }\n\\ No newline at end of file"},{"sha":"424f3f6e680628066635e39bbeb51a52941aa2ed","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceCall.cs","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceCall.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceCall.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceCall.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -26,14 +26,22 @@ public DebugTraceCall(IClient client) : base(client, ApiMethods.debug_traceCall.\n         {\n         } \n \n-        public RpcRequest BuildRequest(CallInput callArgs, string blockNrOrHash, TraceCallOptions options, object id = null)\n+        // TODO change blockNrOrHash on BlockParameter?\n+        public RpcRequest BuildRequest(CallInput callArgs, string blockNrOrHash, TracingCallOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, callArgs, blockNrOrHash, options);\n+            return base.BuildRequest(id, callArgs, blockNrOrHash, options.ToDto());\n         }\n \n-        public Task<JObject> SendRequestAsync(CallInput callArgs, string blockNrOrHash, TraceCallOptions options, object id = null)\n+        public Task<JObject> SendRequestAsync(CallInput callArgs, string blockNrOrHash, TracingCallOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, callArgs, blockNrOrHash, options);\n+            return base.SendRequestAsync(id, callArgs, blockNrOrHash, options.ToDto());\n         }\n+        \n+        public async Task<TOutput> SendRequestAsync<TOutput>(CallInput callArgs, string blockNrOrHash, TracingCallOptions options, object id = null)\n+        {\n+            var rawResult = await base.SendRequestAsync(id, callArgs, blockNrOrHash, options.ToDto());\n+            return rawResult.ToObject<TOutput>();\n+        }\n+        \n     }\n }\n\\ No newline at end of file"},{"sha":"d6c2ffe3c465185866d839b0f1f057b008d49492","filename":"src/Nethereum.Geth/RPC/GethDebug/DebugTraceTransaction.cs","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceTransaction.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceTransaction.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FDebugTraceTransaction.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -18,20 +18,27 @@ namespace Nethereum.Geth.RPC.Debug\n     ///     which hasn't changed. This is a slow process and is therefor defaulted to false. By default it will only ever give\n     ///     you the changed storage values.\n     /// </Summary>\n-    public class DebugTraceTransaction : RpcRequestResponseHandler<JObject>, IDebugTraceTransaction\n+    public class DebugTraceTransaction : RpcRequestResponseHandler<JToken>, IDebugTraceTransaction\n     {\n         public DebugTraceTransaction(IClient client) : base(client, ApiMethods.debug_traceTransaction.ToString())\n         {\n         } \n \n-        public RpcRequest BuildRequest(string txnHash, TraceTransactionOptions options, object id = null)\n+        public RpcRequest BuildRequest(string txnHash, TracingOptions options, object id = null)\n         {\n-            return base.BuildRequest(id, txnHash, options);\n+            return base.BuildRequest(id, txnHash, options.ToDto());\n         }\n \n-        public Task<JObject> SendRequestAsync(string txnHash, TraceTransactionOptions options, object id = null)\n+        public Task<JToken> SendRequestAsync(string txnHash, TracingOptions options, object id = null)\n         {\n-            return base.SendRequestAsync(id, txnHash, options);\n+            return base.SendRequestAsync(id, txnHash, options.ToDto());\n         }\n+        \n+        public async Task<TOutput> SendRequestAsync<TOutput>(string txnHash, TracingOptions options, object id = null)\n+        {\n+            var rawResult = await base.SendRequestAsync(id, txnHash, options.ToDto());\n+            return rawResult.ToObject<TOutput>();\n+        }\n+        \n     }\n }\n\\ No newline at end of file"},{"sha":"433886b18e41299cfdec35f19d9f40c65f85aa2c","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceBadBlock.cs","status":"added","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBadBlock.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBadBlock.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBadBlock.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,15 @@\n+﻿using System.Threading.Tasks;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.JsonRpc.Client;\n+using Newtonsoft.Json.Linq;\n+\n+namespace Nethereum.Geth.RPC.Debug\n+{\n+    public interface IDebugTraceBadBlock\n+    {\n+        RpcRequest BuildRequest(string blockHash, TracingCallOptions options, object id = null);\n+        Task<JArray> SendRequestAsync(string blockHash, TracingCallOptions options, object id = null);\n+        Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string blockHash, TracingCallOptions options, object id = null);\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"f14b471ea6617b87f7af00be9402ff42c17d43a6","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceBlock.cs","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlock.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlock.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlock.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,11 @@ namespace Nethereum.Geth.RPC.Debug\n {\n     public interface IDebugTraceBlock\n     {\n-        RpcRequest BuildRequest(string blockRlpHex, TraceTransactionOptions options, object id = null);\n-        Task<JArray> SendRequestAsync(string blockRlpHex, TraceTransactionOptions options, object id = null);\n+        RpcRequest BuildRequest(string blockRlpHex, TracingCallOptions options, object id = null);\n+        Task<JArray> SendRequestAsync(string blockRlpHex, TracingCallOptions options, object id = null);\n+\n+        Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string blockRlpHex,\n+            TracingCallOptions options, object id = null);\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"79eb1b727f7f7cd54c2753e6ac62290bfc0f64ad","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceBlockByHash.cs","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByHash.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByHash.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByHash.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,11 @@ namespace Nethereum.Geth.RPC.Debug\n {\n     public interface IDebugTraceBlockByHash\n     {\n-        RpcRequest BuildRequest(string hash, TraceTransactionOptions options, object id = null);\n-        Task<JArray> SendRequestAsync(string hash,TraceTransactionOptions options, object id = null);\n+        RpcRequest BuildRequest(string hash, TracingCallOptions options, object id = null);\n+        Task<JArray> SendRequestAsync(string hash, TracingCallOptions options, object id = null);\n+\n+        Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string hash, TracingCallOptions options,\n+            object id = null);\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"6b2f8a2eb0cd17c1993debf0f3fdae4575bfb26b","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceBlockByNumber.cs","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByNumber.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByNumber.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockByNumber.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,10 @@ namespace Nethereum.Geth.RPC.Debug\n {\n     public interface IDebugTraceBlockByNumber\n     {\n-        RpcRequest BuildRequest(ulong blockNumber, TraceTransactionOptions options, object id = null);\n-        Task<JArray> SendRequestAsync(ulong blockNumber, TraceTransactionOptions options = null, object id = null);\n+        RpcRequest BuildRequest(ulong blockNumber, TracingCallOptions options, object id = null);\n+        Task<JArray> SendRequestAsync(ulong blockNumber, TracingCallOptions options = null, object id = null);\n+        Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(ulong blockNumber, TracingCallOptions options,\n+            object id = null);\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"3c5f15dd85dc4f20bf64ad8812a3bdcf548b885d","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceBlockFromFile.cs","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockFromFile.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockFromFile.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceBlockFromFile.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,9 @@ namespace Nethereum.Geth.RPC.Debug\n {\n     public interface IDebugTraceBlockFromFile\n     {\n-        RpcRequest BuildRequest(string filePath, TraceTransactionOptions options, object id = null);\n-        Task<JArray> SendRequestAsync(string filePath, TraceTransactionOptions options, object id = null);\n+        RpcRequest BuildRequest(string filePath, TracingCallOptions options, object id = null);\n+        Task<JArray> SendRequestAsync(string filePath, TracingCallOptions options, object id = null);\n+        Task<BlockResponseDto<TOutput>> SendRequestAsync<TOutput>(string filePath, TracingCallOptions options, object id = null);\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"1ac142ad94fe78e147bac49f55e56a8b7143f8ea","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceCall.cs","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceCall.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceCall.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceCall.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,7 +8,13 @@ namespace Nethereum.Geth.RPC.Debug\n {\n     public interface IDebugTraceCall\n     {\n-        RpcRequest BuildRequest(CallInput callArgs, string blockNrOrHash, TraceCallOptions options, object id = null);\n-        Task<JObject> SendRequestAsync(CallInput callArgs, string blockNrOrHash, TraceCallOptions options, object id = null);\n+        RpcRequest BuildRequest(CallInput callArgs, string blockNrOrHash, TracingCallOptions options, object id = null);\n+\n+        Task<JObject> SendRequestAsync(CallInput callArgs, string blockNrOrHash, TracingCallOptions options,\n+            object id = null);\n+\n+        Task<TOutput> SendRequestAsync<TOutput>(CallInput callArgs, string blockNrOrHash,\n+            TracingCallOptions options, object id = null);\n+\n     }\n }\n\\ No newline at end of file"},{"sha":"69978b6ed253bafd7b43c4f2f4aedde2a39cc8ee","filename":"src/Nethereum.Geth/RPC/GethDebug/IDebugTraceTransaction.cs","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceTransaction.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceTransaction.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FIDebugTraceTransaction.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -5,9 +5,11 @@\n \n namespace Nethereum.Geth.RPC.Debug\n {\n-    public interface IDebugTraceTransaction\n+    public interface IDebugTraceTransaction \n     {\n-        RpcRequest BuildRequest(string txnHash, TraceTransactionOptions options, object id = null);\n-        Task<JObject> SendRequestAsync(string txnHash, TraceTransactionOptions options, object id = null);\n+        RpcRequest BuildRequest(string txnHash, TracingOptions options, object id = null);\n+        Task<JToken> SendRequestAsync(string txnHash, TracingOptions options, object id = null);\n+        Task<TOutput> SendRequestAsync<TOutput>(string txnHash, TracingOptions options,\n+            object id = null);\n     }\n }\n\\ No newline at end of file"},{"sha":"178558767f0215cdd99a9b6372f0c274012ffe96","filename":"src/Nethereum.Geth/RPC/GethDebug/TracerInfo.cs","status":"added","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracerInfo.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracerInfo.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracerInfo.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,9 @@\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public abstract class TracerInfo\n+    {\n+        public abstract string Tracer { get; }\n+        public abstract ITracerConfigDto TracerConfig { get; set; }\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"9d390c047d099530b13fab142eefa3c78756e276","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/BigramTracer.cs","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FBigramTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FBigramTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FBigramTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,26 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// The bigramTracer counts the opcode bigrams, i.e. how many times 2 opcodes were executed one after the other.\n+    /// </summary>\n+    /// \n+    /// Return type: BigramResponse\n+\n+    public class BigramTracer { }\n+    \n+    public class BigramTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"bigramTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+\n+    public class BigramTracerResponse : Dictionary<string, long>\n+    {\n+        \n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"0c9f660c257fa17e9e360a980ae1ed4dc8e161cd","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/CallTracer.cs","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCallTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCallTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCallTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,134 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.Geth.RPC.GethDebug.Tracers;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// The callTracer tracks all the call frames executed during a transaction, including depth 0.\n+    /// The result will be a nested list of call frames, resembling how EVM works.\n+    /// They form a tree with the top-level call at root and sub-calls as children of the higher levels.\n+    /// </summary>\n+    ///\n+    /// Return type: CallTracerResponse\n+\n+    public class CallTracer { }\n+        \n+    public class CallTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"callTracer\";\n+        public override ITracerConfigDto TracerConfig { get; set; }\n+\n+        public CallTracerInfo(bool? onlyTopCall, bool? withLog)\n+        {\n+            if (onlyTopCall != null || withLog != null)\n+            {\n+                TracerConfig = new CallTracerConfigDto\n+                {\n+                    OnlyTopCall = onlyTopCall ?? default, \n+                    WithLog = withLog ?? default\n+                };\n+            }\n+            \n+        }\n+    }\n+    \n+    \n+    public class CallTracerConfigDto : TracerConfigDto<CallTracer>\n+    {\n+         \n+        /// <summary>\n+        /// Instructs the tracer to only process the main (top-level) call and none of the sub-calls.\n+        /// This avoids extra processing for each call frame if only the top-level call info are required.\n+        /// </summary>\n+        [JsonProperty(\"onlyTopCall\")]\n+        public bool OnlyTopCall { get; set; } = false;\n+\n+        /// <summary>\n+        /// Instructs the tracer to also collect the logs emitted during each call.\n+        /// </summary>\n+        [JsonProperty(\"withLog\")]\n+        public bool WithLog { get; set; } = false;\n+\n+    }\n+    \n+    \n+    public class CallTracerResponse\n+    {\n+        /// <summary>\n+        /// CALL, STATICCALL or CREATE\n+        /// </summary>\n+        [JsonProperty(\"type\")]\n+        public string Type { get; set; }\n+\n+        /// <summary>\n+        /// From address\n+        /// </summary>\n+        [JsonProperty(\"from\")]\n+        public string From { get; set; }\n+\n+        /// <summary>\n+        /// To address\n+        /// </summary>\n+        [JsonProperty(\"to\")]\n+        public string To { get; set; }\n+\n+        /// <summary>\n+        /// Hex-encoded amount of value transfer\n+        /// </summary>\n+        [JsonProperty(\"value\")]\n+        public HexBigInteger Value { get; set; }\n+\n+        /// <summary>\n+        /// Hex-encoded gas provided for call\n+        /// </summary>\n+        [JsonProperty(\"gas\")]\n+        public HexBigInteger Gas { get; set; }\n+\n+        /// <summary>\n+        /// Hex-encoded gas used during call\n+        /// </summary>\n+        [JsonProperty(\"gasUsed\")]\n+        public HexBigInteger GasUsed { get; set; }\n+\n+        /// <summary>\n+        /// Call data\n+        /// </summary>\n+        [JsonProperty(\"input\")]\n+        public string Input { get; set; }\n+\n+        /// <summary>\n+        /// Return data\n+        /// </summary>\n+        [JsonProperty(\"output\")]\n+        public string Output { get; set; }\n+        \n+        /// <summary>\n+        /// Error, if any\n+        /// </summary>\n+        [JsonProperty(\"error\")]\n+        public string Error { get; set; }\n+        \n+        /// <summary>\n+        /// Solidity revert reason, if any\n+        /// </summary>\n+        [JsonProperty(\"revertReason\")]\n+        public string RevertReason { get; set; }\n+\n+        /// <summary>\n+        /// Inner calls\n+        /// </summary>\n+        [JsonProperty(\"calls\")]\n+        public List<CallTracerResponse> Calls { get; set; }\n+        \n+        /// <summary>\n+        /// Emitted logs\n+        /// </summary>\n+        [JsonProperty(\"logs\")]\n+        public List<TracerLogDto> Logs { get; set; }\n+        \n+    }\n+    \n+}\n\\ No newline at end of file"},{"sha":"3aadd910ab4e591ef4eee01934f06989fee05e27","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/CustomTracer.cs","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCustomTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCustomTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FCustomTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,25 @@\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// JavaScript based tracer for the custom tracing logic\n+    /// (See: https://geth.ethereum.org/docs/developers/evm-tracing/custom-tracer#custom-javascript-tracing)\n+    /// </summary>\n+    ///\n+\n+    public class CustomTracer { }\n+        \n+    public class CustomTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; }\n+        public override ITracerConfigDto TracerConfig { get; set; }\n+\n+        \n+        public CustomTracerInfo(string tracerCode)\n+        {\n+            Tracer = \"{\" + tracerCode + \"}\";\n+        }\n+    }\n+    \n+}\n\\ No newline at end of file"},{"sha":"53ba03273be68fbf3596262c5bd8ff878e1c2477","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/EvmdisTracer.cs","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FEvmdisTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FEvmdisTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FEvmdisTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,43 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// evmdisTracer returns sufficient information from a trace to perform evmdis-style disassembly.\n+    /// </summary>\n+    /// \n+    /// Return type: EvmdisTracerResponse\n+\n+    public class EvmdisTracerTracer { }\n+    \n+    public class EvmdisTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"evmdisTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+    \n+    public class EvmdisTracerResponse : List<EvmdisTracerResponseItem>\n+    {\n+        \n+    }\n+\n+    public class EvmdisTracerResponseItem\n+    {\n+        [JsonProperty(\"depth\")]\n+        public long Depth { get; set; }\n+        \n+        [JsonProperty(\"len\")]\n+        public long Len { get; set; }\n+        \n+        [JsonProperty(\"op\")]\n+        public long Op { get; set; }\n+        \n+        [JsonProperty(\"result\")]\n+        public List<string> Result { get; set; }\n+        \n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"23d2cf8701d246d323b2bafe5308c57b5e5538e5","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/FourByteTracer.cs","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FFourByteTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FFourByteTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FFourByteTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,28 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// The 4byteTracer collects the function selectors of every function executed in the lifetime of a transaction,\n+    /// along with the size of the supplied call data. The result is a map[string]int where the keys are\n+    /// SELECTOR-CALLDATASIZE and the values are number of occurrences of this key\n+    /// </summary>\n+    /// \n+    /// Return type: FourByteResponse\n+\n+    public class FourByteTracer { }\n+    \n+    public class FourByteTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"4byteTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+\n+    public class FourByteTracerResponse : Dictionary<string, int>\n+    {\n+        \n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"3be2d754edb37a36451b0f5543b8ee6d6a40f2d9","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/NoopTracer.cs","status":"added","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FNoopTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FNoopTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FNoopTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,32 @@\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.Geth.RPC.GethDebug.Tracers;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// This tracer is noop. It returns an empty object and is only meant for testing the setup.\n+    /// </summary>\n+    ///\n+    /// Return type: NoopTracerResponse\n+\n+    public class NoopTracer { }\n+        \n+    public class NoopTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"noopTracer\";\n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+    \n+    \n+    public class NoopTracerConfigDto : TracerConfigDto<NoopTracer>\n+    {\n+         \n+    }\n+    \n+    \n+    public class NoopTracerResponse\n+    {\n+        \n+    }\n+    \n+}\n\\ No newline at end of file"},{"sha":"86cf3ff6260be34f00ece19c0cff96b886f0fe84","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/OpcodeTracer.cs","status":"added","additions":190,"deletions":0,"changes":190,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcodeTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcodeTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcodeTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,190 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.Geth.RPC.GethDebug.Tracers;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// The struct logger (aka opcode logger) is a native Go tracer which executes a transaction and emits the opcode\n+    /// and execution context at every step\n+    /// If no tracer is specified the opcode tracer will be used\n+    /// </summary>\n+    ///\n+    /// Return type: OpcodeTracerResponse\n+    /// \n+    public class OpcodeTracer { }\n+\n+    public class OpcodeTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = null;\n+        public override ITracerConfigDto TracerConfig { get; set; }\n+\n+        public OpcodeTracerInfo(\n+            bool? enableMemory = false, \n+            bool? disableStack = false, \n+            bool? disableStorage = false, \n+            bool? enableReturnData = false,\n+            bool? debug = false,\n+            int? limit = 0)\n+        {\n+            if (enableMemory != null || \n+                disableStack != null ||\n+                disableStorage != null ||\n+                enableReturnData != null ||\n+                debug != null ||\n+                limit != null)\n+            {\n+                TracerConfig = new OpcodeTracerConfigDto()\n+                {\n+                    EnableMemory = enableMemory ?? default, \n+                    DisableStack = disableStack ?? default, \n+                    DisableStorage = disableStorage ?? default, \n+                    EnableReturnData = enableReturnData ?? default, \n+                    Debug = debug ?? default, \n+                    Limit = limit ?? default, \n+                };\n+            }\n+        }\n+        \n+    }\n+\n+\n+    public class OpcodeTracerConfigDto : TracerConfigDto<OpcodeTracer>\n+    {\n+        /// <summary>\n+        /// Setting this to true will enable memory capture\n+        /// </summary>\n+        [JsonProperty(\"enableMemory\")]\n+        public bool EnableMemory { get; set; } = false;\n+\n+        /// <summary>\n+        /// Setting this to true will disable stack capture\n+        /// </summary>\n+        [JsonProperty(\"disableStack\")]\n+        public bool DisableStack { get; set; } = false;\n+\n+        /// <summary>\n+        /// Setting this to true will disable storage capture\n+        /// </summary>\n+        [JsonProperty(\"disableStorage\")]\n+        public bool DisableStorage { get; set; } = false;\n+\n+        /// <summary>\n+        /// Setting this to true will enable return data capture\n+        /// </summary>\n+        [JsonProperty(\"enableReturnData\")]\n+        public bool EnableReturnData { get; set; } = false;\n+\n+        /// <summary>\n+        /// Setting this to true will print output during capture end\n+        /// </summary>\n+        [JsonProperty(\"debug\")]\n+        public bool Debug { get; set; } = false;\n+\n+        /// <summary>\n+        /// Setting this to a positive integer will limit the number of steps captured (default = 0, no limit).\n+        /// </summary>\n+        [JsonProperty(\"limit\")]\n+        public int Limit { get; set; } = 0;\n+    }\n+\n+\n+    \n+    public class OpcodeTracerResponse\n+    {\n+        [JsonProperty(\"gas\")]\n+        public ulong Gas { get; set; }\n+        \n+        [JsonProperty(\"failed\")]\n+        public bool Failed { get; set; }\n+\n+        /// <summary>\n+        /// Last call's return data. Enabled via enableReturnData\n+        /// </summary>\n+        [JsonProperty(\"returnValue\")]\n+        public string ReturnValue { get; set; }\n+        \n+        /// <summary>\n+        /// Struct logs\n+        /// </summary>\n+        [JsonProperty(\"structLogs\")]\n+        public List<StructLog> StructLogs { get; set; }\n+\n+        \n+        \n+    }\n+\n+    public class StructLog\n+    {\n+        /// <summary>\n+        /// Program counter\n+        /// </summary>\n+        [JsonProperty(\"pc\")]\n+        public ulong Pc { get; set; }\n+\n+        /// <summary>\n+        /// Opcode to be executed\n+        /// </summary>\n+        [JsonProperty(\"op\")]\n+        public string Op { get; set; }\n+\n+        /// <summary>\n+        /// Remaining gas\n+        /// </summary>\n+        [JsonProperty(\"gas\")]\n+        public ulong Gas { get; set; }\n+\n+        /// <summary>\n+        /// Cost for executing op\n+        /// </summary>\n+        [JsonProperty(\"gasCost\")]\n+        public ulong GasCost { get; set; }\n+\n+        /// <summary>\n+        /// EVM memory. Enabled via enableMemory\n+        /// </summary>\n+        [JsonProperty(\"memory\")]\n+        public string Memory { get; set; }\n+\n+        /// <summary>\n+        /// Size of memory\n+        /// </summary>\n+        [JsonProperty(\"memSize\")]\n+        public int MemSize { get; set; }\n+\n+        /// <summary>\n+        /// EVM stack. Disabled via disableStack\n+        /// </summary>\n+        [JsonProperty(\"stack\")]\n+        public List<HexBigInteger> Stack { get; set; }\n+\n+\n+        /// <summary>\n+        /// Storage slots of current contract read from and written to. Only emitted for SLOAD and SSTORE. Disabled via disableStorage\n+        /// </summary>\n+        [JsonProperty(\"storage\")]\n+        public Dictionary<string, string> Storage { get; set; }\n+\n+        /// <summary>\n+        /// Current call depth\n+        /// </summary>\n+        [JsonProperty(\"depth\")]\n+        public int Depth { get; set; }\n+\n+        /// <summary>\n+        /// Refund counter\n+        /// </summary>\n+        [JsonProperty(\"refund\")]\n+        public ulong Refund { get; set; }\n+\n+        /// <summary>\n+        /// Error message if any\n+        /// </summary>\n+        [JsonProperty(\"error\")]\n+        public string Error { get; set; }\n+\n+    }\n+    \n+}\n\\ No newline at end of file"},{"sha":"281206db95a45cd3f02ffea044d489a31026f061","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/OpcountTracer.cs","status":"added","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcountTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcountTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FOpcountTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,20 @@\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// opcountTracer counts the total number of opcodes executed and simply returns the number.\n+    /// </summary>\n+    /// \n+    /// Return type: long\n+\n+    public class OpcountTracer { }\n+    \n+    public class OpcountTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"opcountTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"84a23d4d3c854f30967446c9a289cec71d4145be","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/PrestateTracer.cs","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FPrestateTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FPrestateTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FPrestateTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,102 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+using Nethereum.Geth.RPC.GethDebug.Tracers;\n+using Nethereum.Hex.HexTypes;\n+using Newtonsoft.Json;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// The prestate tracer has two modes: prestate and diff. The prestate mode returns the accounts necessary to\n+    /// execute a given transaction. diff mode returns the differences between the transaction's pre and post-state\n+    /// (i.e. what changed because the transaction happened).\n+    /// </summary>\n+    ///\n+    ///\n+    /// Return type:\n+    ///     In prestate mode: PrestateTracerResponsePrestateMode\n+    ///     In diff mode: PrestateTracerResponseDiffMode \n+\n+    public class PrestateTracer { }\n+        \n+    public class PrestateTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"prestateTracer\";\n+        public override ITracerConfigDto TracerConfig { get; set; }\n+\n+        public PrestateTracerInfo(bool? diffMode)\n+        {\n+            if (diffMode != null)\n+            {\n+                TracerConfig = new PrestateTracerConfigDto\n+                {\n+                    DiffMode = diffMode ?? default, \n+                };\n+            }\n+            \n+        }\n+    }\n+    \n+    public class PrestateTracerConfigDto : TracerConfigDto<CallTracer>\n+    {\n+         \n+        /// <summary>\n+        /// Mode returns the differences between the transaction's pre and post-state\n+        /// (i.e. what changed because the transaction happened)\n+        /// </summary>\n+        [JsonProperty(\"diffMode\")]\n+        public bool DiffMode { get; set; } = false;\n+        \n+    }\n+\n+\n+    public class PrestateTracerResponseDiffMode\n+    {\n+        /// <summary>\n+        /// Pre state info\n+        /// </summary>\n+        [JsonProperty(\"pre\")]\n+        public Dictionary<string, PrestateTracerResponseItem> Pre { get; set; }\n+\n+        /// <summary>\n+        /// Post state info\n+        /// </summary>\n+        [JsonProperty(\"post\")]\n+        public Dictionary<string, PrestateTracerResponseItem> Post { get; set; }\n+    }\n+    \n+    public class PrestateTracerResponsePrestateMode : Dictionary<string, PrestateTracerResponseItem>\n+    {\n+        \n+    }\n+    \n+    public class PrestateTracerResponseItem\n+    {\n+        /// <summary>\n+        /// Balance in Wei\n+        /// </summary>\n+        [JsonProperty(\"balance\")]\n+        public HexBigInteger Balance { get; set; }\n+\n+        /// <summary>\n+        /// Nonce\n+        /// </summary>\n+        [JsonProperty(\"nonce\")]\n+        public long Nonce { get; set; }\n+\n+        /// <summary>\n+        /// Hex-encoded bytecode\n+        /// </summary>\n+        [JsonProperty(\"code\")]\n+        public string Code { get; set; }\n+\n+        /// <summary>\n+        /// Storage slots of the contract\n+        /// </summary>\n+        [JsonProperty(\"storage\")]\n+        public Dictionary<string, string> Storage { get; set; }\n+        \n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"c2e11b897d81dddb7c2ca333f41be1fd2f0139d0","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/TrigramTracer.cs","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FTrigramTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FTrigramTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FTrigramTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,27 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// trigramTracer counts the opcode trigrams. Trigrams are the possible combinations of three opcodes this tracer\n+    /// reports how many times each combination is seen during execution.\n+    /// </summary>\n+    /// \n+    /// Return type: TrigramTracerResponse\n+\n+    public class TrigramTracer { }\n+    \n+    public class TrigramTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"trigramTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+    \n+    public class TrigramTracerResponse : Dictionary<string, long>\n+    {\n+        \n+    }\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"a13160f85a2c9c38267d0e27d5f65cf351f8e435","filename":"src/Nethereum.Geth/RPC/GethDebug/Tracers/UnigramTracer.cs","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FUnigramTracer.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FUnigramTracer.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracers%2FUnigramTracer.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,27 @@\n+using System.Collections.Generic;\n+using Nethereum.Geth.RPC.Debug.DTOs;\n+\n+namespace Nethereum.Geth.RPC.Debug.Tracers\n+{\n+    /// <summary>\n+    /// unigramTracer counts the frequency of occurrence of each opcode.\n+    /// </summary>\n+    /// \n+    /// Return type: UnigramTracerResponse\n+\n+    public class UnigramTracer { }\n+    \n+    public class UnigramTracerInfo : TracerInfo\n+    {\n+        public override string Tracer { get; } = \"unigramTracer\"; \n+        public override ITracerConfigDto TracerConfig { get; set; }\n+    }\n+\n+    public class UnigramTracerResponse : Dictionary<string, long>\n+    {\n+        \n+    }\n+\n+    \n+    \n+}\n\\ No newline at end of file"},{"sha":"bcb0c97c8dc777d427affb1c680c83095d7c0319","filename":"src/Nethereum.Geth/RPC/GethDebug/TracingCallOptions.cs","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingCallOptions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingCallOptions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingCallOptions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,30 @@\n+using System.Collections.Generic;\n+using Nethereum.Hex.HexTypes;\n+\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class TracingCallOptions : TracingOptions\n+    {\n+        public Dictionary<string, StateOverrideDto> StateOverrides { get; set; }\n+        public BlockOverridesDto BlockOverridesDto { get; set; }\n+        public HexBigInteger TxIndex { get; set; }\n+\n+        public TraceCallConfigDto ToDto()\n+        {\n+            var baseDto = base.ToDto();\n+            \n+            return new TraceCallConfigDto\n+            {\n+                Timeout = baseDto.Timeout,\n+                Reexec = baseDto.Reexec,\n+                Tracer = baseDto.Tracer,\n+                TracerConfig = baseDto.TracerConfig,\n+                StateOverrides = StateOverrides ?? null,\n+                BlockOverridesDto = BlockOverridesDto ?? null,\n+                TxIndex = TxIndex ?? null\n+            };\n+        }\n+    }\n+\n+    \n+}\n\\ No newline at end of file"},{"sha":"910e928670a72ad62cdc593bfe4ddf1e862338f3","filename":"src/Nethereum.Geth/RPC/GethDebug/TracingOptions.cs","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingOptions.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingOptions.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethDebug%2FTracingOptions.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,27 @@\n+namespace Nethereum.Geth.RPC.Debug.DTOs\n+{\n+    public class TracingOptions\n+    {\n+        \n+        public TracerInfo TracerInfo { get; set; }\n+\n+        public string Timeout { get; set; }\n+        \n+        public long? Reexec { get; set; }\n+\n+        public TraceConfigDto ToDto()\n+        {\n+            return new TraceConfigDto\n+            {\n+                Timeout = string.IsNullOrWhiteSpace(Timeout) ? null : Timeout,\n+                Reexec = Reexec ?? null,\n+                Tracer = TracerInfo?.Tracer ?? null,\n+                TracerConfig = TracerInfo?.TracerConfig ?? null\n+            };\n+        }\n+\n+        \n+    }\n+\n+    \n+}\n\\ No newline at end of file"},{"sha":"244af5805761b7a4453950868057523cc17fda2a","filename":"src/Nethereum.Geth/RPC/GethEth/EthCall.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethEth%2FEthCall.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethEth%2FEthCall.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethEth%2FEthCall.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,7 +3,7 @@\n using Nethereum.JsonRpc.Client;\n using Nethereum.RPC.Eth.DTOs;\n using System.Threading.Tasks;\n-using Nethereum.Geth.RPC.DTOs;\n+\n \n namespace Nethereum.Geth.RPC.GethEth\n {\n@@ -118,11 +118,11 @@ public class EthCall : RpcRequestResponseHandler<string>, IEthCall\n     {\n         public EthCall(IClient client) : base(client,ApiMethods.eth_call.ToString()) { }\n \n-        public Task<string> SendRequestAsync(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, DTOs.StateChange> stateChanges, object id = null)\n+        public Task<string> SendRequestAsync(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, StateChange> stateChanges, object id = null)\n         {\n             return base.SendRequestAsync(id, transaction, blockParameter, stateChanges);\n         }\n-        public RpcRequest BuildRequest(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, DTOs.StateChange> stateChanges, object id = null)\n+        public RpcRequest BuildRequest(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, StateChange> stateChanges, object id = null)\n         {\n             return base.BuildRequest(id, transaction, blockParameter, stateChanges);\n         }"},{"sha":"2a952435d33887f55dbcca8ab9d372692379b03c","filename":"src/Nethereum.Geth/RPC/GethEth/IEthCall.cs","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethEth%2FIEthCall.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FGethEth%2FIEthCall.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FGethEth%2FIEthCall.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,6 +1,6 @@\n using System.Collections.Generic;\n using System.Threading.Tasks;\n-using Nethereum.Geth.RPC.DTOs;\n+\n using Nethereum.JsonRpc.Client;\n using Nethereum.RPC.Eth.DTOs;\n \n@@ -115,7 +115,7 @@ namespace Nethereum.Geth.RPC.GethEth\n     ///</Summary>\n     public interface IEthCall\n     {\n-        Task<string> SendRequestAsync(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, DTOs.StateChange> stateChanges, object id = null);\n-        RpcRequest BuildRequest(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, DTOs.StateChange> stateChanges, object id = null);\n+        Task<string> SendRequestAsync(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, StateChange> stateChanges, object id = null);\n+        RpcRequest BuildRequest(TransactionInput transaction, BlockParameter blockParameter, Dictionary<string, StateChange> stateChanges, object id = null);\n     }\n }\n\\ No newline at end of file"},{"sha":"067e39ef25050f943374c06cfaba093ebd1e0769","filename":"src/Nethereum.Geth/RPC/TxnPool/TxnPoolContent.cs","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FTxnPool%2FTxnPoolContent.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Geth%2FRPC%2FTxnPool%2FTxnPoolContent.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Geth%2FRPC%2FTxnPool%2FTxnPoolContent.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,6 +1,3 @@\n-using System;\n-using System.Threading.Tasks;\n-using Nethereum.Hex.HexTypes;\n using Nethereum.JsonRpc.Client;\n using Nethereum.RPC.Infrastructure;\n using Newtonsoft.Json.Linq;"},{"sha":"9f407597b3e147cdf27488e571b616d482708a38","filename":"src/Nethereum.GnosisSafe/ContractDefinition/ExtendedContractDefinition.cs","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.GnosisSafe%2FContractDefinition%2FExtendedContractDefinition.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.GnosisSafe%2FContractDefinition%2FExtendedContractDefinition.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.GnosisSafe%2FContractDefinition%2FExtendedContractDefinition.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -24,6 +24,7 @@ public class EncodeTransactionDataFunctionBase : FunctionMessage\n         public virtual byte[] Data { get; set; }\n \n         [Parameter(\"uint8\", \"operation\", 4)] public virtual byte Operation { get; set; } = (byte)ContractOperationType.Call;\n+        \n         [Parameter(\"uint256\", \"safeTxGas\", 5)]\n         public virtual BigInteger SafeTxGas { get; set; } = 0;\n         [Parameter(\"uint256\", \"baseGas\", 6)] "},{"sha":"cec93528d6d064afb739fd17b90440fe049c4064","filename":"src/Nethereum.GnosisSafe/ExtendedGnosisSafeService.cs","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.GnosisSafe%2FExtendedGnosisSafeService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.GnosisSafe%2FExtendedGnosisSafeService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.GnosisSafe%2FExtendedGnosisSafeService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -88,7 +88,7 @@ public async Task<ExecTransactionFunction> BuildTransactionAsync<TFunctionMessag\n         }\n \n         //The generic EIP712 Typed schema defintion for this message\n-        public TypedData<GnosisSafeEIP712Domain> GetGnosisSafeTypedDefinition(BigInteger chainId, string verifyingContractAddress)\n+        public static TypedData<GnosisSafeEIP712Domain> GetGnosisSafeTypedDefinition(BigInteger chainId, string verifyingContractAddress)\n         {\n             return new TypedData<GnosisSafeEIP712Domain>\n             {\n@@ -102,6 +102,21 @@ public TypedData<GnosisSafeEIP712Domain> GetGnosisSafeTypedDefinition(BigInteger\n             };\n         }\n \n+        public static byte[] GetHashEncoded(EncodeTransactionDataFunction transactionData, BigInteger chainId, string verifyingContractAddress)\n+        {\n+            var typedDefinition = GetGnosisSafeTypedDefinition(chainId, verifyingContractAddress);\n+            return Eip712TypedDataEncoder.Current.EncodeAndHashTypedData(transactionData, typedDefinition);\n+        }\n+\n+        public byte[] GetHashEncoded(EncodeTransactionDataFunction transactionData, BigInteger chainId)\n+        {\n+            return GetHashEncoded(transactionData, chainId, this.ContractHandler.ContractAddress);\n+        }\n+\n+        public static byte[] GetHashEncoded(string json)\n+        {\n+            return Eip712TypedDataEncoder.Current.EncodeAndHashTypedData(json);\n+        }\n \n         public ExecTransactionFunction BuildTransaction(\n             EncodeTransactionDataFunction transactionData,"},{"sha":"815b5afc37446129462ae8f95985f56c04e99772","filename":"src/Nethereum.Hex/HexTypes/HexBigInteger.cs","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FHexBigInteger.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FHexBigInteger.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Hex%2FHexTypes%2FHexBigInteger.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -3,9 +3,16 @@\n using Nethereum.Hex.HexConvertors;\n using Newtonsoft.Json;\n \n+#if NET6_0_OR_GREATER\n+using System.Text.Json.Serialization;\n+#endif\n+\n namespace Nethereum.Hex.HexTypes\n {\n-    [JsonConverter(typeof(HexRPCTypeJsonConverter<HexBigInteger, BigInteger>))]\n+    [Newtonsoft.Json.JsonConverter(typeof(HexRPCTypeJsonConverter<HexBigInteger, BigInteger>))]\n+#if NET6_0_OR_GREATER\n+    [System.Text.Json.Serialization.JsonConverter(typeof(SystemTextJsonHexRPCTypeJsonConverter<HexBigInteger, BigInteger>))]\n+#endif\n     public class HexBigInteger : HexRPCType<BigInteger>\n     {\n         public HexBigInteger(string hex) : base(new HexBigIntegerBigEndianConvertor(), hex)\n@@ -16,7 +23,6 @@ public HexBigInteger(string hex) : base(new HexBigIntegerBigEndianConvertor(), h\n         {\n         }\n \n-        \n         public override string ToString()\n         {\n             return Value.ToString();"},{"sha":"ff4e541db9a8c02037fe66cfeb8f6bd8087ce784","filename":"src/Nethereum.Hex/HexTypes/HexUTF8String.cs","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FHexUTF8String.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FHexUTF8String.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Hex%2FHexTypes%2FHexUTF8String.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,22 +1,26 @@\n using Nethereum.Hex.HexConvertors;\n using Newtonsoft.Json;\n \n+#if NET6_0_OR_GREATER\n+using System.Text.Json.Serialization;\n+#endif\n+\n namespace Nethereum.Hex.HexTypes\n {\n-    [JsonConverter(typeof(HexRPCTypeJsonConverter<HexUTF8String, string>))]\n+    [Newtonsoft.Json.JsonConverter(typeof(HexRPCTypeJsonConverter<HexUTF8String, string>))] // Newtonsoft\n+\n+#if NET6_0_OR_GREATER\n+    [System.Text.Json.Serialization.JsonConverter(typeof(SystemTextJsonHexRPCTypeJsonConverter<HexUTF8String, string>))]\n+#endif\n     public class HexUTF8String : HexRPCType<string>\n     {\n-        private HexUTF8String() : base(new HexUTF8StringConvertor())\n-        {\n-        }\n+        private HexUTF8String() : base(new HexUTF8StringConvertor()) { }\n \n-        public HexUTF8String(string value) : base(value, new HexUTF8StringConvertor())\n-        {\n-        }\n+        public HexUTF8String(string value) : base(value, new HexUTF8StringConvertor()) { }\n \n         public static HexUTF8String CreateFromHex(string hex)\n         {\n-            return new HexUTF8String {HexValue = hex};\n+            return new HexUTF8String { HexValue = hex };\n         }\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"39f6a7d3df2cb3653bf29db5f3195677eb84691d","filename":"src/Nethereum.Hex/HexTypes/SystemTextJsonHexRPCTypeJsonConverter.cs","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FSystemTextJsonHexRPCTypeJsonConverter.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Hex%2FHexTypes%2FSystemTextJsonHexRPCTypeJsonConverter.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Hex%2FHexTypes%2FSystemTextJsonHexRPCTypeJsonConverter.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,48 @@\n+#if NET6_0_OR_GREATER\n+\n+using System;\n+using System.Text.Json;\n+using System.Text.Json.Serialization;\n+\n+namespace Nethereum.Hex.HexTypes\n+{\n+    /// <summary>\n+    /// System.Text.Json converter for HexRPCType&lt;TValue&gt; types like HexBigInteger.\n+    /// Mirrors the Newtonsoft.Json behaviour.\n+    /// </summary>\n+    public sealed class SystemTextJsonHexRPCTypeJsonConverter<T, TValue> : JsonConverter<T>\n+        where T : HexRPCType<TValue>\n+    {\n+        public SystemTextJsonHexRPCTypeJsonConverter() { }\n+\n+        public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options)\n+        {\n+            writer.WriteStringValue(value.HexValue);\n+        }\n+\n+        public override T? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n+        {\n+            if (reader.TokenType == JsonTokenType.Null)\n+                return null;\n+\n+            if (reader.TokenType == JsonTokenType.String)\n+            {\n+                var hex = reader.GetString()!;\n+                return (T)HexTypeFactory.CreateFromHex<TValue>(hex);\n+            }\n+\n+            // fallback for numeric values (e.g. 123 → 0x7b)\n+            object numberValue = reader.TokenType switch\n+            {\n+                JsonTokenType.Number when reader.TryGetInt64(out var i) => i,\n+                JsonTokenType.Number => reader.GetDecimal(),\n+                _ => throw new JsonException($\"Unexpected token {reader.TokenType} for {typeof(T).Name}\")\n+            };\n+\n+            return (T)HexTypeFactory.CreateFromObject<TValue>(numberValue);\n+        }\n+    }\n+}\n+\n+#endif\n+"},{"sha":"dc0039698150be5f6687bdc8908dd0ca80aa8a99","filename":"src/Nethereum.JsonRpc.Client/BasicAuthenticationHeaderHelper.cs","status":"renamed","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FBasicAuthenticationHeaderHelper.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FBasicAuthenticationHeaderHelper.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FBasicAuthenticationHeaderHelper.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","previous_filename":"src/Nethereum.JsonRpc.RpcClient/BasicAuthenticationHeaderHelper.cs"},{"sha":"9a80f19d91b34b1d0ca9a294ac5fad368c6aedaf","filename":"src/Nethereum.JsonRpc.Client/ClientBase.cs","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FClientBase.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FClientBase.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FClientBase.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,6 @@ namespace Nethereum.JsonRpc.Client\n {\n     public abstract class ClientBase : IClient\n     {\n-\n         public static TimeSpan ConnectionTimeout { get; set; } = TimeSpan.FromSeconds(20.0);\n \n         public RequestInterceptor OverridingRequestInterceptor { get; set; }\n@@ -46,21 +45,26 @@ protected void HandleRpcError(RpcResponseMessage response, string reqMsg)\n                     response.Error.Data));\n         }\n \n-        private async Task<T> SendInnerRequestAsync<T>(RpcRequestMessage reqMsg,\n+        protected virtual async Task<T> SendInnerRequestAsync<T>(RpcRequestMessage reqMsg,\n                                                        string route = null)\n         {\n             var response = await SendAsync(reqMsg, route).ConfigureAwait(false);\n             HandleRpcError(response, reqMsg.Method);\n             try\n             {\n-                return response.GetResult<T>();\n+                return DecodeResult<T>(response);\n             }\n             catch (FormatException formatException)\n             {\n                 throw new RpcResponseFormatException(\"Invalid format found in RPC response\", formatException);\n             }\n         }\n \n+        public virtual T DecodeResult<T>(RpcResponseMessage rpcResponseMessage)\n+        {\n+            return rpcResponseMessage.GetResult<T>();\n+        }\n+\n         protected virtual Task<T> SendInnerRequestAsync<T>(RpcRequest request, string route = null)\n         {\n             var reqMsg = new RpcRequestMessage(request.Id,"},{"sha":"b1c5d13538f5d7a03086a86f34505d5b70051b3a","filename":"src/Nethereum.JsonRpc.Client/IBaseClient.cs","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FIBaseClient.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FIBaseClient.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FIBaseClient.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,3 +1,4 @@\n+using Nethereum.JsonRpc.Client.RpcMessages;\n using System.Threading.Tasks;\n \n namespace Nethereum.JsonRpc.Client\n@@ -6,6 +7,8 @@ public interface IBaseClient\n     {\n #if !DOTNET35\n         RequestInterceptor OverridingRequestInterceptor { get; set; }\n+\n+        T DecodeResult<T>(RpcResponseMessage rpcResponseMessage);\n #endif\n         Task SendRequestAsync(RpcRequest request, string route = null);\n         Task SendRequestAsync(string method, string route = null, params object[] paramList);"},{"sha":"39aa2d717678f62626d9e2444f8333c4abf5826a","filename":"src/Nethereum.JsonRpc.Client/Nethereum.JsonRpc.Client.csproj","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FNethereum.JsonRpc.Client.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FNethereum.JsonRpc.Client.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FNethereum.JsonRpc.Client.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -20,7 +20,14 @@\n \t<ItemGroup Condition=\" '$(TargetFramework)' != 'net35' AND '$(TargetFramework)' != 'netstandard1.1' AND '$(TargetFramework)' != 'net451' AND '$(TargetFramework)' != 'netcoreapp2.1' \">\n     <PackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"[6.0.0,10)\" />\n   </ItemGroup>\n+\t<ItemGroup>\n+\t  <ProjectReference Include=\"..\\Nethereum.Hex\\Nethereum.Hex.csproj\" />\n+\t</ItemGroup>\n \n \n+\t<ItemGroup Condition=\" '$(TargetFramework)' == 'net451' Or '$(TargetFramework)' == 'net461'\">\n+\t\t<Reference Include=\"System.Net.Http\" />\n+\t</ItemGroup>\n+\n \n </Project>"},{"sha":"12425f23dd6d4fafcb4879eb4b37f1052fd8fb72","filename":"src/Nethereum.JsonRpc.Client/RpcError.cs","status":"modified","additions":38,"deletions":2,"changes":40,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcError.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcError.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcError.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -4,7 +4,7 @@ namespace Nethereum.JsonRpc.Client\n {\n     public class RpcError\n     {\n-        public RpcError(int code, string message, JToken data = null)\n+        public RpcError(int code, string message, object data = null)\n         {\n             Code = code;\n             Message = message;\n@@ -13,6 +13,42 @@ public RpcError(int code, string message, JToken data = null)\n \n         public int Code { get; private set; }\n         public string Message { get; private set; }\n-        public JToken Data { get; private set; }\n+        public object Data { get; private set; }\n+\n+        public string GetDataAsString()\n+        {\n+#if NET6_0_OR_GREATER\n+    if (Data is System.Text.Json.Nodes.JsonValue val)\n+        return val.ToString();\n+\n+    if (Data is System.Text.Json.Nodes.JsonObject obj)\n+    {\n+        if (obj.TryGetPropertyValue(\"result\", out var result) && result is not null)\n+            return result.ToString();\n+\n+        if (obj.TryGetPropertyValue(\"data\", out var innerData) && innerData is not null)\n+            return innerData.ToString();\n+    }\n+#endif\n+         if (Data is JValue jVal && jVal.Type == JTokenType.String)\n+                return jVal.ToString();\n+\n+         if (Data is JObject jObj)\n+         {\n+            if (jObj[\"result\"] is JToken result)\n+                return result.ToString();\n+\n+            if (jObj[\"data\"] is JToken innerData)\n+                return innerData.ToString();\n+         }\n+\n+           if (Data is string str)\n+                return str;\n+\n+           if(Data != null)\n+                return Data.ToString();\n+\n+            return null;\n+        }\n     }\n }\n\\ No newline at end of file"},{"sha":"520dfec3decb8c5804ced990af30d5ad11971541","filename":"src/Nethereum.JsonRpc.Client/RpcMessages/RpcMessages.cs","status":"modified","additions":302,"deletions":167,"changes":469,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcMessages.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcMessages.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcMessages.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -1,186 +1,235 @@\n ﻿using System;\n using System.Collections.Generic;\n using System.Text;\n+using System.Reflection;\n using Newtonsoft.Json;\n using Newtonsoft.Json.Linq;\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.Hex.HexConvertors.Extensions;\n+\n+#if NET6_0_OR_GREATER\n+using System.Text.Json.Serialization;\n+using System.Text.Json;\n+using System.Text.Json.Serialization.Metadata;\n+#endif\n \n namespace Nethereum.JsonRpc.Client.RpcMessages\n {\n-    /*\n-\n-RPC Model simplified and downported to net351 from EdjCase.JsonRPC.Core\n-https://github.com/edjCase/JsonRpc/tree/master/src/EdjCase.JsonRpc.Core\n-\n-The MIT License (MIT)\n-Copyright(c) 2015 Gekctek\n-\n-Permission is hereby granted, free of charge, to any person obtaining a copy\n-of this software and associated documentation files (the \"Software\"), to deal\n-in the Software without restriction, including without limitation the rights\n-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n-copies of the Software, and to permit persons to whom the Software is\n-furnished to do so, subject to the following conditions:\n-\n-The above copyright notice and this permission notice shall be included in all\n-copies or substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n-SOFTWARE.\n-*/\n     public static class RpcResponseExtensions\n     {\n-        /// <summary>\n-        /// Parses and returns the result of the rpc response as the type specified. \n-        /// Otherwise throws a parsing exception\n-        /// </summary>\n-        /// <typeparam name=\"T\">Type of object to parse the response as</typeparam>\n-        /// <param name=\"response\">Rpc response object</param>\n-        /// <param name=\"returnDefaultIfNull\">Returns the type's default value if the result is null. Otherwise throws parsing exception</param>\n-        /// <returns>Result of response as type specified</returns>\n         public static T GetResult<T>(this RpcResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerSettings settings = null)\n         {\n-            if (response.Result == null)\n+            return ConvertToNewtonsoft<T>(response.Result, returnDefaultIfNull, settings);\n+        }\n+\n+\n+        public static T GetStreamingResult<T>(this RpcStreamingResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerSettings settings = null)\n+        {\n+            if (response.Method == null)\n+            {\n+                return GetResult<T>(response, returnDefaultIfNull, settings);\n+            }\n+\n+            return ConvertToNewtonsoft<T>(response.Params?.Result, returnDefaultIfNull, settings);\n+        }\n+\n+\n+#if NET6_0_OR_GREATER\n+\n+        public static T GetResultSTJ<T>(this RpcResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerOptions options = null)\n+        {\n+            return ConvertToSTJ<T>(response.Result, returnDefaultIfNull, options);\n+        }\n+\n+        private static T ConvertToSTJ<T>(object result, bool returnDefaultIfNull, JsonSerializerOptions options = null)\n+        {\n+            if (result == null)\n             {\n                 if (!returnDefaultIfNull && default(T) != null)\n                 {\n-                    throw new Exception(\"Unable to convert the result (null) to type \" + typeof(T));\n+                    throw new Exception($\"Unable to convert the result (null) to type {typeof(T)}\");\n                 }\n-                return default(T);\n+                return default;\n             }\n+\n             try\n             {\n-                if (settings == null)\n+                if (result is string str)\n+                {\n+                    if (typeof(T).IsSubclassOfGeneric(typeof(HexRPCType<>)) && str.IsHex())\n+                    {\n+                        return (T)HexTypeFactory.CreateFromHex<T>(str);\n+                    }\n+\n+                    var bytes = Encoding.UTF8.GetBytes($\"\\\"{str}\\\"\");\n+                    return System.Text.Json.JsonSerializer.Deserialize<T>(bytes, options);\n+                }\n+\n+                if (result is JsonElement jsonElement)\n                 {\n-                    return response.Result.ToObject<T>();\n+                    return System.Text.Json.JsonSerializer.Deserialize<T>(jsonElement, options);\n                 }\n-                else\n+\n+                if (result is System.Text.Json.Nodes.JsonNode jsonNode)\n                 {\n-                    JsonSerializer jsonSerializer = JsonSerializer.Create(settings);\n-                    return response.Result.ToObject<T>(jsonSerializer);\n+                    return jsonNode.Deserialize<T>(options);\n                 }\n+\n+                return (T)Convert.ChangeType(result, typeof(T));\n             }\n             catch (FormatException ex)\n             {\n-                throw new FormatException(\"Invalid format when trying to convert the result to type \" + typeof(T), ex);\n+                throw new FormatException($\"Invalid format when trying to convert the result to type {typeof(T)}\", ex);\n             }\n             catch (Exception ex)\n             {\n-                throw new Exception(\"Unable to convert the result to type \" + typeof(T), ex);\n+                throw new Exception($\"Unable to convert the result to type {typeof(T)}\", ex);\n             }\n         }\n \n-        /// <summary>\n-        /// Parses and returns the result of the rpc streaming response as the type specified. \n-        /// Otherwise throws a parsing exception\n-        /// </summary>\n-        /// <typeparam name=\"T\">Type of object to parse the response as</typeparam>\n-        /// <param name=\"response\">Rpc response object</param>\n-        /// <param name=\"returnDefaultIfNull\">Returns the type's default value if the result is null. Otherwise throws parsing exception</param>\n-        /// <returns>Result of response as type specified</returns>\n-        public static T GetStreamingResult<T>(this RpcStreamingResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerSettings settings = null)\n+        private static bool IsSubclassOfGeneric(this Type type, Type genericBase)\n         {\n-            if(response.Method == null) {\n-                return GetResult<T>(response, returnDefaultIfNull, settings);\n-            }\n-\n-            if (response.Params.Result == null)\n+            while (type != null && type != typeof(object))\n             {\n-                if (!returnDefaultIfNull && default(T) != null)\n+                if (type.IsGenericType && type.GetGenericTypeDefinition() == genericBase)\n                 {\n-                    throw new Exception(\"Unable to convert the result (null) to type \" + typeof(T));\n+                    return true;\n                 }\n-                return default(T);\n+                type = type.BaseType!;\n             }\n+            return false;\n+        }\n+#endif\n+        private static T ConvertToNewtonsoft<T>(object result, bool returnDefaultIfNull, JsonSerializerSettings settings = null)\n+        {\n+            if (result == null)\n+            {\n+                if (!returnDefaultIfNull && default(T) != null)\n+                    throw new Exception($\"Unable to convert the result (null) to type {typeof(T)}\");\n+                return default;\n+            }\n+\n             try\n             {\n+                JToken token = result as JToken ?? JToken.FromObject(result);\n+\n                 if (settings == null)\n                 {\n-                    return response.Params.Result.ToObject<T>();\n+                    return token.ToObject<T>();\n                 }\n                 else\n                 {\n-                    JsonSerializer jsonSerializer = JsonSerializer.Create(settings);\n-                    return response.Params.Result.ToObject<T>(jsonSerializer);\n+                    var jsonSerializer = Newtonsoft.Json.JsonSerializer.Create(settings);\n+                    return token.ToObject<T>(jsonSerializer);\n                 }\n             }\n             catch (FormatException ex)\n             {\n-                throw new FormatException(\"Invalid format when trying to convert the result to type \" + typeof(T), ex);\n+                throw new FormatException($\"Invalid format when trying to convert the result to type {typeof(T)}\", ex);\n             }\n             catch (Exception ex)\n             {\n-                throw new Exception(\"Unable to convert the result to type \" + typeof(T), ex);\n+                throw new Exception($\"Unable to convert the result to type {typeof(T)}\", ex);\n             }\n         }\n-    }\n-\n-    [JsonObject]\n-    public class RpcResponseMessage\n-    {\n-        [JsonConstructor]\n-        protected RpcResponseMessage()\n-        {\n-            JsonRpcVersion = \"2.0\";\n-        }\n-\n-        /// <param name=\"id\">Request id</param>\n-        protected RpcResponseMessage(object id)\n-        {\n-            this.Id = id;\n-            JsonRpcVersion = \"2.0\";\n-        }\n-\n-        /// <param name=\"id\">Request id</param>\n-        /// <param name=\"error\">Request error</param>\n-        public RpcResponseMessage(object id, RpcError error) : this(id)\n-        {\n-            this.Error = error;\n-        }\n-\n-        /// <param name=\"id\">Request id</param>\n-        /// <param name=\"result\">Response result object</param>\n-        public RpcResponseMessage(object id, JToken result) : this(id)\n-        {\n-            this.Result = result;\n-        }\n \n-        /// <summary>\n-        /// Request id (Required but nullable)\n-        /// </summary>\n-        [JsonProperty(\"id\", Required = Required.Default)]\n-        public object Id { get; private set; }\n-\n-        /// <summary>\n-        /// Rpc request version (Required)\n-        /// </summary>\n-        [JsonProperty(\"jsonrpc\", Required = Required.Always)]\n-        public string JsonRpcVersion { get; private set; }\n-\n-        /// <summary>\n-        /// Reponse result object (Required)\n-        /// </summary>\n-        [JsonProperty(\"result\", Required = Required.Default)]\n-        public JToken Result { get; private set; }\n+ \n+    }\n \n-        /// <summary>\n-        /// Error from processing Rpc request (Required)\n-        /// </summary>\n-        [JsonProperty(\"error\", Required = Required.Default)]\n-        public RpcError Error { get; protected set; }\n \n-        [JsonIgnore]\n-        public bool HasError { get { return this.Error != null; } }\n-    }\n+        //public static class RpcResponseExtensions\n+        //{\n+        //    /// <summary>\n+        //    /// Parses and returns the result of the rpc response as the type specified. \n+        //    /// Otherwise throws a parsing exception\n+        //    /// </summary>\n+        //    /// <typeparam name=\"T\">Type of object to parse the response as</typeparam>\n+        //    /// <param name=\"response\">Rpc response object</param>\n+        //    /// <param name=\"returnDefaultIfNull\">Returns the type's default value if the result is null. Otherwise throws parsing exception</param>\n+        //    /// <returns>Result of response as type specified</returns>\n+        //    public static T GetResult<T>(this RpcResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerSettings settings = null)\n+        //    {\n+        //        if (response.Result == null)\n+        //        {\n+        //            if (!returnDefaultIfNull && default(T) != null)\n+        //            {\n+        //                throw new Exception(\"Unable to convert the result (null) to type \" + typeof(T));\n+        //            }\n+        //            return default(T);\n+        //        }\n+        //        try\n+        //        {\n+        //            if (settings == null)\n+        //            {\n+        //                return response.Result.ToObject<T>();\n+        //            }\n+        //            else\n+        //            {\n+        //                JsonSerializer jsonSerializer = JsonSerializer.Create(settings);\n+        //                return response.Result.ToObject<T>(jsonSerializer);\n+        //            }\n+        //        }\n+        //        catch (FormatException ex)\n+        //        {\n+        //            throw new FormatException(\"Invalid format when trying to convert the result to type \" + typeof(T), ex);\n+        //        }\n+        //        catch (Exception ex)\n+        //        {\n+        //            throw new Exception(\"Unable to convert the result to type \" + typeof(T), ex);\n+        //        }\n+        //    }\n+\n+        //    /// <summary>\n+        //    /// Parses and returns the result of the rpc streaming response as the type specified. \n+        //    /// Otherwise throws a parsing exception\n+        //    /// </summary>\n+        //    /// <typeparam name=\"T\">Type of object to parse the response as</typeparam>\n+        //    /// <param name=\"response\">Rpc response object</param>\n+        //    /// <param name=\"returnDefaultIfNull\">Returns the type's default value if the result is null. Otherwise throws parsing exception</param>\n+        //    /// <returns>Result of response as type specified</returns>\n+        //    public static T GetStreamingResult<T>(this RpcStreamingResponseMessage response, bool returnDefaultIfNull = true, JsonSerializerSettings settings = null)\n+        //    {\n+        //        if(response.Method == null) {\n+        //            return GetResult<T>(response, returnDefaultIfNull, settings);\n+        //        }\n+\n+        //        if (response.Params.Result == null)\n+        //        {\n+        //            if (!returnDefaultIfNull && default(T) != null)\n+        //            {\n+        //                throw new Exception(\"Unable to convert the result (null) to type \" + typeof(T));\n+        //            }\n+        //            return default(T);\n+        //        }\n+        //        try\n+        //        {\n+        //            if (settings == null)\n+        //            {\n+        //                return response.Params.Result.ToObject<T>();\n+        //            }\n+        //            else\n+        //            {\n+        //                JsonSerializer jsonSerializer = JsonSerializer.Create(settings);\n+        //                return response.Params.Result.ToObject<T>(jsonSerializer);\n+        //            }\n+        //        }\n+        //        catch (FormatException ex)\n+        //        {\n+        //            throw new FormatException(\"Invalid format when trying to convert the result to type \" + typeof(T), ex);\n+        //        }\n+        //        catch (Exception ex)\n+        //        {\n+        //            throw new Exception(\"Unable to convert the result to type \" + typeof(T), ex);\n+        //        }\n+        //    }\n+        //}\n+\n+       \n \n     [JsonObject]\n     public class RpcStreamingResponseMessage : RpcResponseMessage\n     {\n-        [JsonConstructor]\n+        [Newtonsoft.Json.JsonConstructor]\n         protected RpcStreamingResponseMessage()\n         {\n             \n@@ -217,7 +266,7 @@ public RpcStreamingResponseMessage(string method, RpcStreamingParams @params) :\n     [JsonObject]\n     public class RpcStreamingParams\n     {\n-        [JsonConstructor]\n+        [Newtonsoft.Json.JsonConstructor]\n         public RpcStreamingParams()\n         {\n \n@@ -239,69 +288,66 @@ public RpcStreamingParams()\n     [JsonObject]\n     public class RpcRequestMessage\n     {\n-        [JsonConstructor]\n-        private RpcRequestMessage()\n-        {\n-\n-        }\n+        [Newtonsoft.Json.JsonConstructor]\n+#if NET6_0_OR_GREATER\n+        [System.Text.Json.Serialization.JsonConstructor]\n+#endif\n+        private RpcRequestMessage() { }\n \n-        /// <param name=\"id\">Request id</param>\n-        /// <param name=\"method\">Target method name</param>\n-        /// <param name=\"parameterList\">List of parameters for the target method</param>\n         public RpcRequestMessage(object id, string method, params object[] parameterList)\n         {\n-            this.Id = id;\n-            this.JsonRpcVersion = \"2.0\";\n-            this.Method = method;\n-            this.RawParameters = parameterList;\n+            Id = id;\n+            JsonRpcVersion = \"2.0\";\n+            Method = method;\n+            RawParameters = parameterList;\n         }\n \n-        /// <param name=\"id\">Request id</param>\n-        /// <param name=\"method\">Target method name</param>\n-        /// <param name=\"parameterMap\">Map of parameter name to parameter value for the target method</param>\n         public RpcRequestMessage(object id, string method, Dictionary<string, object> parameterMap)\n         {\n-            this.Id = id;\n-            this.JsonRpcVersion = \"2.0\";\n-            this.Method = method;\n-            this.RawParameters = parameterMap;\n+            Id = id;\n+            JsonRpcVersion = \"2.0\";\n+            Method = method;\n+            RawParameters = parameterMap;\n         }\n \n-        /// <summary>\n-        /// Request Id (Optional)\n-        /// </summary>\n         [JsonProperty(\"id\")]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"id\")]\n+#endif\n         public object Id { get; set; }\n-        /// <summary>\n-        /// Version of the JsonRpc to be used (Required)\n-        /// </summary>\n+\n         [JsonProperty(\"jsonrpc\", Required = Required.Always)]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"jsonrpc\")]\n+#endif\n         public string JsonRpcVersion { get; private set; }\n-        /// <summary>\n-        /// Name of the target method (Required)\n-        /// </summary>\n+\n         [JsonProperty(\"method\", Required = Required.Always)]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"method\")]\n+#endif\n         public string Method { get; private set; }\n-        /// <summary>\n-        /// Parameters to invoke the method with (Optional)\n-        /// </summary>\n+\n         [JsonProperty(\"params\")]\n-        [JsonConverter(typeof(RpcParametersJsonConverter))]\n+        [Newtonsoft.Json.JsonConverter(typeof(RpcParametersJsonConverter))] // Newtonsoft\n+#if NET6_0_OR_GREATER\n+        [System.Text.Json.Serialization.JsonConverter(typeof(RpcParametersSystemTextJsonConverter))] // STJ\n+        [JsonPropertyName(\"params\")]\n+#endif\n         public object RawParameters { get; private set; }\n-\n     }\n     /// <summary>\n     /// Json converter for Rpc parameters\n     /// </summary>\n-    public class RpcParametersJsonConverter : JsonConverter\n+    public class RpcParametersJsonConverter : Newtonsoft.Json.JsonConverter\n     {\n         /// <summary>\n         /// Writes the value of the parameters to json format\n         /// </summary>\n         /// <param name=\"writer\">Json writer</param>\n         /// <param name=\"value\">Value to be converted to json format</param>\n         /// <param name=\"serializer\">Json serializer</param>\n-        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)\n+        public override void WriteJson(JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)\n         {\n             serializer.Serialize(writer, value);\n         }\n@@ -314,7 +360,7 @@ public override void WriteJson(JsonWriter writer, object value, JsonSerializer s\n         /// <param name=\"existingValue\">The current value of the property being set</param>\n         /// <param name=\"serializer\">Json serializer</param>\n         /// <returns>The object value of the converted json value</returns>\n-        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)\n+        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)\n         {\n             switch (reader.TokenType)\n             {\n@@ -348,28 +394,117 @@ public override bool CanConvert(Type objectType)\n     }\n \n     [JsonObject]\n-    public class RpcError\n+    public class RpcResponseMessage\n     {\n-        [JsonConstructor]\n-        private RpcError()\n+\n+        [Newtonsoft.Json.JsonConstructor]\n+        public RpcResponseMessage()\n+        {\n+            JsonRpcVersion = \"2.0\";\n+        }\n+\n+        public RpcResponseMessage(object id)\n+        {\n+            Id = id;\n+            JsonRpcVersion = \"2.0\";\n+        }\n+\n+        public RpcResponseMessage(object id, RpcError error) : this(id)\n+        {\n+            Error = error;\n+        }\n+\n+        public RpcResponseMessage(object id, object result) : this(id)\n         {\n+            ResultNewtonsoft = result;\n+#if NET6_0_OR_GREATER\n+            if (result is JsonElement element)\n+            {\n+                ResultSystemTextJson = element;\n+            }\n+#endif\n         }\n+\n+        [JsonProperty(\"id\")]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"id\")]\n+#endif\n+        public object Id { get; set; }\n+\n+        [JsonProperty(\"jsonrpc\")]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"jsonrpc\")]\n+#endif\n+        public string JsonRpcVersion { get; set; }\n+\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"result\")]\n+        public JsonElement ResultSystemTextJson { get; set; }\n+#endif\n+\n+        [JsonProperty(\"result\")]\n+        public object ResultNewtonsoft { get; set; }\n+\n+        [Newtonsoft.Json.JsonIgnore]\n+#if NET6_0_OR_GREATER\n+        [System.Text.Json.Serialization.JsonIgnore(Condition = JsonIgnoreCondition.Always)]\n+#endif\n+        public object Result =>\n+#if NET6_0_OR_GREATER\n+            ResultSystemTextJson.ValueKind != JsonValueKind.Undefined ? ResultSystemTextJson : ResultNewtonsoft;\n+#else\n+        ResultNewtonsoft;\n+#endif\n+\n+        [JsonProperty(\"error\")]\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"error\")]\n+#endif\n+        public RpcError Error { get; set; }\n+\n+        [Newtonsoft.Json.JsonIgnore]\n+#if NET6_0_OR_GREATER\n+        [System.Text.Json.Serialization.JsonIgnore(Condition = JsonIgnoreCondition.Always)]\n+#endif\n+        public bool HasError => Error != null;\n+    }\n+\n+    [JsonObject]\n+    public class RpcError\n+    {\n+        [Newtonsoft.Json.JsonConstructor]\n+#if NET6_0_OR_GREATER\n+        [System.Text.Json.Serialization.JsonConstructor]\n+#endif\n+        public RpcError() { }\n+\n         /// <summary>\n         /// Rpc error code\n         /// </summary>\n         [JsonProperty(\"code\")]\n-        public int Code { get; private set; }\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"code\")]\n+#endif\n+        public int Code { get; set; }\n \n         /// <summary>\n         /// Error message (Required)\n         /// </summary>\n         [JsonProperty(\"message\", Required = Required.Always)]\n-        public string Message { get; private set; }\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"message\")]\n+#endif\n+        public string Message { get; set; }\n \n         /// <summary>\n-        /// Error data (Optional)\n+        /// Error data (Optional): may be a hex string, an object, or null\n         /// </summary>\n         [JsonProperty(\"data\")]\n-        public JToken Data { get; private set; }\n+#if NET6_0_OR_GREATER\n+        [JsonPropertyName(\"data\")]\n+#endif\n+        public object Data { get; set; }\n     }\n+\n }\n+"},{"sha":"0871bd1c1af75271587fe9a15cc3c035bd17cce0","filename":"src/Nethereum.JsonRpc.Client/RpcMessages/RpcParametersSystemTextJsonConverter.cs","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcParametersSystemTextJsonConverter.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcParametersSystemTextJsonConverter.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcMessages%2FRpcParametersSystemTextJsonConverter.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,36 @@\n+#if NET6_0_OR_GREATER\n+using System;\n+using System.Collections.Generic;\n+using System.Text.Json;\n+using System.Text.Json.Serialization;\n+\n+public class RpcParametersSystemTextJsonConverter : JsonConverter<object>\n+{\n+    public override object? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n+    {\n+        if (reader.TokenType == JsonTokenType.StartObject)\n+        {\n+            var doc = JsonDocument.ParseValue(ref reader);\n+            return JsonSerializer.Deserialize<Dictionary<string, object>>(doc.RootElement.GetRawText(), options);\n+        }\n+\n+        if (reader.TokenType == JsonTokenType.StartArray)\n+        {\n+            var doc = JsonDocument.ParseValue(ref reader);\n+            return JsonSerializer.Deserialize<object[]>(doc.RootElement.GetRawText(), options);\n+        }\n+\n+        if (reader.TokenType == JsonTokenType.Null)\n+        {\n+            return null;\n+        }\n+\n+        throw new JsonException(\"Request parameters can only be an associative array, list, or null.\");\n+    }\n+\n+    public override void Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options)\n+    {\n+        JsonSerializer.Serialize(writer, value, options);\n+    }\n+}\n+#endif"},{"sha":"f414aad705ba8ec016128699b15c977222a9df76","filename":"src/Nethereum.JsonRpc.Client/RpcRequestResponseBatch.cs","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatch.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatch.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatch.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -6,31 +6,33 @@ namespace Nethereum.JsonRpc.Client\n {\n     public class RpcRequestResponseBatch\n     {\n+        public bool AcceptPartiallySuccessful { get; set; } = false;\n+\n         public List<IRpcRequestResponseBatchItem> BatchItems { get; set; } = new List<IRpcRequestResponseBatchItem>();\n \n         public RpcRequestMessage[] GetRpcRequests()\n         {\n             return BatchItems.Select(x => x.RpcRequestMessage).ToArray();\n         }\n \n-        public void UpdateBatchItemResponses(IEnumerable<RpcResponseMessage> responses)\n+        public virtual void UpdateBatchItemResponses(IEnumerable<RpcResponseMessage> responses)\n         {\n             var errors = new List<RpcError>();\n             foreach (var response in responses)\n             {\n                 var batchItem = BatchItems.First(x => x.RpcRequestMessage.Id.ToString() == response.Id.ToString());\n                 if (response.HasError)\n                 {\n-                    errors.Add(new RpcError(response.Error.Code, response.Error.Message + \": \" + batchItem.RpcRequestMessage.Method,\n-                     response.Error.Data));\n+                    batchItem.DecodeResponse(response);\n+                    errors.Add(new RpcError(response.Error.Code, response.Error.Message + \": \" + batchItem.RpcRequestMessage.Method, response.Error.Data));\n                 }\n                 else\n                 {\n                     batchItem.DecodeResponse(response);\n                 }\n             }\n \n-            if (errors.Any())\n+            if (errors.Any() && AcceptPartiallySuccessful == false)\n                 throw new RpcResponseBatchException(errors.ToArray());\n         }\n "},{"sha":"72d3aa7856027e2fdd2c58a5ea97a482159f2fff","filename":"src/Nethereum.JsonRpc.Client/RpcRequestResponseBatchItem.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatchItem.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatchItem.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseBatchItem.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -18,13 +18,14 @@ public RpcRequestResponseBatchItem(TRequestHandler requestHandler, RpcRequest rp\n         public object RawResponse { get; private set; }\n         public bool HasError { get; private set; }\n         public RpcError RpcError { get; private set; }\n-        public void DecodeResponse(RpcResponseMessage rpcResponse)\n+        public virtual void DecodeResponse(RpcResponseMessage rpcResponse)\n         {\n             if (rpcResponse.HasError)\n             {\n                 this.HasError = true;\n                 this.RpcError = new RpcError(rpcResponse.Error.Code, rpcResponse.Error.Message,\n                     rpcResponse.Error.Data);\n+                return;\n             }\n             try\n             {"},{"sha":"d4c21cb71a7e31b4a00c54ee84ac319a4c9ec54b","filename":"src/Nethereum.JsonRpc.Client/RpcRequestResponseHandler.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandler.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandler.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandler.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -37,7 +37,7 @@ public virtual TResponse DecodeResponse(RpcResponseMessage rpcResponseMessage)\n         {\n             try\n             {\n-                return rpcResponseMessage.GetResult<TResponse>();\n+                return Client.DecodeResult<TResponse>(rpcResponseMessage);\n             }\n             catch (FormatException formatException)\n             {"},{"sha":"c1845da5e8e47686ebd25d6e2506f7e4e5d38c1e","filename":"src/Nethereum.JsonRpc.Client/RpcRequestResponseHandlerNoParam.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandlerNoParam.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandlerNoParam.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.Client%2FRpcRequestResponseHandlerNoParam.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -37,7 +37,7 @@ public virtual TResponse DecodeResponse(RpcResponseMessage rpcResponseMessage)\n         {\n             try\n             {\n-                return rpcResponseMessage.GetResult<TResponse>();\n+                return Client.DecodeResult<TResponse>(rpcResponseMessage);\n             }\n             catch (FormatException formatException)\n             {"},{"sha":"3713c33860bdd58d91e8bdc31dcdde0d0fce10da","filename":"src/Nethereum.JsonRpc.SystemTextJsonRpcClient/Nethereum.JsonRpc.SystemTextJsonRpcClient.csproj","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereum.JsonRpc.SystemTextJsonRpcClient.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereum.JsonRpc.SystemTextJsonRpcClient.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereum.JsonRpc.SystemTextJsonRpcClient.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,33 @@\n+\n+<Project Sdk=\"Microsoft.NET.Sdk\">\n+\t<Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\\dir.props\" />\n+\t<PropertyGroup>\n+\t\t<Description>A lightweight and AOT-friendly JSON-RPC client for Ethereum, using System.Text.Json. Part of the Nethereum suite.</Description>\n+\t\t<AssemblyTitle>Nethereum.JsonRpc.SystemTextJsonRpcClient</AssemblyTitle>\n+\t\t<VersionPrefix>$(NethereumVersion)</VersionPrefix>\n+\t\t<TargetFrameworks>net9.0</TargetFrameworks>\n+\t\t<AssemblyName>Nethereum.JsonRpc.SystemTextJsonRpcClient</AssemblyName>\n+\t\t<PackageId>Nethereum.JsonRpc.SystemTextJsonRpcClient</PackageId>\n+\t\t<PackageTags>Ethereum;JsonRpc;Nethereum;System.Text.Json;AOT;Client;Web3</PackageTags>\n+\t</PropertyGroup>\n+\t\n+\t<ItemGroup>\n+\t\t<ProjectReference Include=\"..\\Nethereum.Hex\\Nethereum.Hex.csproj\" />\n+\t\t<ProjectReference Include=\"..\\Nethereum.JsonRpc.Client\\Nethereum.JsonRpc.Client.csproj\" />\n+\t\t<ProjectReference Include=\"..\\Nethereum.RPC\\Nethereum.RPC.csproj\" />\n+\t</ItemGroup>\n+\n+\t<ItemGroup Condition=\" '$(TargetFramework)' == 'net451' Or '$(TargetFramework)' == 'net461'\">\n+\t\t<Reference Include=\"System.Net.Http\" />\n+\t</ItemGroup>\n+\n+\t<PropertyGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetUnityNet461AOT)' != 'true'\">\n+\t\t<SignAssembly>true</SignAssembly>\n+\t\t<AssemblyOriginatorKeyFile>..\\..\\NethereumKey.snk</AssemblyOriginatorKeyFile>\n+\t</PropertyGroup>\n+\t<ItemGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetUnityNet461AOT)' != 'true'\">\n+\t\t<None Include=\"..\\..\\NethereumKey.snk\" />\n+\t</ItemGroup>\n+\n+\n+</Project>\n\\ No newline at end of file"},{"sha":"42a30b76fdda5968d2d83f91661563ea9d37e3ec","filename":"src/Nethereum.JsonRpc.SystemTextJsonRpcClient/NethereumRpcJsonContext.cs","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereumRpcJsonContext.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereumRpcJsonContext.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FNethereumRpcJsonContext.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,77 @@\n+#if NET7_0_OR_GREATER\n+using Nethereum.Hex.HexTypes;\n+using Nethereum.JsonRpc.Client.RpcMessages;\n+using Nethereum.RPC.Eth.DTOs;\n+using System.Text.Json.Serialization;\n+\n+namespace Nethereum.JsonRpc.SystemTextJsonRpcClient\n+{\n+    [JsonSourceGenerationOptions(WriteIndented = false, PropertyNamingPolicy = JsonKnownNamingPolicy.CamelCase)]\n+    [JsonSerializable(typeof(RpcRequestMessage))]\n+    [JsonSerializable(typeof(RpcRequestMessage[]))]\n+    [JsonSerializable(typeof(RpcResponseMessage))]\n+    [JsonSerializable(typeof(RpcResponseMessage[]))]\n+    [JsonSerializable(typeof(Nethereum.JsonRpc.Client.RpcMessages.RpcError))]\n+    [JsonSerializable(typeof(HexBigInteger))]\n+    [JsonSerializable(typeof(HexBigInteger[]))]\n+    [JsonSerializable(typeof(HexUTF8String))]\n+    [JsonSerializable(typeof(HexUTF8String[]))]\n+    [JsonSerializable(typeof(string))]\n+    [JsonSerializable(typeof(string[]))]\n+    [JsonSerializable(typeof(object))]\n+    [JsonSerializable(typeof(object[]))]\n+    [JsonSerializable(typeof(double[][]))]\n+    [JsonSerializable(typeof(double[]))]\n+    [JsonSerializable(typeof(double))]\n+\n+    [JsonSerializable(typeof(BlockParameter))]\n+    [JsonSerializable(typeof(BlockParameter[]))]\n+\n+    [JsonSerializable(typeof(Block))]\n+    [JsonSerializable(typeof(Block[]))]\n+    [JsonSerializable(typeof(BlockWithTransactions))]\n+    [JsonSerializable(typeof(BlockWithTransactions[]))]\n+    [JsonSerializable(typeof(BlockWithTransactionHashes))]\n+    [JsonSerializable(typeof(BlockWithTransactionHashes[]))]\n+\n+    [JsonSerializable(typeof(Transaction))]\n+    [JsonSerializable(typeof(Transaction[]))]\n+    [JsonSerializable(typeof(TransactionInput))]\n+    [JsonSerializable(typeof(TransactionInput[]))]\n+    [JsonSerializable(typeof(TransactionReceipt))]\n+    [JsonSerializable(typeof(TransactionReceipt[]))]\n+\n+    [JsonSerializable(typeof(FeeHistoryResult))]\n+    [JsonSerializable(typeof(FeeHistoryResult[]))]\n+\n+    [JsonSerializable(typeof(FilterLog))]\n+    [JsonSerializable(typeof(FilterLog[]))]\n+    [JsonSerializable(typeof(CallInput))]\n+    [JsonSerializable(typeof(CallInput[]))]\n+\n+    [JsonSerializable(typeof(StateChange))]\n+    [JsonSerializable(typeof(StateChange[]))]\n+    [JsonSerializable(typeof(AccessList))]\n+    [JsonSerializable(typeof(AccessList[]))]\n+    [JsonSerializable(typeof(AccessListGasUsed))]\n+    [JsonSerializable(typeof(AccessListGasUsed[]))]\n+\n+    [JsonSerializable(typeof(AccountProof))]\n+    [JsonSerializable(typeof(AccountProof[]))]\n+    [JsonSerializable(typeof(Authorisation))]\n+    [JsonSerializable(typeof(Authorisation[]))]\n+    [JsonSerializable(typeof(BadBlock))]\n+    [JsonSerializable(typeof(BadBlock[]))]\n+    [JsonSerializable(typeof(SyncingOutput))]\n+    [JsonSerializable(typeof(SyncingOutput[]))]\n+    [JsonSerializable(typeof(StorageProof))]\n+    [JsonSerializable(typeof(StorageProof[]))]\n+\n+    [JsonSerializable(typeof(NewFilterInput))]\n+    [JsonSerializable(typeof(NewSubscriptionInput))]\n+    public partial class NethereumRpcJsonContext : JsonSerializerContext\n+    {\n+    }\n+}\n+\n+#endif\n\\ No newline at end of file"},{"sha":"2c36f67667928e3de32074428d0c4453532eeecb","filename":"src/Nethereum.JsonRpc.SystemTextJsonRpcClient/RpcClient.cs","status":"added","additions":161,"deletions":0,"changes":161,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcClient.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcClient.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcClient.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,161 @@\n+#if NET7_0_OR_GREATER\n+using System;\n+using System.Diagnostics;\n+using System.Net.Http;\n+using System.Net.Http.Headers;\n+using System.Text;\n+using System.Text.Json;\n+using System.Text.Json.Serialization;\n+using System.Text.Json.Serialization.Metadata;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Microsoft.Extensions.Logging;\n+using Nethereum.JsonRpc.Client;\n+using Nethereum.JsonRpc.Client.RpcMessages;\n+\n+namespace Nethereum.JsonRpc.SystemTextJsonRpcClient\n+{\n+\n+    public class RpcClient : ClientBase\n+    {\n+        private readonly HttpClient _httpClient;\n+        private readonly ILogger? _logger;\n+        private readonly JsonSerializerOptions _serializerOptions;\n+        private readonly JsonTypeInfo<RpcRequestMessage>? _requestTypeInfo;\n+        private readonly JsonTypeInfo<RpcRequestMessage[]>? _requestArrayTypeInfo;\n+        private readonly JsonTypeInfo<RpcResponseMessage>? _responseTypeInfo;\n+        private readonly JsonTypeInfo<RpcResponseMessage[]>? _responseArrayTypeInfo;\n+\n+        public RpcClient(\n+            Uri baseUrl,\n+            ILogger? logger = null,\n+            AuthenticationHeaderValue? authHeader = null,\n+            HttpMessageHandler? handler = null,\n+            JsonSerializerContext? context = null,\n+            JsonSerializerOptions? serializerOptions = null)\n+        {\n+            _logger = logger;\n+\n+            if (authHeader == null)\n+            {\n+                authHeader = BasicAuthenticationHeaderHelper.GetBasicAuthenticationHeaderValueFromUri(baseUrl);\n+            }\n+\n+            handler ??= RpcHttpHandlerFactory.Create();\n+\n+            _httpClient = new HttpClient(handler)\n+            {\n+                BaseAddress = baseUrl\n+            };\n+\n+            if (authHeader != null)\n+            {\n+                _httpClient.DefaultRequestHeaders.Authorization = authHeader;\n+            }\n+\n+            _serializerOptions = serializerOptions ?? new JsonSerializerOptions\n+            {\n+                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,\n+                DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull\n+            };\n+\n+            if (context != null)\n+            {\n+                _serializerOptions.TypeInfoResolver = context;\n+                _requestTypeInfo = context.GetTypeInfo(typeof(RpcRequestMessage)) as JsonTypeInfo<RpcRequestMessage>;\n+                _requestArrayTypeInfo = context.GetTypeInfo(typeof(RpcRequestMessage[])) as JsonTypeInfo<RpcRequestMessage[]>;\n+                _responseTypeInfo = context.GetTypeInfo(typeof(RpcResponseMessage)) as JsonTypeInfo<RpcResponseMessage>;\n+                _responseArrayTypeInfo = context.GetTypeInfo(typeof(RpcResponseMessage[])) as JsonTypeInfo<RpcResponseMessage[]>;\n+            }\n+        }\n+\n+        public RpcClient(string url, ILogger? logger = null)\n+            : this(new Uri(url), logger, null, null, NethereumRpcJsonContext.Default) { }\n+\n+        public void AddBearerToken(string token)\n+        {\n+            _httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token);\n+        }\n+\n+        public override T DecodeResult<T>(RpcResponseMessage rpcResponseMessage)\n+        {\n+            return rpcResponseMessage.GetResultSTJ<T>(true, _serializerOptions);\n+        }\n+\n+        protected override async Task<RpcResponseMessage> SendAsync(RpcRequestMessage request, string? route = null)\n+        {\n+            try\n+            {\n+                var json = JsonSerializer.Serialize(request, typeof(RpcRequestMessage), _serializerOptions);\n+\n+                _logger?.LogDebug(\"Sending request: {Json}\", json);\n+\n+                using var content = new StringContent(json, Encoding.UTF8, \"application/json\");\n+                using var cts = new CancellationTokenSource(ConnectionTimeout);\n+                using var response = await _httpClient.PostAsync(route ?? string.Empty, content, cts.Token).ConfigureAwait(false);\n+\n+                response.EnsureSuccessStatusCode();\n+\n+                var stream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false);\n+\n+                var rpcResponse = _responseTypeInfo != null\n+                    ? await JsonSerializer.DeserializeAsync(stream, _responseTypeInfo, cts.Token).ConfigureAwait(false)\n+                    : await JsonSerializer.DeserializeAsync<RpcResponseMessage>(stream, _serializerOptions, cts.Token).ConfigureAwait(false);\n+\n+                _logger?.LogDebug(\"Received response: {Response}\", JsonSerializer.Serialize(rpcResponse, _serializerOptions));\n+               // Debug.WriteLine(string.Format(\"Received response: {0}\", JsonSerializer.Serialize(rpcResponse, _serializerOptions)));\n+                return rpcResponse!;\n+            }\n+            catch (TaskCanceledException ex)\n+            {\n+                var timeoutEx = new RpcClientTimeoutException($\"RPC timeout after {ConnectionTimeout.TotalMilliseconds} ms\", ex);\n+                _logger?.LogError(timeoutEx, \"Timeout error\");\n+                throw timeoutEx;\n+            }\n+            catch (Exception ex)\n+            {\n+                var rpcEx = new RpcClientUnknownException($\"Error calling RPC method '{request.Method}'\", ex);\n+                _logger?.LogError(rpcEx, \"RPC call error\");\n+                throw rpcEx;\n+            }\n+        }\n+\n+        protected override async Task<RpcResponseMessage[]> SendAsync(RpcRequestMessage[] requests)\n+        {\n+            try\n+            {\n+                var json = JsonSerializer.Serialize(requests, typeof(RpcRequestMessage[]), _serializerOptions);\n+\n+                _logger?.LogDebug(\"Sending batch request: {Json}\", json);\n+\n+                using var content = new StringContent(json, Encoding.UTF8, \"application/json\");\n+                using var cts = new CancellationTokenSource(ConnectionTimeout);\n+                using var response = await _httpClient.PostAsync(string.Empty, content, cts.Token).ConfigureAwait(false);\n+\n+                response.EnsureSuccessStatusCode();\n+\n+                var stream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false);\n+\n+                var rpcResponses = _responseArrayTypeInfo != null\n+                    ? await JsonSerializer.DeserializeAsync(stream, _responseArrayTypeInfo, cts.Token).ConfigureAwait(false)\n+                    : await JsonSerializer.DeserializeAsync<RpcResponseMessage[]>(stream, _serializerOptions, cts.Token).ConfigureAwait(false);\n+\n+                _logger?.LogDebug(\"Received batch response: {Response}\", JsonSerializer.Serialize(rpcResponses, _serializerOptions));\n+                return rpcResponses!;\n+            }\n+            catch (TaskCanceledException ex)\n+            {\n+                var timeoutEx = new RpcClientTimeoutException($\"RPC timeout after {ConnectionTimeout.TotalMilliseconds} ms\", ex);\n+                _logger?.LogError(timeoutEx, \"Batch timeout error\");\n+                throw timeoutEx;\n+            }\n+            catch (Exception ex)\n+            {\n+                var rpcEx = new RpcClientUnknownException(\"Error calling batch RPC methods\", ex);\n+                _logger?.LogError(rpcEx, \"Batch RPC call error\");\n+                throw rpcEx;\n+            }\n+        }\n+    }\n+}\n+#endif\n\\ No newline at end of file"},{"sha":"30b082ab3c71cca7cb3068890cb3c6125abaf3c6","filename":"src/Nethereum.JsonRpc.SystemTextJsonRpcClient/RpcHttpHandlerFactory.cs","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcHttpHandlerFactory.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcHttpHandlerFactory.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FRpcHttpHandlerFactory.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,24 @@\n+#if NET7_0_OR_GREATER\n+using System;\n+using System.Net.Http;\n+\n+namespace Nethereum.JsonRpc.SystemTextJsonRpcClient\n+{\n+    public static class RpcHttpHandlerFactory\n+    {\n+        public static int MaxConnectionsPerServer { get; set; } = 20;\n+        public static TimeSpan ConnectionLifetime { get; set; } = TimeSpan.FromMinutes(10);\n+        public static TimeSpan IdleTimeout { get; set; } = TimeSpan.FromMinutes(5);\n+\n+        public static SocketsHttpHandler Create()\n+        {\n+            return new SocketsHttpHandler\n+            {\n+                PooledConnectionLifetime = ConnectionLifetime,\n+                PooledConnectionIdleTimeout = IdleTimeout,\n+                MaxConnectionsPerServer = MaxConnectionsPerServer\n+            };\n+        }\n+    }\n+}\n+#endif\n\\ No newline at end of file"},{"sha":"0a89a11062c09d4e5e0de824aa654b64c63441bf","filename":"src/Nethereum.JsonRpc.SystemTextJsonRpcClient/SimpleRpcClient.cs","status":"added","additions":121,"deletions":0,"changes":121,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FSimpleRpcClient.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FSimpleRpcClient.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.JsonRpc.SystemTextJsonRpcClient%2FSimpleRpcClient.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,121 @@\n+#if NET7_0_OR_GREATER\n+using System;\n+using System.Net.Http;\n+using System.Text;\n+using System.Text.Json;\n+using System.Text.Json.Serialization;\n+using System.Text.Json.Serialization.Metadata;\n+using System.Threading;\n+using System.Threading.Tasks;\n+using Nethereum.JsonRpc.Client;\n+using Nethereum.JsonRpc.Client.RpcMessages;\n+\n+namespace Nethereum.JsonRpc.SystemTextJsonRpcClient\n+{\n+    public class SimpleRpcClient : ClientBase\n+    {\n+        private readonly HttpClient _httpClient;\n+        private readonly JsonSerializerOptions _serializerOptions;\n+        private readonly JsonTypeInfo<RpcRequestMessage> _requestTypeInfo;\n+        private readonly JsonTypeInfo<RpcRequestMessage[]> _requestArrayTypeInfo;\n+        private readonly JsonTypeInfo<RpcResponseMessage> _responseTypeInfo;\n+        private readonly JsonTypeInfo<RpcResponseMessage[]> _responseArrayTypeInfo;\n+\n+        public SimpleRpcClient(\n+            Uri baseUrl,\n+            HttpClient httpClient,\n+            JsonSerializerOptions serializerOptions = null,\n+            JsonSerializerContext context = null)\n+        {\n+            _httpClient = httpClient ?? throw new ArgumentNullException(nameof(httpClient));\n+            _httpClient.BaseAddress = baseUrl ?? throw new ArgumentNullException(nameof(baseUrl));\n+\n+            _serializerOptions = serializerOptions ?? new JsonSerializerOptions\n+            {\n+                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,\n+                WriteIndented = false,\n+                DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull\n+            };\n+\n+            if (context != null)\n+            {\n+                _serializerOptions.TypeInfoResolver = context;\n+                _requestTypeInfo = context.GetTypeInfo(typeof(RpcRequestMessage)) as JsonTypeInfo<RpcRequestMessage>;\n+                _requestArrayTypeInfo = context.GetTypeInfo(typeof(RpcRequestMessage[])) as JsonTypeInfo<RpcRequestMessage[]>;\n+                _responseTypeInfo = context.GetTypeInfo(typeof(RpcResponseMessage)) as JsonTypeInfo<RpcResponseMessage>;\n+                _responseArrayTypeInfo = context.GetTypeInfo(typeof(RpcResponseMessage[])) as JsonTypeInfo<RpcResponseMessage[]>;\n+            }\n+        }\n+\n+        public SimpleRpcClient(string url)\n+                                           : this(\n+                                               new Uri(url),\n+                                               new HttpClient(),\n+                                               serializerOptions: null,\n+                                               context: NethereumRpcJsonContext.Default)\n+        {\n+        }\n+\n+        public override T DecodeResult<T>(RpcResponseMessage rpcResponseMessage)\n+        {\n+            return rpcResponseMessage.GetResultSTJ<T>(true, _serializerOptions);\n+        }\n+\n+        protected override async Task<RpcResponseMessage> SendAsync(RpcRequestMessage request, string route = null)\n+        {\n+            try\n+            {\n+                var json = JsonSerializer.Serialize(request, typeof(RpcRequestMessage), _serializerOptions);\n+                \n+                var httpContent = new StringContent(json, Encoding.UTF8, \"application/json\");\n+\n+                using var cts = new CancellationTokenSource(ConnectionTimeout);\n+                var response = await _httpClient.PostAsync(route ?? string.Empty, httpContent, cts.Token).ConfigureAwait(false);\n+\n+                response.EnsureSuccessStatusCode();\n+                var stream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false);\n+\n+                return _responseTypeInfo != null\n+                    ? await JsonSerializer.DeserializeAsync(stream, _responseTypeInfo, cts.Token).ConfigureAwait(false)\n+                    : await JsonSerializer.DeserializeAsync<RpcResponseMessage>(stream, _serializerOptions, cts.Token).ConfigureAwait(false);\n+            }\n+            catch (TaskCanceledException ex)\n+            {\n+                throw new RpcClientTimeoutException($\"Rpc timeout after {ConnectionTimeout.TotalMilliseconds} milliseconds\", ex);\n+            }\n+            catch (Exception ex)\n+            {\n+                throw new RpcClientUnknownException(\"Error occurred when trying to send rpc request: \" + request.Method, ex);\n+            }\n+        }\n+\n+        protected override async Task<RpcResponseMessage[]> SendAsync(RpcRequestMessage[] requests)\n+        {\n+            try\n+            {\n+                var json = JsonSerializer.Serialize(requests, typeof(RpcRequestMessage[]), _serializerOptions);\n+             \n+                var httpContent = new StringContent(json, Encoding.UTF8, \"application/json\");\n+\n+                using var cts = new CancellationTokenSource(ConnectionTimeout);\n+                var response = await _httpClient.PostAsync(string.Empty, httpContent, cts.Token).ConfigureAwait(false);\n+\n+                response.EnsureSuccessStatusCode();\n+                var stream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false);\n+\n+                return _responseArrayTypeInfo != null\n+                    ? await JsonSerializer.DeserializeAsync(stream, _responseArrayTypeInfo, cts.Token).ConfigureAwait(false)\n+                    : await JsonSerializer.DeserializeAsync<RpcResponseMessage[]>(stream, _serializerOptions, cts.Token).ConfigureAwait(false);\n+            }\n+            catch (TaskCanceledException ex)\n+            {\n+                throw new RpcClientTimeoutException($\"Rpc timeout after {ConnectionTimeout.TotalMilliseconds} milliseconds\", ex);\n+            }\n+            catch (Exception ex)\n+            {\n+                throw new RpcClientUnknownException(\"Error occurred when trying to send rpc requests\", ex);\n+            }\n+        }\n+    }\n+}\n+#endif"},{"sha":"741b90237cc4ebea7a63a2672ee56c9e19574e46","filename":"src/Nethereum.KeyStore/Nethereum.KeyStore.csproj","status":"modified","additions":21,"deletions":15,"changes":36,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.KeyStore%2FNethereum.KeyStore.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.KeyStore%2FNethereum.KeyStore.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.KeyStore%2FNethereum.KeyStore.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -22,29 +22,35 @@\n     <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n   </PropertyGroup>\n \n-\t<!--\n-\t<ItemGroup Condition=\"\t\t'$(TargetFramework)' != 'net35' \n-\t\t\t                And '$(TargetFramework)' != 'net451' \n-\t\t\t\t\t\t\tAnd '$(TargetFramework)' != 'net461' \n-\t\t\t\t\t\t\tAnd '$(TargetFramework)' != 'net472' \n-\t\t\t\t\t\t\tAnd '$(TargetFramework)' != 'net6.0' \n-\t\t\t\t\t\t\tAnd '$(TargetFramework)' != 'net8.0' \n-\t\t\t\t\t\t\tAnd '$(TargetFramework)' != 'net9.0'\">\n-\t\t<PackageReference Include=\"Portable.BouncyCastle\" Version=\"[1.8.2,2.0)\" />\n+\t<!-- Use Portable.BouncyCastle for other frameworks -->\n+\t<ItemGroup Condition=\"'$(TargetFramework)' != 'net472' \n+                  And '$(TargetFramework)' != 'net6.0' \n+                  And '$(TargetFramework)' != 'net8.0' \n+                  And '$(TargetFramework)' != 'net9.0'\">\n+\t\t<PackageReference Include=\"Portable.BouncyCastle\" Version=\"[1.9.0,2.0)\" />\n \t</ItemGroup>\n \n-\t<ItemGroup Condition=\" '$(TargetFramework)' == 'net6.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0'\">\n-\t\t<PackageReference Include=\"BouncyCastle.Cryptography\" Version=\"[2.4.0,3.0)\" />\n+\t<!-- Use BouncyCastle.Cryptography for specific frameworks -->\n+\t<ItemGroup Condition=\"'$(TargetFramework)' == 'net472' \n+                  Or '$(TargetFramework)' == 'net6.0' \n+                  Or '$(TargetFramework)' == 'net8.0' \n+                  Or '$(TargetFramework)' == 'net9.0'\">\n+\t\t<PackageReference Include=\"BouncyCastle.Cryptography\" Version=\"[2.5.1,3.0)\" />\n \t</ItemGroup>\n \n-\t<PropertyGroup Condition=\" '$(TargetFramework)' == 'net6.0' Or '$(TargetFramework)' == 'net8.0' Or '$(TargetFramework)' == 'net9.0' \">\n+\t<!-- Define constant -->\n+\t<PropertyGroup Condition=\"'$(TargetFramework)' == 'net472' \n+                      Or '$(TargetFramework)' == 'net6.0' \n+                      Or '$(TargetFramework)' == 'net8.0' \n+                      Or '$(TargetFramework)' == 'net9.0'\">\n \t\t<DefineConstants>$(DefineConstants);LATEST_BOUNCYCASTLE</DefineConstants>\n \t</PropertyGroup>\n--->\n \n- <ItemGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetFramework)' != 'net451' And '$(TargetFramework)' != 'net461' And '$(TargetFramework)' != 'net472'\">\n+\t<!--\n+  <ItemGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetFramework)' != 'net451' And '$(TargetFramework)' != 'net461' And '$(TargetFramework)' != 'net472'\">\n \t\t<PackageReference Include=\"Portable.BouncyCastle\" Version=\"[1.8.2,2.0)\" />\n- </ItemGroup>\n+  </ItemGroup>\n+\t-->\n \t\n   <PropertyGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetUnityNet461AOT)' != 'true'\">\n     <SignAssembly>true</SignAssembly>"},{"sha":"3219cc62d8facd08f6798329d51efcc7b538bf66","filename":"src/Nethereum.Merkle/LeanIncrementalMerkleTree.cs","status":"added","additions":289,"deletions":0,"changes":289,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FLeanIncrementalMerkleTree.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FLeanIncrementalMerkleTree.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Merkle%2FLeanIncrementalMerkleTree.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,289 @@\n+#if NET5_0_OR_GREATER\n+using System.Text.Json;\n+#else\n+using Newtonsoft.Json;\n+#endif\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using Nethereum.Merkle.StrategyOptions.PairingConcat;\n+using Nethereum.Util.ByteArrayConvertors;\n+using Nethereum.Util.HashProviders;\n+using Nethereum.Util;\n+\n+namespace Nethereum.Merkle\n+{\n+    public class LeanIncrementalMerkleTree<T>\n+    {\n+        private readonly List<T> _leaves = new List<T>();\n+        private readonly IHashProvider _hashProvider;\n+        private readonly IByteArrayConvertor<T> _byteArrayConvertor;\n+        private readonly IPairConcatStrategy _pairConcatStrategy;\n+        public List<T> Leaves => _leaves;\n+\n+        public byte[] Root { get; private set; }\n+\n+        public LeanIncrementalMerkleTree(\n+            IHashProvider hashProvider,\n+            IByteArrayConvertor<T> byteArrayConvertor,\n+            PairingConcatType pairingConcatType = PairingConcatType.Normal)\n+        {\n+            _hashProvider = hashProvider ?? throw new ArgumentNullException(nameof(hashProvider));\n+            _byteArrayConvertor = byteArrayConvertor ?? throw new ArgumentNullException(nameof(byteArrayConvertor));\n+            _pairConcatStrategy = PairingConcatFactory.GetPairConcatStrategy(pairingConcatType);\n+#if NET5_0_OR_GREATER\n+            Root = Array.Empty<byte>();\n+#else\n+            Root = new byte[0];\n+#endif\n+        }\n+\n+        public void InsertLeaf(T leaf)\n+        {\n+            if (leaf == null) throw new ArgumentNullException(nameof(leaf));\n+            _leaves.Add(leaf);\n+            UpdateRootIncrementally();\n+        }\n+\n+        public void InsertMany(IEnumerable<T> leaves)\n+        {\n+            if (leaves == null) throw new ArgumentNullException(nameof(leaves));\n+            var list = leaves.ToList();\n+            if (list.Count == 0) return;\n+            _leaves.AddRange(list);\n+            UpdateRootIncrementally();\n+        }\n+\n+        public void Update(int index, T newLeaf)\n+        {\n+            if (newLeaf == null) throw new ArgumentNullException(nameof(newLeaf));\n+            if (index < 0 || index >= _leaves.Count)\n+                throw new ArgumentOutOfRangeException(nameof(index), $\"Index {index} is out of range\");\n+\n+            _leaves[index] = newLeaf;\n+            UpdateRootIncrementally();\n+        }\n+\n+        public void UpdateMany(int[] indices, T[] newLeaves)\n+        {\n+            if (indices == null) throw new ArgumentNullException(nameof(indices));\n+            if (newLeaves == null) throw new ArgumentNullException(nameof(newLeaves));\n+            if (indices.Length != newLeaves.Length)\n+                throw new ArgumentException(\"The number of indices must match the number of leaves\");\n+            if (indices.Length == 0) return;\n+\n+            var seenIndices = new HashSet<int>();\n+            for (int i = 0; i < indices.Length; i++)\n+            {\n+                if (indices[i] < 0 || indices[i] >= _leaves.Count)\n+                    throw new ArgumentOutOfRangeException(nameof(indices), $\"Index {indices[i]} at position {i} is out of range\");\n+                if (!seenIndices.Add(indices[i]))\n+                    throw new ArgumentException($\"Duplicate index {indices[i]} at position {i}\");\n+                if (newLeaves[i] == null)\n+                    throw new ArgumentNullException(nameof(newLeaves), $\"Leaf at position {i} is null\");\n+            }\n+\n+            for (int i = 0; i < indices.Length; i++)\n+            {\n+                _leaves[indices[i]] = newLeaves[i];\n+            }\n+            UpdateRootIncrementally();\n+        }\n+\n+        public bool Has(T leaf)\n+        {\n+            if (leaf == null) throw new ArgumentNullException(nameof(leaf));\n+            return _leaves.Contains(leaf);\n+        }\n+\n+        public int IndexOf(T leaf)\n+        {\n+            if (leaf == null) throw new ArgumentNullException(nameof(leaf));\n+            return _leaves.IndexOf(leaf);\n+        }\n+\n+        public string Export(Func<byte[], string> nodeFormatter = null)\n+        {\n+            nodeFormatter = nodeFormatter ?? (bytes => Convert.ToBase64String(bytes));\n+            var nodes = new List<List<string>>();\n+            var leavesAsBytes = _leaves.Select(_byteArrayConvertor.ConvertToByteArray).ToList();\n+            nodes.Add(leavesAsBytes.Select(nodeFormatter).ToList());\n+\n+            var currentLevel = leavesAsBytes;\n+            while (currentLevel.Count > 1)\n+            {\n+                var nextLevel = PairwiseHash(currentLevel);\n+                nodes.Add(nextLevel.Select(nodeFormatter).ToList());\n+                currentLevel = nextLevel;\n+            }\n+\n+#if NET5_0_OR_GREATER\n+            return JsonSerializer.Serialize(nodes);\n+#else\n+            return JsonConvert.SerializeObject(nodes);\n+#endif\n+        }\n+\n+        public static LeanIncrementalMerkleTree<T> Import(\n+            IHashProvider hashProvider,\n+            IByteArrayConvertor<T> byteArrayConvertor,\n+            string json,\n+            Func<string, T> leafMapper,\n+            Func<string, byte[]> nodeParser = null,\n+            PairingConcatType pairingConcatType = PairingConcatType.Normal)\n+        {\n+            if (hashProvider == null) throw new ArgumentNullException(nameof(hashProvider));\n+            if (byteArrayConvertor == null) throw new ArgumentNullException(nameof(byteArrayConvertor));\n+            if (string.IsNullOrEmpty(json)) throw new ArgumentNullException(nameof(json));\n+            if (leafMapper == null) throw new ArgumentNullException(nameof(leafMapper));\n+\n+            nodeParser = nodeParser ?? (str => Convert.FromBase64String(str));\n+            var tree = new LeanIncrementalMerkleTree<T>(hashProvider, byteArrayConvertor, pairingConcatType);\n+\n+            try\n+            {\n+#if NET5_0_OR_GREATER\n+                var nodes = JsonSerializer.Deserialize<List<List<string>>>(json);\n+#else\n+                var nodes = JsonConvert.DeserializeObject<List<List<string>>>(json);\n+#endif\n+                if (nodes == null || nodes.Count == 0 || nodes[0].Count == 0)\n+                    throw new ArgumentException(\"Invalid JSON: empty or malformed tree data\");\n+\n+                var leaves = nodes[0].Select(leafMapper).ToList();\n+                tree._leaves.AddRange(leaves);\n+                tree.UpdateRootIncrementally();\n+\n+                // Validate upper levels if nodeParser is provided\n+                if (nodeParser != null && nodes.Count > 1)\n+                {\n+                    var computedNodes = new List<List<byte[]>> { tree._leaves.Select(byteArrayConvertor.ConvertToByteArray).ToList() };\n+                    var currentLevel = computedNodes[0];\n+                    while (currentLevel.Count > 1)\n+                    {\n+                        computedNodes.Add(tree.PairwiseHash(currentLevel));\n+                        currentLevel = computedNodes.Last(); ;\n+                    }\n+\n+                    for (int level = 1; level < nodes.Count; level++)\n+                    {\n+                        var expectedNodes = nodes[level].Select(nodeParser).ToList();\n+                        if (level < computedNodes.Count)\n+                        {\n+                            var computedLevel = computedNodes[level];\n+                            if (!expectedNodes.SequenceEqual(computedLevel, new ByteArrayComparer()))\n+                                throw new ArgumentException($\"Invalid tree data: mismatch at level {level}\");\n+                        }\n+                    }\n+                }\n+            }\n+#if NET5_0_OR_GREATER\n+            catch (System.Text.Json.JsonException ex)\n+#else\n+            catch (JsonException ex)\n+#endif\n+            {\n+                throw new ArgumentException(\"Invalid JSON format\", nameof(json), ex);\n+            }\n+\n+            return tree;\n+        }\n+\n+        private void UpdateRootIncrementally()\n+        {\n+            var nodes = _leaves.Select(_byteArrayConvertor.ConvertToByteArray).ToList();\n+            while (nodes.Count > 1)\n+            {\n+                var temp = new List<byte[]>();\n+                for (int i = 0; i < nodes.Count; i += 2)\n+                {\n+                    if (i + 1 < nodes.Count)\n+                        temp.Add(HashPair(nodes[i], nodes[i + 1]));\n+                    else\n+                        temp.Add(nodes[i]);\n+                }\n+                nodes = temp;\n+            }\n+#if NET5_0_OR_GREATER\n+            Root = nodes.FirstOrDefault() ?? Array.Empty<byte>();\n+#else\n+            Root = nodes.FirstOrDefault() ?? new byte[0];\n+#endif\n+        }\n+\n+        public MerkleProof GenerateProof(int leafIndex)\n+        {\n+            if (leafIndex < 0 || leafIndex >= _leaves.Count)\n+                throw new ArgumentOutOfRangeException(nameof(leafIndex));\n+            var proofNodes = new List<byte[]>();\n+            int index = leafIndex;\n+            var currentLevel = _leaves.Select(_byteArrayConvertor.ConvertToByteArray).ToList();\n+            for (int level = 0; currentLevel.Count > 1; level++)\n+            {\n+                int siblingIndex = index ^ 1;\n+                if (siblingIndex < currentLevel.Count)\n+                    proofNodes.Add(currentLevel[siblingIndex]);\n+                index /= 2;\n+                currentLevel = PairwiseHash(currentLevel);\n+            }\n+            return new MerkleProof { ProofNodes = proofNodes };\n+        }\n+\n+        public bool VerifyProof(MerkleProof proof, T leaf, byte[] root)\n+        {\n+            if (proof == null) throw new ArgumentNullException(nameof(proof));\n+            if (leaf == null) throw new ArgumentNullException(nameof(leaf));\n+            if (root == null) throw new ArgumentNullException(nameof(root));\n+            var computedHash = _byteArrayConvertor.ConvertToByteArray(leaf);\n+            foreach (var node in proof.ProofNodes)\n+            {\n+                computedHash = HashPair(computedHash, node);\n+            }\n+            return computedHash.SequenceEqual(root);\n+        }\n+\n+        private byte[] HashPair(byte[] left, byte[] right)\n+        {\n+            var combined = _pairConcatStrategy.Concat(left, right);\n+            return _hashProvider.ComputeHash(combined);\n+        }\n+\n+        private List<byte[]> PairwiseHash(List<byte[]> nodes)\n+        {\n+            var nextLevel = new List<byte[]>();\n+            for (int i = 0; i < nodes.Count; i += 2)\n+            {\n+                if (i + 1 < nodes.Count)\n+                    nextLevel.Add(HashPair(nodes[i], nodes[i + 1]));\n+                else\n+                    nextLevel.Add(nodes[i]);\n+            }\n+            return nextLevel;\n+        }\n+\n+        public int Size => _leaves.Count;\n+\n+        public int Depth\n+        {\n+            get\n+            {\n+                if (_leaves.Count == 0) return 0;\n+#if NETCOREAPP2_1_OR_GREATER || NET5_0_OR_GREATER\n+                return (int)Math.Ceiling(Math.Log2(_leaves.Count));\n+#else\n+                return (int)Math.Ceiling(Log2(_leaves.Count));\n+#endif\n+            }\n+        }\n+\n+        // Fallback Log2 implementation for older .NET versions\n+#if !(NETCOREAPP2_1_OR_GREATER || NET5_0_OR_GREATER)\n+        private static double Log2(double x)\n+        {\n+            if (x <= 0) throw new ArgumentOutOfRangeException(nameof(x), \"Value must be positive\");\n+            return Math.Log(x, 2);\n+        }\n+#endif\n+    }\n+\n+}\n\\ No newline at end of file"},{"sha":"93d97749b8f963104ff18c2d58840f6429e3d8e5","filename":"src/Nethereum.Merkle/MerkleProof.cs","status":"added","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FMerkleProof.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FMerkleProof.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Merkle%2FMerkleProof.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,10 @@\n+using System.Collections.Generic;\n+\n+namespace Nethereum.Merkle\n+{\n+    public class MerkleProof\n+    {\n+        public List<byte[]> ProofNodes { get; set; } = new List<byte[]>();\n+    }\n+\n+}"},{"sha":"ae1a0f2253b9e5cb15c5bf85b1b670f2526c8767","filename":"src/Nethereum.Merkle/MerkleTree.cs","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FMerkleTree.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Merkle%2FMerkleTree.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Merkle%2FMerkleTree.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,7 +8,7 @@\n namespace Nethereum.Merkle\n {\n \n-    public class MerkleTree<T>\n+public class MerkleTree<T>\n     {\n         private readonly IHashProvider _hashProvider;\n         private readonly IByteArrayConvertor<T> _byteArrayConvertor;"},{"sha":"fb72fefaa1ed309f493ae10003a8d92b4ea51a5d","filename":"src/Nethereum.Metamask.Blazor/Nethereum.Metamask.Blazor.csproj","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Metamask.Blazor%2FNethereum.Metamask.Blazor.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Metamask.Blazor%2FNethereum.Metamask.Blazor.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Metamask.Blazor%2FNethereum.Metamask.Blazor.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -27,6 +27,7 @@\n \t\t<None Include=\"..\\..\\NethereumKey.snk\" />\n \t</ItemGroup>\n \t<ItemGroup>\n+\t  <ProjectReference Include=\"..\\Nethereum.Blazor\\Nethereum.Blazor.csproj\" />\n \t  <ProjectReference Include=\"..\\Nethereum.Metamask\\Nethereum.Metamask.csproj\" />\n \t</ItemGroup>\n </Project>"},{"sha":"cfe4b49108a9bfda7c3ccc691c85eb8d3e57f407","filename":"src/Nethereum.Model/Authorisation7702RLPEncoderAndHasher.cs","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisation7702RLPEncoderAndHasher.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisation7702RLPEncoderAndHasher.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FAuthorisation7702RLPEncoderAndHasher.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,65 @@\n+﻿using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.RLP;\n+using Nethereum.Util;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Numerics;\n+\n+namespace Nethereum.Model\n+{\n+    public static class Authorisation7702RLPEncoderAndHasher\n+    {\n+        public static byte MAGIC_NUMBER = 0x05;\n+        public static void Validate(this Authorisation7702 authorisation)\n+        {\n+            if (authorisation.ChainId < 0 || authorisation.ChainId >= BigInteger.Pow(2, 256))\n+                throw new ArgumentOutOfRangeException(nameof(authorisation.ChainId), \"ChainId must be < 2^256.\");\n+            if (authorisation.Nonce < 0 || authorisation.Nonce >= BigInteger.Pow(2, 64))\n+                throw new ArgumentOutOfRangeException(nameof(authorisation.Nonce), \"Nonce must be < 2^64.\");\n+            if (string.IsNullOrEmpty(authorisation.Address) || !authorisation.Address.IsValidEthereumAddressLength())\n+                throw new ArgumentException(\"Address length must be exactly 20 bytes.\", nameof(authorisation.Address));\n+        }\n+\n+        public static byte[] Encode(this Authorisation7702 authorisation)\n+        {\n+            Validate(authorisation);\n+            var encodedItem = new List<byte[]>();\n+            encodedItem.Add(RLP.RLP.EncodeElement(authorisation.ChainId.ToBytesForRLPEncoding()));\n+            encodedItem.Add(RLP.RLP.EncodeElement(authorisation.Address.HexToByteArray()));\n+            encodedItem.Add(RLP.RLP.EncodeElement(authorisation.Nonce.ToBytesForRLPEncoding()));\n+            var encoded = RLP.RLP.EncodeList(encodedItem.ToArray());\n+            return AddMagicNumberToEncodedBytes(encoded);\n+        }\n+\n+        public static Authorisation7702 DecodeRLPToAuthorisation7702(byte[] encodedBytes)\n+        {\n+            if (encodedBytes.Length < 1 || encodedBytes[0] != MAGIC_NUMBER)\n+                throw new ArgumentException(\"Encoded bytes do not contain the magic number.\", nameof(encodedBytes));\n+            var decoded = (RLPCollection)RLP.RLP.Decode(encodedBytes.Skip(1).ToArray());\n+            var chainId = decoded[0].RLPData.ToBigIntegerFromRLPDecoded();\n+            var address = decoded[1].RLPData.ToHex();\n+            var nonce = decoded[2].RLPData.ToBigIntegerFromRLPDecoded();\n+            return new Authorisation7702\n+            {\n+                ChainId = chainId,\n+                Address = address,\n+                Nonce = nonce\n+            };\n+        }\n+\n+        public static byte[] EncodeAndHash(this Authorisation7702 authorisation)\n+        {\n+            var encoded = Encode(authorisation);\n+            return new Sha3Keccack().CalculateHash(encoded);\n+        }\n+\n+        public static byte[] AddMagicNumberToEncodedBytes(byte[] encodedBytes)\n+        {\n+            var returnBytes = new byte[encodedBytes.Length + 1];\n+            Array.Copy(encodedBytes, 0, returnBytes, 1, encodedBytes.Length);\n+            returnBytes[0] = MAGIC_NUMBER;\n+            return returnBytes;\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"ae7396ea7e47fafce16dff50113a31657b367672","filename":"src/Nethereum.Model/Authorisation7702Signed.cs","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisation7702Signed.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisation7702Signed.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FAuthorisation7702Signed.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,61 @@\n+﻿using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.RLP;\n+using Nethereum.Util;\n+using System;\n+using System.Collections.Generic;\n+using System.Numerics;\n+\n+namespace Nethereum.Model\n+{\n+    public class Authorisation7702\n+    {\n+        public BigInteger ChainId { get; set; }\n+        public string Address { get; set; }\n+        public BigInteger Nonce { get; set; }\n+    }\n+       \n+    public class Authorisation7702Signed: Authorisation7702, ISignature\n+    {\n+\n+        public Authorisation7702Signed()\n+        {\n+        }\n+\n+        public Authorisation7702Signed(BigInteger chainId, string address, BigInteger nonce, byte[] r, byte[] s, byte[] v)\n+        {\n+            ChainId = chainId;\n+            Address = address;\n+            Nonce = nonce;\n+            V = v;\n+            R = r;\n+            S = s;\n+        }\n+\n+        public Authorisation7702Signed(Authorisation7702 authorisation, Signature signature)\n+        {\n+            ChainId = authorisation.ChainId;\n+            Address = authorisation.Address;\n+            Nonce = authorisation.Nonce;\n+            V = signature.V;\n+            R = signature.R;\n+            S = signature.S;\n+        }\n+\n+        public Authorisation7702Signed(Authorisation7702 authorisation, byte[] r, byte[] s, byte[] v)\n+        {\n+            ChainId = authorisation.ChainId;\n+            Address = authorisation.Address;\n+            Nonce = authorisation.Nonce;\n+            V = v;\n+            R = r;\n+            S = s;\n+        }\n+        /// <summary>\n+        /// YParity value / V\n+        /// </summary>\n+        public byte[] V { get; set; }\n+        public byte[] R { get; set; }\n+        public byte[] S { get; set; }\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"f31a374bdee2032f278b68fe5d9440fd26c3cb84","filename":"src/Nethereum.Model/AuthorisationListRLPEncoderDecoder.cs","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisationListRLPEncoderDecoder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FAuthorisationListRLPEncoderDecoder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FAuthorisationListRLPEncoderDecoder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,56 @@\n+﻿using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.RLP;\n+using Nethereum.Util;\n+using System;\n+using System.Collections.Generic;\n+using System.Numerics;\n+\n+namespace Nethereum.Model\n+{\n+    public class AuthorisationListRLPEncoderDecoder\n+    {\n+        public static byte[] Encode(List<Authorisation7702Signed> authorisationListItem)\n+        {\n+            var encodedData = new List<byte[]>();\n+\n+            foreach (var accessListItem in authorisationListItem)\n+            {\n+                Authorisation7702RLPEncoderAndHasher.Validate(accessListItem);\n+                var encodedItem = new List<byte[]>\n+                {\n+                    RLP.RLP.EncodeElement(accessListItem.ChainId.ToBytesForRLPEncoding()),\n+                    RLP.RLP.EncodeElement(accessListItem.Address.HexToByteArray()),\n+                    RLP.RLP.EncodeElement(accessListItem.Nonce.ToBytesForRLPEncoding()),\n+                    RLP.RLP.EncodeElement(accessListItem.V.TrimZeroBytes()),\n+                    RLP.RLP.EncodeElement(accessListItem.R.TrimZeroBytes()),\n+                    RLP.RLP.EncodeElement(accessListItem.S.TrimZeroBytes())\n+                };\n+                encodedData.Add(RLP.RLP.EncodeList(encodedItem.ToArray()));\n+            }\n+\n+            return RLP.RLP.EncodeList(encodedData.ToArray());\n+        }\n+        public static List<Authorisation7702Signed> Decode(byte[] encoded)\n+        {\n+            var decodedList = (RLPCollection)(RLP.RLP.Decode(encoded));\n+\n+\n+            var accessLists = new List<Authorisation7702Signed>();\n+            foreach (var rlpElement in decodedList)\n+            {\n+                var decodedItem = (RLPCollection)rlpElement;\n+                var authorisationListItem = new Authorisation7702Signed();\n+                authorisationListItem.ChainId = decodedItem[0].RLPData.ToBigIntegerFromRLPDecoded();\n+                authorisationListItem.Address = decodedItem[1].RLPData.ToHex();\n+                authorisationListItem.Nonce = decodedItem[2].RLPData.ToBigIntegerFromRLPDecoded();\n+                authorisationListItem.V = decodedItem[3].RLPData;\n+                authorisationListItem.R = decodedItem[4].RLPData;\n+                authorisationListItem.S = decodedItem[5].RLPData;\n+                accessLists.Add(authorisationListItem);\n+            }\n+\n+            return accessLists;\n+        }\n+\n+    }\n+}\n\\ No newline at end of file"},{"sha":"cd2b99e023b8b80c9d572ab43971d7440ce6bc69","filename":"src/Nethereum.Model/Transaction1559.cs","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction1559.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction1559.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FTransaction1559.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -8,9 +8,7 @@\n \n namespace Nethereum.Model\n {\n-\n-\n-    public class Transaction1559: SignedTypeTransaction\n+    public class Transaction1559 : SignedTypeTransaction\n     {\n         public Transaction1559(BigInteger chainId, BigInteger? nonce, BigInteger? maxPriorityFeePerGas, BigInteger? maxFeePerGas,\n             BigInteger? gasLimit, string receiverAddress, BigInteger? amount, string data, List<AccessListItem> accessList)"},{"sha":"c7357a22a0f1d5e84cab37c70feeabdcf8d0cabe","filename":"src/Nethereum.Model/Transaction7702.cs","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction7702.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction7702.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FTransaction7702.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,61 @@\n+﻿using System.Collections.Generic;\n+using System.Numerics;\n+\n+namespace Nethereum.Model\n+{\n+    public class Gas7702\n+    {\n+        public const int PER_AUTH_BASE_COST = 12500;\n+        public const int PER_EMPTY_ACCOUNT_COST\t= 25000;\n+    }\n+\n+    public class Transaction7702 : SignedTypeTransaction\n+    {\n+        public Transaction7702(BigInteger chainId, BigInteger? nonce, BigInteger? maxPriorityFeePerGas, BigInteger? maxFeePerGas,\n+            BigInteger? gasLimit, string receiverAddress, BigInteger? amount, string data, List<AccessListItem> accessList,\n+            List<Authorisation7702Signed> authorisationList)\n+        {\n+            ChainId = chainId;\n+            Nonce = nonce;\n+            MaxPriorityFeePerGas = maxPriorityFeePerGas;\n+            MaxFeePerGas = maxFeePerGas;\n+            GasLimit = gasLimit;\n+            ReceiverAddress = receiverAddress;\n+            Amount = amount;\n+            Data = data;\n+            AccessList = accessList;\n+            AuthorisationList = authorisationList;\n+        }\n+\n+        public Transaction7702(BigInteger chainId, BigInteger? nonce, BigInteger? maxPriorityFeePerGas, BigInteger? maxFeePerGas,\n+            BigInteger? gasLimit, string receiverAddress, BigInteger? amount, string data, List<AccessListItem> accessList,\n+            List<Authorisation7702Signed> authorisationList, Signature signature) :\n+            this(chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, receiverAddress, amount, data, accessList, authorisationList)\n+        {\n+            Signature = signature;\n+        }\n+\n+        public BigInteger ChainId { get; private set; }\n+        public BigInteger? Nonce { get; private set; }\n+        public BigInteger? MaxPriorityFeePerGas { get; private set; }\n+        public BigInteger? MaxFeePerGas { get; private set; }\n+        public BigInteger? GasLimit { get; private set; }\n+        public string ReceiverAddress { get; private set; }\n+        public BigInteger? Amount { get; private set; }\n+        public string Data { get; private set; }\n+        public List<AccessListItem> AccessList { get; private set; }\n+        public List<Authorisation7702Signed> AuthorisationList { get; private set; }\n+\n+        public override TransactionType TransactionType => TransactionType.EIP7702;\n+\n+        public override byte[] GetRLPEncoded()\n+        {\n+            return Transaction7702Encoder.Current.Encode(this);\n+        }\n+\n+        public override byte[] GetRLPEncodedRaw()\n+        {\n+            return Transaction7702Encoder.Current.EncodeRaw(this);\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"92f2ab243089f9e6c4ad92c1bbc2354ec312b5fa","filename":"src/Nethereum.Model/Transaction7702Encoder.cs","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction7702Encoder.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransaction7702Encoder.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FTransaction7702Encoder.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,75 @@\n+﻿using System.Collections.Generic;\n+using System.Linq;\n+using Nethereum.Hex.HexConvertors.Extensions;\n+using Nethereum.RLP;\n+\n+namespace Nethereum.Model\n+{\n+    public class Transaction7702Encoder : TransactionTypeEncoder<Transaction7702>\n+    {\n+        public static Transaction7702Encoder Current { get; } = new Transaction7702Encoder();\n+        public byte Type = TransactionType.EIP7702.AsByte();\n+\n+        public List<byte[]> GetEncodedElements(Transaction7702 transaction)\n+        {\n+            var encodedData = new List<byte[]>\n+            {\n+                RLP.RLP.EncodeElement(transaction.ChainId.ToBytesForRLPEncoding()),\n+                RLP.RLP.EncodeElement(GetBigIntegerForEncoding(transaction.Nonce)),\n+                RLP.RLP.EncodeElement(GetBigIntegerForEncoding(transaction.MaxPriorityFeePerGas)),\n+                RLP.RLP.EncodeElement(GetBigIntegerForEncoding(transaction.MaxFeePerGas)),\n+                RLP.RLP.EncodeElement(GetBigIntegerForEncoding(transaction.GasLimit)),\n+                RLP.RLP.EncodeElement(transaction.ReceiverAddress.HexToByteArray()),\n+                RLP.RLP.EncodeElement(GetBigIntegerForEncoding(transaction.Amount)),\n+                RLP.RLP.EncodeElement(transaction.Data.HexToByteArray()),\n+                AccessListRLPEncoderDecoder.EncodeAccessList(transaction.AccessList),\n+                AuthorisationListRLPEncoderDecoder.Encode(transaction.AuthorisationList)\n+            };\n+            return encodedData;\n+        }\n+\n+        public override byte[] EncodeRaw(Transaction7702 transaction)\n+        {\n+            var encodedBytes = RLP.RLP.EncodeList(GetEncodedElements(transaction).ToArray());\n+            var returnBytes = AddTypeToEncodedBytes(encodedBytes, Type);\n+            return returnBytes;\n+        }\n+\n+        public override byte[] Encode(Transaction7702 transaction)\n+        {\n+            var encodedData = GetEncodedElements(transaction);\n+\n+            RLPSignedDataEncoder.AddSignatureToEncodedData(transaction.Signature, encodedData);\n+\n+            var encodedBytes = RLP.RLP.EncodeList(encodedData.ToArray());\n+            var returnBytes = AddTypeToEncodedBytes(encodedBytes, Type);\n+            return returnBytes;\n+        }\n+\n+        public override Transaction7702 Decode(byte[] rlpData)\n+        {\n+            if (rlpData[0] == Type)\n+            {\n+                rlpData = rlpData.Skip(1).ToArray();\n+            }\n+\n+            var decodedList = RLP.RLP.Decode(rlpData);\n+            var decodedElements = (RLPCollection)decodedList;\n+            var chainId = decodedElements[0].RLPData.ToBigIntegerFromRLPDecoded();\n+            var nonce = decodedElements[1].RLPData.ToBigIntegerFromRLPDecoded();\n+            var maxPriorityFeePerGas = decodedElements[2].RLPData.ToBigIntegerFromRLPDecoded();\n+            var maxFeePerGas = decodedElements[3].RLPData.ToBigIntegerFromRLPDecoded();\n+            var gasLimit = decodedElements[4].RLPData.ToBigIntegerFromRLPDecoded();\n+            var receiverAddress = decodedElements[5].RLPData?.ToHex(true);\n+            var amount = decodedElements[6].RLPData.ToBigIntegerFromRLPDecoded();\n+            var data = decodedElements[7].RLPData?.ToHex(true);\n+            var accessList = AccessListRLPEncoderDecoder.DecodeAccessList(decodedElements[8].RLPData);\n+            var authorizationList = AuthorisationListRLPEncoderDecoder.Decode(decodedElements[9].RLPData);\n+\n+            var signature = RLPSignedDataDecoder.DecodeSignature(decodedElements, 10);\n+\n+            return new Transaction7702(chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit,\n+                receiverAddress, amount, data, accessList, authorizationList, signature);\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"0ccf753716ae6aa33fc4eb9f20bb120064009516","filename":"src/Nethereum.Model/TransactionFactory.cs","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransactionFactory.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransactionFactory.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FTransactionFactory.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -38,6 +38,8 @@ public static ITransactionTypeDecoder GetTransactionTypeDecoder(TransactionType\n                 case TransactionType.LegacyEIP2930:\n                     return new Transaction2930Encoder();\n \n+                case TransactionType.EIP7702:\n+                    return new Transaction7702Encoder();\n                 default:\n                     throw new ArgumentOutOfRangeException(nameof(transactionType), transactionType, null);\n             }\n@@ -97,6 +99,23 @@ public static ISignedTransaction Create1559Transaction(BigInteger? chainId, BigI\n                 signature);\n         }\n \n+        public static ISignedTransaction Create7702Transaction(BigInteger? chainId, BigInteger? nonce,\n+            BigInteger? maxPriorityFeePerGas, BigInteger? maxFeePerGas,\n+            BigInteger? gasLimit, string to, BigInteger? amount, string data,\n+            List<AccessListItem> accessList, List<Authorisation7702Signed> authorisationList,\n+            string r, string s, string v)\n+            {\n+                var rBytes = r.HexToByteArray();\n+                var sBytes = s.HexToByteArray();\n+                var vBytes = v.HexToByteArray();\n+\n+                var signature = new Signature(rBytes, sBytes, vBytes);\n+                return new Transaction7702(chainId ?? 0, nonce ?? 0, maxPriorityFeePerGas ?? 0, maxFeePerGas ?? 0,\n+                    gasLimit ?? 0, to, amount ?? 0, data, accessList, authorisationList, signature);\n+            }\n+\n+\n+\n         public static ISignedTransaction Create2930Transaction(BigInteger? chainId, BigInteger? nonce,\n            BigInteger? gasPrice,\n            BigInteger? gasLimit, string to, BigInteger? amount, string data,\n@@ -117,7 +136,7 @@ public static ISignedTransaction Create2930Transaction(BigInteger? chainId, BigI\n         public static ISignedTransaction CreateTransaction(BigInteger? chainId, byte? transactionType, BigInteger? nonce,\n             BigInteger? maxPriorityFeePerGas, BigInteger? maxFeePerGas, BigInteger? gasPrice,\n             BigInteger? gasLimit, string to, BigInteger? amount, string data,\n-            List<AccessListItem> accessList, string r, string s, string v)\n+            List<AccessListItem> accessList, List<Authorisation7702Signed> authorisationLists, string r, string s, string v)\n         {\n             if (transactionType.HasValue && transactionType == (int)TransactionType.EIP1559)\n             {\n@@ -131,6 +150,12 @@ public static ISignedTransaction CreateTransaction(BigInteger? chainId, byte? tr\n                     data, accessList, r, s, v);\n             }\n \n+            if(transactionType.HasValue && transactionType == (int)TransactionType.EIP7702)\n+            {\n+                return Create7702Transaction(chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, amount,\n+                    data, accessList, authorisationLists, r, s, v);\n+            }\n+\n             if (!transactionType.HasValue || transactionType == 0)\n             {\n                 return CreateLegacyTransaction(to, gasLimit ?? 0, gasPrice ?? 0, amount ?? 0, data, nonce ?? 0, r, s,"},{"sha":"0e620a249db3f7e130e3f555761b23d4f75a7d7b","filename":"src/Nethereum.Model/TransactionType.cs","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransactionType.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Model%2FTransactionType.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Model%2FTransactionType.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -7,7 +7,8 @@ public enum TransactionType\n         LegacyTransaction = -1,\n         LegacyChainTransaction = -2,\n         LegacyEIP2930 = 0X01,\n-        EIP1559 = 0X02 \n+        EIP1559 = 0X02,\n+        EIP7702 = 0X04\n     }\n \n     public static class TransactionTypeExtensions"},{"sha":"e52ab21c1852264ea78abf98cdafd62d1a604558","filename":"src/Nethereum.Mud.Contracts/package-lock.json","status":"removed","additions":0,"deletions":1071,"changes":1071,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Mud.Contracts%2Fpackage-lock.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Mud.Contracts%2Fpackage-lock.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Mud.Contracts%2Fpackage-lock.json?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,1071 +0,0 @@\n-{\n-  \"name\": \"nethereum.mud.contracts\",\n-  \"lockfileVersion\": 3,\n-  \"requires\": true,\n-  \"packages\": {\n-    \"\": {\n-      \"name\": \"nethereum.mud.contracts\",\n-      \"dependencies\": {\n-        \"@latticexyz/store\": \"^2.0.4\",\n-        \"@latticexyz/world\": \"^2.0.4\",\n-        \"@latticexyz/world-modules\": \"^2.0.4\"\n-      }\n-    },\n-    \"node_modules/@adraffy/ens-normalize\": {\n-      \"version\": \"1.10.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@adraffy/ens-normalize/-/ens-normalize-1.10.0.tgz\",\n-      \"integrity\": \"sha512-nA9XHtlAkYfJxY7bce8DcN7eKxWWCWkU+1GR9d+U6MbNpfwQp8TI7vqOsBsMcHoT4mBu2kypKoSKnghEzOOq5Q==\"\n-    },\n-    \"node_modules/@arktype/util\": {\n-      \"version\": \"0.0.27\",\n-      \"resolved\": \"https://registry.npmjs.org/@arktype/util/-/util-0.0.27.tgz\",\n-      \"integrity\": \"sha512-ZkPuSU8Q56YVgPInFhojLTujejM+VPfaZx6Guop41CvnozWFOTlC0uAHuDqvY4nYq3zXsMkRwm8LmaRZ3mslMg==\"\n-    },\n-    \"node_modules/@esbuild/android-arm\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.17.19.tgz\",\n-      \"integrity\": \"sha512-rIKddzqhmav7MSmoFCmDIb6e2W57geRsM94gV2l38fzhXMwq7hZoClug9USI2pFRGL06f4IOPHHpFNOkWieR8A==\",\n-      \"cpu\": [\n-        \"arm\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"android\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/android-arm64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-KBMWvEZooR7+kzY0BtbTQn0OAYY7CsiydT63pVEaPtVYF0hXbUaOyZog37DKxK7NF3XacBJOpYT4adIJh+avxA==\",\n-      \"cpu\": [\n-        \"arm64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"android\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/android-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-uUTTc4xGNDT7YSArp/zbtmbhO0uEEK9/ETW29Wk1thYUJBz3IVnvgEiEwEa9IeLyvnpKrWK64Utw2bgUmDveww==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"android\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/darwin-arm64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-80wEoCfF/hFKM6WE1FyBHc9SfUblloAWx6FJkFWTWiCoht9Mc0ARGEM47e67W9rI09YoUxJL68WHfDRYEAvOhg==\",\n-      \"cpu\": [\n-        \"arm64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"darwin\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/darwin-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-IJM4JJsLhRYr9xdtLytPLSH9k/oxR3boaUIYiHkAawtwNOXKE8KoU8tMvryogdcT8AU+Bflmh81Xn6Q0vTZbQw==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"darwin\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/freebsd-arm64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-pBwbc7DufluUeGdjSU5Si+P3SoMF5DQ/F/UmTSb8HXO80ZEAJmrykPyzo1IfNbAoaqw48YRpv8shwd1NoI0jcQ==\",\n-      \"cpu\": [\n-        \"arm64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"freebsd\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/freebsd-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-4lu+n8Wk0XlajEhbEffdy2xy53dpR06SlzvhGByyg36qJw6Kpfk7cp45DR/62aPH9mtJRmIyrXAS5UWBrJT6TQ==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"freebsd\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-arm\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.17.19.tgz\",\n-      \"integrity\": \"sha512-cdmT3KxjlOQ/gZ2cjfrQOtmhG4HJs6hhvm3mWSRDPtZ/lP5oe8FWceS10JaSJC13GBd4eH/haHnqf7hhGNLerA==\",\n-      \"cpu\": [\n-        \"arm\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-arm64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-ct1Tg3WGwd3P+oZYqic+YZF4snNl2bsnMKRkb3ozHmnM0dGWuxcPTTntAF6bOP0Sp4x0PjSF+4uHQ1xvxfRKqg==\",\n-      \"cpu\": [\n-        \"arm64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-ia32\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.17.19.tgz\",\n-      \"integrity\": \"sha512-w4IRhSy1VbsNxHRQpeGCHEmibqdTUx61Vc38APcsRbuVgK0OPEnQ0YD39Brymn96mOx48Y2laBQGqgZ0j9w6SQ==\",\n-      \"cpu\": [\n-        \"ia32\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-loong64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-2iAngUbBPMq439a+z//gE+9WBldoMp1s5GWsUSgqHLzLJ9WoZLZhpwWuym0u0u/4XmZ3gpHmzV84PonE+9IIdQ==\",\n-      \"cpu\": [\n-        \"loong64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-mips64el\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.17.19.tgz\",\n-      \"integrity\": \"sha512-LKJltc4LVdMKHsrFe4MGNPp0hqDFA1Wpt3jE1gEyM3nKUvOiO//9PheZZHfYRfYl6AwdTH4aTcXSqBerX0ml4A==\",\n-      \"cpu\": [\n-        \"mips64el\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-ppc64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-/c/DGybs95WXNS8y3Ti/ytqETiW7EU44MEKuCAcpPto3YjQbyK3IQVKfF6nbghD7EcLUGl0NbiL5Rt5DMhn5tg==\",\n-      \"cpu\": [\n-        \"ppc64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-riscv64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-FC3nUAWhvFoutlhAkgHf8f5HwFWUL6bYdvLc/TTuxKlvLi3+pPzdZiFKSWz/PF30TB1K19SuCxDTI5KcqASJqA==\",\n-      \"cpu\": [\n-        \"riscv64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-s390x\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.17.19.tgz\",\n-      \"integrity\": \"sha512-IbFsFbxMWLuKEbH+7sTkKzL6NJmG2vRyy6K7JJo55w+8xDk7RElYn6xvXtDW8HCfoKBFK69f3pgBJSUSQPr+4Q==\",\n-      \"cpu\": [\n-        \"s390x\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/linux-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-68ngA9lg2H6zkZcyp22tsVt38mlhWde8l3eJLWkyLrp4HwMUr3c1s/M2t7+kHIhvMjglIBrFpncX1SzMckomGw==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"linux\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/netbsd-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-CwFq42rXCR8TYIjIfpXCbRX0rp1jo6cPIUPSaWwzbVI4aOfX96OXY8M6KNmtPcg7QjYeDmN+DD0Wp3LaBOLf4Q==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"netbsd\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/openbsd-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-cnq5brJYrSZ2CF6c35eCmviIN3k3RczmHz8eYaVlNasVqsNY+JKohZU5MKmaOI+KkllCdzOKKdPs762VCPC20g==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"openbsd\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/sunos-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-vCRT7yP3zX+bKWFeP/zdS6SqdWB8OIpaRq/mbXQxTGHnIxspRtigpkUcDMlSCOejlHowLqII7K2JKevwyRP2rg==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"sunos\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/win32-arm64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-yYx+8jwowUstVdorcMdNlzklLYhPxjniHWFKgRqH7IFlUEa0Umu3KuYplf1HUZZ422e3NU9F4LGb+4O0Kdcaag==\",\n-      \"cpu\": [\n-        \"arm64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"win32\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/win32-ia32\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.17.19.tgz\",\n-      \"integrity\": \"sha512-eggDKanJszUtCdlVs0RB+h35wNlb5v4TWEkq4vZcmVt5u/HiDZrTXe2bWFQUez3RgNHwx/x4sk5++4NSSicKkw==\",\n-      \"cpu\": [\n-        \"ia32\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"win32\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@esbuild/win32-x64\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.17.19.tgz\",\n-      \"integrity\": \"sha512-lAhycmKnVOuRYNtRtatQR1LPQf2oYCkRGkSFnseDAKPl8lu5SOsK/e1sXe5a0Pc5kHIHe6P2I/ilntNv2xf3cA==\",\n-      \"cpu\": [\n-        \"x64\"\n-      ],\n-      \"optional\": true,\n-      \"os\": [\n-        \"win32\"\n-      ],\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/common\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/common/-/common-2.0.4.tgz\",\n-      \"integrity\": \"sha512-tPxlaX0xym/y75WTfEVN0eBwCPh7Njs8sNTF6taJB+T/PGEXwWgPsUJ16KZR21Hm55DQj7eQtrYrlWYe6FmJQQ==\",\n-      \"dependencies\": {\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"@solidity-parser/parser\": \"^0.16.0\",\n-        \"debug\": \"^4.3.4\",\n-        \"execa\": \"^7.0.0\",\n-        \"p-queue\": \"^7.4.1\",\n-        \"p-retry\": \"^5.1.2\",\n-        \"prettier\": \"3.2.5\",\n-        \"prettier-plugin-solidity\": \"1.3.1\",\n-        \"viem\": \"2.7.12\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/config\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/config/-/config-2.0.4.tgz\",\n-      \"integrity\": \"sha512-aXMrPoblJEdq5aWEkC8cBHvEVfRScljQev5GfB6Lg/hgfXnnMQL8K54dvuBL7YOcbNNlxxRuW8E59+kiSPqKzg==\",\n-      \"dependencies\": {\n-        \"@latticexyz/common\": \"2.0.4\",\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"esbuild\": \"^0.17.15\",\n-        \"find-up\": \"^6.3.0\",\n-        \"viem\": \"2.7.12\",\n-        \"zod\": \"^3.21.4\",\n-        \"zod-validation-error\": \"^1.3.0\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/protocol-parser\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/protocol-parser/-/protocol-parser-2.0.4.tgz\",\n-      \"integrity\": \"sha512-a0yejaGlcfDiSjhynNfGjjO2nYC8mVwBdS1a+rAYKX2QqF1fxS4ajM0wNUktqay3dCXBXxRrMkn06p5lTNhTPQ==\",\n-      \"dependencies\": {\n-        \"@latticexyz/common\": \"2.0.4\",\n-        \"@latticexyz/config\": \"2.0.4\",\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"abitype\": \"1.0.0\",\n-        \"viem\": \"2.7.12\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/schema-type\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/schema-type/-/schema-type-2.0.4.tgz\",\n-      \"integrity\": \"sha512-wf+ohAZO/5IoMc8D4DPaZz8yrYfgSrUyATpuAh5KZ+qadp2WgKac38b1ql8OQDrJL3gQhRqija2106wxXIy/pQ==\",\n-      \"dependencies\": {\n-        \"abitype\": \"1.0.0\",\n-        \"viem\": \"2.7.12\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/store\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/store/-/store-2.0.4.tgz\",\n-      \"integrity\": \"sha512-h9jqRsrqyz90cKalGsKThFapVt2/JDTohLd+ADGuGdsjYcBn5dR/kVnDgLpkdMNk4ahWvRLE8pZqRgYWhxSPag==\",\n-      \"dependencies\": {\n-        \"@arktype/util\": \"0.0.27\",\n-        \"@latticexyz/common\": \"2.0.4\",\n-        \"@latticexyz/config\": \"2.0.4\",\n-        \"@latticexyz/protocol-parser\": \"2.0.4\",\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"abitype\": \"1.0.0\",\n-        \"arktype\": \"1.0.29-alpha\",\n-        \"viem\": \"2.7.12\",\n-        \"zod\": \"^3.21.4\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/world\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/world/-/world-2.0.4.tgz\",\n-      \"integrity\": \"sha512-/uTZCsTMy7qCHjIY7MgqwJa+HrC94/hkMnyiHgNHknY+TdG23PKigjiIfg2ls1I/umeKP4iNr3e1UV1vd3xyrw==\",\n-      \"dependencies\": {\n-        \"@arktype/util\": \"0.0.27\",\n-        \"@latticexyz/common\": \"2.0.4\",\n-        \"@latticexyz/config\": \"2.0.4\",\n-        \"@latticexyz/protocol-parser\": \"2.0.4\",\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"@latticexyz/store\": \"2.0.4\",\n-        \"abitype\": \"1.0.0\",\n-        \"arktype\": \"1.0.29-alpha\",\n-        \"viem\": \"2.7.12\",\n-        \"zod\": \"^3.21.4\"\n-      }\n-    },\n-    \"node_modules/@latticexyz/world-modules\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https://registry.npmjs.org/@latticexyz/world-modules/-/world-modules-2.0.4.tgz\",\n-      \"integrity\": \"sha512-+UlUkxeyrvftRHGK72Yu04UePGgIeNSNr9p0UB4blq72pJD5i1d630T6LesdGQmI3X4m5/zG6+91RM7H4lLwow==\",\n-      \"dependencies\": {\n-        \"@latticexyz/common\": \"2.0.4\",\n-        \"@latticexyz/config\": \"2.0.4\",\n-        \"@latticexyz/schema-type\": \"2.0.4\",\n-        \"@latticexyz/store\": \"2.0.4\",\n-        \"@latticexyz/world\": \"2.0.4\",\n-        \"zod\": \"^3.21.4\"\n-      }\n-    },\n-    \"node_modules/@noble/curves\": {\n-      \"version\": \"1.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@noble/curves/-/curves-1.2.0.tgz\",\n-      \"integrity\": \"sha512-oYclrNgRaM9SsBUBVbb8M6DTV7ZHRTKugureoYEncY5c65HOmRzvSiTE3y5CYaPYJA/GVkrhXEoF0M3Ya9PMnw==\",\n-      \"dependencies\": {\n-        \"@noble/hashes\": \"1.3.2\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://paulmillr.com/funding/\"\n-      }\n-    },\n-    \"node_modules/@noble/hashes\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@noble/hashes/-/hashes-1.3.2.tgz\",\n-      \"integrity\": \"sha512-MVC8EAQp7MvEcm30KWENFjgR+Mkmf+D189XJTkFIlwohU5hcBbn1ZkKq7KVTi2Hme3PMGF390DaL52beVrIihQ==\",\n-      \"engines\": {\n-        \"node\": \">= 16\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://paulmillr.com/funding/\"\n-      }\n-    },\n-    \"node_modules/@scure/base\": {\n-      \"version\": \"1.1.6\",\n-      \"resolved\": \"https://registry.npmjs.org/@scure/base/-/base-1.1.6.tgz\",\n-      \"integrity\": \"sha512-ok9AWwhcgYuGG3Zfhyqg+zwl+Wn5uE+dwC0NV/2qQkx4dABbb/bx96vWu8NSj+BNjjSjno+JRYRjle1jV08k3g==\",\n-      \"funding\": {\n-        \"url\": \"https://paulmillr.com/funding/\"\n-      }\n-    },\n-    \"node_modules/@scure/bip32\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@scure/bip32/-/bip32-1.3.2.tgz\",\n-      \"integrity\": \"sha512-N1ZhksgwD3OBlwTv3R6KFEcPojl/W4ElJOeCZdi+vuI5QmTFwLq3OFf2zd2ROpKvxFdgZ6hUpb0dx9bVNEwYCA==\",\n-      \"dependencies\": {\n-        \"@noble/curves\": \"~1.2.0\",\n-        \"@noble/hashes\": \"~1.3.2\",\n-        \"@scure/base\": \"~1.1.2\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://paulmillr.com/funding/\"\n-      }\n-    },\n-    \"node_modules/@scure/bip39\": {\n-      \"version\": \"1.2.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@scure/bip39/-/bip39-1.2.1.tgz\",\n-      \"integrity\": \"sha512-Z3/Fsz1yr904dduJD0NpiyRHhRYHdcnyh73FZWiV+/qhWi83wNJ3NWolYqCEN+ZWsUz2TWwajJggcRE9r1zUYg==\",\n-      \"dependencies\": {\n-        \"@noble/hashes\": \"~1.3.0\",\n-        \"@scure/base\": \"~1.1.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://paulmillr.com/funding/\"\n-      }\n-    },\n-    \"node_modules/@solidity-parser/parser\": {\n-      \"version\": \"0.16.2\",\n-      \"resolved\": \"https://registry.npmjs.org/@solidity-parser/parser/-/parser-0.16.2.tgz\",\n-      \"integrity\": \"sha512-PI9NfoA3P8XK2VBkK5oIfRgKDsicwDZfkVq9ZTBCQYGOP1N2owgY2dyLGyU5/J/hQs8KRk55kdmvTLjy3Mu3vg==\",\n-      \"dependencies\": {\n-        \"antlr4ts\": \"^0.5.0-alpha.4\"\n-      }\n-    },\n-    \"node_modules/@types/retry\": {\n-      \"version\": \"0.12.1\",\n-      \"resolved\": \"https://registry.npmjs.org/@types/retry/-/retry-0.12.1.tgz\",\n-      \"integrity\": \"sha512-xoDlM2S4ortawSWORYqsdU+2rxdh4LRW9ytc3zmT37RIKQh6IHyKwwtKhKis9ah8ol07DCkZxPt8BBvPjC6v4g==\"\n-    },\n-    \"node_modules/abitype\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/abitype/-/abitype-1.0.0.tgz\",\n-      \"integrity\": \"sha512-NMeMah//6bJ56H5XRj8QCV4AwuW6hB6zqz2LnhhLdcWVQOsXki6/Pn3APeqxCma62nXIcmZWdu1DlHWS74umVQ==\",\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/wevm\"\n-      },\n-      \"peerDependencies\": {\n-        \"typescript\": \">=5.0.4\",\n-        \"zod\": \"^3 >=3.22.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        },\n-        \"zod\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/antlr4ts\": {\n-      \"version\": \"0.5.0-alpha.4\",\n-      \"resolved\": \"https://registry.npmjs.org/antlr4ts/-/antlr4ts-0.5.0-alpha.4.tgz\",\n-      \"integrity\": \"sha512-WPQDt1B74OfPv/IMS2ekXAKkTZIHl88uMetg6q3OTqgFxZ/dxDXI0EWLyZid/1Pe6hTftyg5N7gel5wNAGxXyQ==\"\n-    },\n-    \"node_modules/arktype\": {\n-      \"version\": \"1.0.29-alpha\",\n-      \"resolved\": \"https://registry.npmjs.org/arktype/-/arktype-1.0.29-alpha.tgz\",\n-      \"integrity\": \"sha512-glMLgVhIQRSkR3tymiS+POAcWVJH09sfrgic0jHnyFL8BlhHAJZX2BzdImU9zYr1y9NBqy+U93ZNrRTHXsKRDw==\"\n-    },\n-    \"node_modules/cross-spawn\": {\n-      \"version\": \"7.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz\",\n-      \"integrity\": \"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==\",\n-      \"dependencies\": {\n-        \"path-key\": \"^3.1.0\",\n-        \"shebang-command\": \"^2.0.0\",\n-        \"which\": \"^2.0.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 8\"\n-      }\n-    },\n-    \"node_modules/debug\": {\n-      \"version\": \"4.3.4\",\n-      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n-      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n-      \"dependencies\": {\n-        \"ms\": \"2.1.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=6.0\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"supports-color\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/esbuild\": {\n-      \"version\": \"0.17.19\",\n-      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.17.19.tgz\",\n-      \"integrity\": \"sha512-XQ0jAPFkK/u3LcVRcvVHQcTIqD6E2H1fvZMA5dQPSOWb3suUbWbfbRf94pjc0bNzRYLfIrDRQXr7X+LHIm5oHw==\",\n-      \"hasInstallScript\": true,\n-      \"bin\": {\n-        \"esbuild\": \"bin/esbuild\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"optionalDependencies\": {\n-        \"@esbuild/android-arm\": \"0.17.19\",\n-        \"@esbuild/android-arm64\": \"0.17.19\",\n-        \"@esbuild/android-x64\": \"0.17.19\",\n-        \"@esbuild/darwin-arm64\": \"0.17.19\",\n-        \"@esbuild/darwin-x64\": \"0.17.19\",\n-        \"@esbuild/freebsd-arm64\": \"0.17.19\",\n-        \"@esbuild/freebsd-x64\": \"0.17.19\",\n-        \"@esbuild/linux-arm\": \"0.17.19\",\n-        \"@esbuild/linux-arm64\": \"0.17.19\",\n-        \"@esbuild/linux-ia32\": \"0.17.19\",\n-        \"@esbuild/linux-loong64\": \"0.17.19\",\n-        \"@esbuild/linux-mips64el\": \"0.17.19\",\n-        \"@esbuild/linux-ppc64\": \"0.17.19\",\n-        \"@esbuild/linux-riscv64\": \"0.17.19\",\n-        \"@esbuild/linux-s390x\": \"0.17.19\",\n-        \"@esbuild/linux-x64\": \"0.17.19\",\n-        \"@esbuild/netbsd-x64\": \"0.17.19\",\n-        \"@esbuild/openbsd-x64\": \"0.17.19\",\n-        \"@esbuild/sunos-x64\": \"0.17.19\",\n-        \"@esbuild/win32-arm64\": \"0.17.19\",\n-        \"@esbuild/win32-ia32\": \"0.17.19\",\n-        \"@esbuild/win32-x64\": \"0.17.19\"\n-      }\n-    },\n-    \"node_modules/eventemitter3\": {\n-      \"version\": \"5.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/eventemitter3/-/eventemitter3-5.0.1.tgz\",\n-      \"integrity\": \"sha512-GWkBvjiSZK87ELrYOSESUYeVIc9mvLLf/nXalMOS5dYrgZq9o5OVkbZAVM06CVxYsCwH9BDZFPlQTlPA1j4ahA==\"\n-    },\n-    \"node_modules/execa\": {\n-      \"version\": \"7.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-7.2.0.tgz\",\n-      \"integrity\": \"sha512-UduyVP7TLB5IcAQl+OzLyLcS/l32W/GLg+AhHJ+ow40FOk2U3SAllPwR44v4vmdFwIWqpdwxxpQbF1n5ta9seA==\",\n-      \"dependencies\": {\n-        \"cross-spawn\": \"^7.0.3\",\n-        \"get-stream\": \"^6.0.1\",\n-        \"human-signals\": \"^4.3.0\",\n-        \"is-stream\": \"^3.0.0\",\n-        \"merge-stream\": \"^2.0.0\",\n-        \"npm-run-path\": \"^5.1.0\",\n-        \"onetime\": \"^6.0.0\",\n-        \"signal-exit\": \"^3.0.7\",\n-        \"strip-final-newline\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^14.18.0 || ^16.14.0 || >=18.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n-      }\n-    },\n-    \"node_modules/find-up\": {\n-      \"version\": \"6.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-6.3.0.tgz\",\n-      \"integrity\": \"sha512-v2ZsoEuVHYy8ZIlYqwPe/39Cy+cFDzp4dXPaxNvkEuouymu+2Jbz0PxpKarJHYJTmv2HWT3O382qY8l4jMWthw==\",\n-      \"dependencies\": {\n-        \"locate-path\": \"^7.1.0\",\n-        \"path-exists\": \"^5.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/get-stream\": {\n-      \"version\": \"6.0.1\",\n-      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n-      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/human-signals\": {\n-      \"version\": \"4.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-4.3.1.tgz\",\n-      \"integrity\": \"sha512-nZXjEF2nbo7lIw3mgYjItAfgQXog3OjJogSbKa2CQIIvSGWcKgeJnQlNXip6NglNzYH45nSRiEVimMvYL8DDqQ==\",\n-      \"engines\": {\n-        \"node\": \">=14.18.0\"\n-      }\n-    },\n-    \"node_modules/is-stream\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-3.0.0.tgz\",\n-      \"integrity\": \"sha512-LnQR4bZ9IADDRSkvpqMGvt/tEJWclzklNgSw48V5EAaAeDd6qGvN8ei6k5p0tvxSR171VmGyHuTiAOfxAbr8kA==\",\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/isexe\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n-      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n-    },\n-    \"node_modules/isows\": {\n-      \"version\": \"1.0.3\",\n-      \"resolved\": \"https://registry.npmjs.org/isows/-/isows-1.0.3.tgz\",\n-      \"integrity\": \"sha512-2cKei4vlmg2cxEjm3wVSqn8pcoRF/LX/wpifuuNquFO4SQmPwarClT+SUCA2lt+l581tTeZIPIZuIDo2jWN1fg==\",\n-      \"funding\": [\n-        {\n-          \"type\": \"github\",\n-          \"url\": \"https://github.com/sponsors/wagmi-dev\"\n-        }\n-      ],\n-      \"peerDependencies\": {\n-        \"ws\": \"*\"\n-      }\n-    },\n-    \"node_modules/locate-path\": {\n-      \"version\": \"7.2.0\",\n-      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-7.2.0.tgz\",\n-      \"integrity\": \"sha512-gvVijfZvn7R+2qyPX8mAuKcFGDf6Nc61GdvGafQsHL0sBIxfKzA+usWn4GFC/bk+QdwPUD4kWFJLhElipq+0VA==\",\n-      \"dependencies\": {\n-        \"p-locate\": \"^6.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/lru-cache\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n-      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n-      \"dependencies\": {\n-        \"yallist\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      }\n-    },\n-    \"node_modules/merge-stream\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n-      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\"\n-    },\n-    \"node_modules/mimic-fn\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-4.0.0.tgz\",\n-      \"integrity\": \"sha512-vqiC06CuhBTUdZH+RYl8sFrL096vA45Ok5ISO6sE/Mr1jRbGH4Csnhi8f3wKVl7x8mO4Au7Ir9D3Oyv1VYMFJw==\",\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/ms\": {\n-      \"version\": \"2.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n-      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\n-    },\n-    \"node_modules/npm-run-path\": {\n-      \"version\": \"5.3.0\",\n-      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-5.3.0.tgz\",\n-      \"integrity\": \"sha512-ppwTtiJZq0O/ai0z7yfudtBpWIoxM8yE6nHi1X47eFR2EWORqfbu6CnPlNsjeN683eT0qG6H/Pyf9fCcvjnnnQ==\",\n-      \"dependencies\": {\n-        \"path-key\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/npm-run-path/node_modules/path-key\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-4.0.0.tgz\",\n-      \"integrity\": \"sha512-haREypq7xkM7ErfgIyA0z+Bj4AGKlMSdlQE2jvJo6huWD1EdkKYV+G/T4nq0YEF2vgTT8kqMFKo1uHn950r4SQ==\",\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/onetime\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-6.0.0.tgz\",\n-      \"integrity\": \"sha512-1FlR+gjXK7X+AsAHso35MnyN5KqGwJRi/31ft6x0M194ht7S+rWAvd7PHss9xSKMzE0asv1pyIHaJYq+BbacAQ==\",\n-      \"dependencies\": {\n-        \"mimic-fn\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/p-limit\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-4.0.0.tgz\",\n-      \"integrity\": \"sha512-5b0R4txpzjPWVw/cXXUResoD4hb6U/x9BH08L7nw+GN1sezDzPdxeRvpc9c433fZhBan/wusjbCsqwqm4EIBIQ==\",\n-      \"dependencies\": {\n-        \"yocto-queue\": \"^1.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/p-locate\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-6.0.0.tgz\",\n-      \"integrity\": \"sha512-wPrq66Llhl7/4AGC6I+cqxT07LhXvWL08LNXz1fENOw0Ap4sRZZ/gZpTTJ5jpurzzzfS2W/Ge9BY3LgLjCShcw==\",\n-      \"dependencies\": {\n-        \"p-limit\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/p-queue\": {\n-      \"version\": \"7.4.1\",\n-      \"resolved\": \"https://registry.npmjs.org/p-queue/-/p-queue-7.4.1.tgz\",\n-      \"integrity\": \"sha512-vRpMXmIkYF2/1hLBKisKeVYJZ8S2tZ0zEAmIJgdVKP2nq0nh4qCdf8bgw+ZgKrkh71AOCaqzwbJJk1WtdcF3VA==\",\n-      \"dependencies\": {\n-        \"eventemitter3\": \"^5.0.1\",\n-        \"p-timeout\": \"^5.0.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/p-retry\": {\n-      \"version\": \"5.1.2\",\n-      \"resolved\": \"https://registry.npmjs.org/p-retry/-/p-retry-5.1.2.tgz\",\n-      \"integrity\": \"sha512-couX95waDu98NfNZV+i/iLt+fdVxmI7CbrrdC2uDWfPdUAApyxT4wmDlyOtR5KtTDmkDO0zDScDjDou9YHhd9g==\",\n-      \"dependencies\": {\n-        \"@types/retry\": \"0.12.1\",\n-        \"retry\": \"^0.13.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/p-timeout\": {\n-      \"version\": \"5.1.0\",\n-      \"resolved\": \"https://registry.npmjs.org/p-timeout/-/p-timeout-5.1.0.tgz\",\n-      \"integrity\": \"sha512-auFDyzzzGZZZdHz3BtET9VEz0SE/uMEAx7uWfGPucfzEwwe/xH0iVeZibQmANYE/hp9T2+UUZT5m+BKyrDp3Ew==\",\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/path-exists\": {\n-      \"version\": \"5.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-5.0.0.tgz\",\n-      \"integrity\": \"sha512-RjhtfwJOxzcFmNOi6ltcbcu4Iu+FL3zEj83dk4kAS+fVpTxXLO1b38RvJgT/0QwvV/L3aY9TAnyv0EOqW4GoMQ==\",\n-      \"engines\": {\n-        \"node\": \"^12.20.0 || ^14.13.1 || >=16.0.0\"\n-      }\n-    },\n-    \"node_modules/path-key\": {\n-      \"version\": \"3.1.1\",\n-      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n-      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/prettier\": {\n-      \"version\": \"3.2.5\",\n-      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-3.2.5.tgz\",\n-      \"integrity\": \"sha512-3/GWa9aOC0YeD7LUfvOG2NiDyhOWRvt1k+rcKhOuYnMY24iiCphgneUfJDyFXd6rZCAnuLBv6UeAULtrhT/F4A==\",\n-      \"bin\": {\n-        \"prettier\": \"bin/prettier.cjs\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=14\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n-      }\n-    },\n-    \"node_modules/prettier-plugin-solidity\": {\n-      \"version\": \"1.3.1\",\n-      \"resolved\": \"https://registry.npmjs.org/prettier-plugin-solidity/-/prettier-plugin-solidity-1.3.1.tgz\",\n-      \"integrity\": \"sha512-MN4OP5I2gHAzHZG1wcuJl0FsLS3c4Cc5494bbg+6oQWBPuEamjwDvmGfFMZ6NFzsh3Efd9UUxeT7ImgjNH4ozA==\",\n-      \"dependencies\": {\n-        \"@solidity-parser/parser\": \"^0.17.0\",\n-        \"semver\": \"^7.5.4\",\n-        \"solidity-comments-extractor\": \"^0.0.8\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=16\"\n-      },\n-      \"peerDependencies\": {\n-        \"prettier\": \">=2.3.0\"\n-      }\n-    },\n-    \"node_modules/prettier-plugin-solidity/node_modules/@solidity-parser/parser\": {\n-      \"version\": \"0.17.0\",\n-      \"resolved\": \"https://registry.npmjs.org/@solidity-parser/parser/-/parser-0.17.0.tgz\",\n-      \"integrity\": \"sha512-Nko8R0/kUo391jsEHHxrGM07QFdnPGvlmox4rmH0kNiNAashItAilhy4Mv4pK5gQmW5f4sXAF58fwJbmlkGcVw==\"\n-    },\n-    \"node_modules/retry\": {\n-      \"version\": \"0.13.1\",\n-      \"resolved\": \"https://registry.npmjs.org/retry/-/retry-0.13.1.tgz\",\n-      \"integrity\": \"sha512-XQBQ3I8W1Cge0Seh+6gjj03LbmRFWuoszgK9ooCpwYIrhhoO80pfq4cUkU5DkknwfOfFteRwlZ56PYOGYyFWdg==\",\n-      \"engines\": {\n-        \"node\": \">= 4\"\n-      }\n-    },\n-    \"node_modules/semver\": {\n-      \"version\": \"7.6.0\",\n-      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.0.tgz\",\n-      \"integrity\": \"sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==\",\n-      \"dependencies\": {\n-        \"lru-cache\": \"^6.0.0\"\n-      },\n-      \"bin\": {\n-        \"semver\": \"bin/semver.js\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      }\n-    },\n-    \"node_modules/shebang-command\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n-      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n-      \"dependencies\": {\n-        \"shebang-regex\": \"^3.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/shebang-regex\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n-      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules/signal-exit\": {\n-      \"version\": \"3.0.7\",\n-      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n-      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\"\n-    },\n-    \"node_modules/solidity-comments-extractor\": {\n-      \"version\": \"0.0.8\",\n-      \"resolved\": \"https://registry.npmjs.org/solidity-comments-extractor/-/solidity-comments-extractor-0.0.8.tgz\",\n-      \"integrity\": \"sha512-htM7Vn6LhHreR+EglVMd2s+sZhcXAirB1Zlyrv5zBuTxieCvjfnRpd7iZk75m/u6NOlEyQ94C6TWbBn2cY7w8g==\"\n-    },\n-    \"node_modules/strip-final-newline\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-3.0.0.tgz\",\n-      \"integrity\": \"sha512-dOESqjYr96iWYylGObzd39EuNTa5VJxyvVAEm5Jnh7KGo75V43Hk1odPQkNDyXNmUR6k+gEiDVXnjB8HJ3crXw==\",\n-      \"engines\": {\n-        \"node\": \">=12\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/viem\": {\n-      \"version\": \"2.7.12\",\n-      \"resolved\": \"https://registry.npmjs.org/viem/-/viem-2.7.12.tgz\",\n-      \"integrity\": \"sha512-NbV+Bycw0I4X8y6A04mgJ6+Imt7xXwflgnqisR3JXoJRNc77YSaQCscFN/dmwGLESTkgegJvi+j4nZY32GTpwQ==\",\n-      \"funding\": [\n-        {\n-          \"type\": \"github\",\n-          \"url\": \"https://github.com/sponsors/wevm\"\n-        }\n-      ],\n-      \"dependencies\": {\n-        \"@adraffy/ens-normalize\": \"1.10.0\",\n-        \"@noble/curves\": \"1.2.0\",\n-        \"@noble/hashes\": \"1.3.2\",\n-        \"@scure/bip32\": \"1.3.2\",\n-        \"@scure/bip39\": \"1.2.1\",\n-        \"abitype\": \"1.0.0\",\n-        \"isows\": \"1.0.3\",\n-        \"ws\": \"8.13.0\"\n-      },\n-      \"peerDependencies\": {\n-        \"typescript\": \">=5.0.4\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"typescript\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/which\": {\n-      \"version\": \"2.0.2\",\n-      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n-      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n-      \"dependencies\": {\n-        \"isexe\": \"^2.0.0\"\n-      },\n-      \"bin\": {\n-        \"node-which\": \"bin/node-which\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 8\"\n-      }\n-    },\n-    \"node_modules/ws\": {\n-      \"version\": \"8.13.0\",\n-      \"resolved\": \"https://registry.npmjs.org/ws/-/ws-8.13.0.tgz\",\n-      \"integrity\": \"sha512-x9vcZYTrFPC7aSIbj7sRCYo7L/Xb8Iy+pW0ng0wt2vCJv7M9HOMy0UoN3rr+IFC7hb7vXoqS+P9ktyLLLhO+LA==\",\n-      \"engines\": {\n-        \"node\": \">=10.0.0\"\n-      },\n-      \"peerDependencies\": {\n-        \"bufferutil\": \"^4.0.1\",\n-        \"utf-8-validate\": \">=5.0.2\"\n-      },\n-      \"peerDependenciesMeta\": {\n-        \"bufferutil\": {\n-          \"optional\": true\n-        },\n-        \"utf-8-validate\": {\n-          \"optional\": true\n-        }\n-      }\n-    },\n-    \"node_modules/yallist\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n-      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"\n-    },\n-    \"node_modules/yocto-queue\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-1.0.0.tgz\",\n-      \"integrity\": \"sha512-9bnSc/HEW2uRy67wc+T8UwauLuPJVn28jb+GtJY16iiKWyvmYJRXVT4UamsAEGQfPohgr2q4Tq0sQbQlxTfi1g==\",\n-      \"engines\": {\n-        \"node\": \">=12.20\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/sindresorhus\"\n-      }\n-    },\n-    \"node_modules/zod\": {\n-      \"version\": \"3.22.4\",\n-      \"resolved\": \"https://registry.npmjs.org/zod/-/zod-3.22.4.tgz\",\n-      \"integrity\": \"sha512-iC+8Io04lddc+mVqQ9AZ7OQ2MrUKGN+oIQyq1vemgt46jwCwLfhq7/pwnBnNXXXZb8VTVLKwp9EDkx+ryxIWmg==\",\n-      \"funding\": {\n-        \"url\": \"https://github.com/sponsors/colinhacks\"\n-      }\n-    },\n-    \"node_modules/zod-validation-error\": {\n-      \"version\": \"1.5.0\",\n-      \"resolved\": \"https://registry.npmjs.org/zod-validation-error/-/zod-validation-error-1.5.0.tgz\",\n-      \"integrity\": \"sha512-/7eFkAI4qV0tcxMBB/3+d2c1P6jzzZYdYSlBuAklzMuCrJu5bzJfHS0yVAS87dRHVlhftd6RFJDIvv03JgkSbw==\",\n-      \"engines\": {\n-        \"node\": \">=16.0.0\"\n-      },\n-      \"peerDependencies\": {\n-        \"zod\": \"^3.18.0\"\n-      }\n-    }\n-  }\n-}"},{"sha":"1d628b4e496971ae2a908250621a5aa1effa2fdd","filename":"src/Nethereum.Mud.Contracts/package.json","status":"removed","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/Nethereum/Nethereum/blob/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Mud.Contracts%2Fpackage.json","raw_url":"https://github.com/Nethereum/Nethereum/raw/9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70/src%2FNethereum.Mud.Contracts%2Fpackage.json","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Mud.Contracts%2Fpackage.json?ref=9715a7e8d8b7831c3e4b3c03171cf4589b8dcf70","patch":"@@ -1,8 +0,0 @@\n-{\n-  \"name\": \"nethereum.mud.contracts\",\n-  \"devDependencies\": {\n-    \"@latticexyz/store\": \"^2.0.4\",\n-    \"@latticexyz/world\": \"^2.0.4\",\n-    \"@latticexyz/world-modules\": \"^2.0.4\"\n-  }\n-}"},{"sha":"455a6baa871dcb20ccc3834bd953793aed8f4daa","filename":"src/Nethereum.MudBlazorComponents/ArrayInput.razor","status":"added","additions":134,"deletions":0,"changes":134,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FArrayInput.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FArrayInput.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FArrayInput.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,134 @@\n+﻿@using MudBlazor\n+@using System.Collections\n+@using System.Reflection\n+@using System.Numerics\n+@using System.Text.RegularExpressions\n+\n+    <MudText Typo=\"Typo.subtitle2\">@Title</MudText>\n+\n+    <MudTable Items=\"@(Items.Cast<object>())\" Dense=\"true\" Hover=\"true\">\n+        <HeaderContent>\n+            <MudTh>#</MudTh>\n+            <MudTh>Item</MudTh>\n+            <MudTh></MudTh>\n+        </HeaderContent>\n+        <RowTemplate Context=\"item\">\n+            @{\n+                var index = Items.IndexOf(item);\n+            }\n+            <MudTd>@(index + 1)</MudTd>\n+            <MudTd>\n+                @if (ItemType == typeof(BigInteger))\n+                {\n+                    var val = item is BigInteger b ? b : BigInteger.Zero;\n+                    <MudTextField Value=\"@val.ToString()\"\n+                                  ValueChanged=\"@GetBigIntegerChangedCallback(index)\"\n+                                  Variant=\"Variant.Filled\" />\n+                }\n+                else if (ItemType == typeof(byte[]))\n+                {\n+                    var bytes = item as byte[] ?? Array.Empty<byte>();\n+                    var hex = \"0x\" + BitConverter.ToString(bytes).Replace(\"-\", \"\").ToLower();\n+                    <MudTextField Value=\"@hex\"\n+                                  ValueChanged=\"@GetByteArrayChangedCallback(index)\"\n+                                  Variant=\"Variant.Filled\" />\n+                }\n+                else if (IsPrimitive(ItemType))\n+                {\n+                    <MudTextField @bind-Value=\"Items[index]\" Variant=\"Variant.Filled\" />\n+                }\n+                else\n+                {\n+                    <StructInput Model=\"Items[index]\" ModelType=\"ItemType\" />\n+                }\n+            </MudTd>\n+            <MudTd>\n+                <MudIconButton Icon=\"@Icons.Material.Filled.Delete\" Color=\"Color.Error\" OnClick=\"@(() => RemoveItem(index))\" />\n+            </MudTd>\n+        </RowTemplate>\n+    </MudTable>\n+\n+    <MudButton StartIcon=\"@Icons.Material.Filled.Add\" OnClick=\"AddItem\" Class=\"mt-2\" Color=\"Color.Secondary\">\n+        Add Item\n+    </MudButton>\n+\n+\n+@code {\n+    [Parameter] public IList Items { get; set; }\n+    [Parameter] public Type ItemType { get; set; }\n+    [Parameter] public string Title { get; set; } = \"Array\";\n+\n+    private void AddItem()\n+    {\n+        object instance = ItemType switch\n+        {\n+            var t when t == typeof(string) => string.Empty,\n+            var t when t == typeof(int) => 0,\n+            var t when t == typeof(uint) => 0u,\n+            var t when t == typeof(long) => 0L,\n+            var t when t == typeof(ulong) => 0UL,\n+            var t when t == typeof(bool) => false,\n+            var t when t == typeof(decimal) => 0m,\n+            var t when t == typeof(BigInteger) => BigInteger.Zero,\n+            var t when t == typeof(byte[]) => Array.Empty<byte>(),\n+            var t when t.GetConstructor(Type.EmptyTypes) is not null => Activator.CreateInstance(t),\n+            _ => null\n+        };\n+\n+        if (instance != null) Items.Add(instance);\n+    }\n+\n+    private void RemoveItem(int index)\n+    {\n+        if (index >= 0 && index < Items.Count)\n+        {\n+            Items.RemoveAt(index);\n+        }\n+    }\n+\n+    private void SetBigInteger(int index, string value)\n+    {\n+        if (BigInteger.TryParse(value, out var result))\n+        {\n+            Items[index] = result;\n+        }\n+    }\n+\n+    private void SetByteArray(int index, string hex)\n+    {\n+        try\n+        {\n+            if (!string.IsNullOrEmpty(hex))\n+            {\n+                var cleaned = hex.StartsWith(\"0x\") ? hex[2..] : hex;\n+                if (cleaned.Length % 2 != 0) cleaned = \"0\" + cleaned;\n+\n+                if (Regex.IsMatch(cleaned, \"^[0-9a-fA-F]+$\"))\n+                {\n+                    var bytes = Enumerable.Range(0, cleaned.Length / 2)\n+                        .Select(i => Convert.ToByte(cleaned.Substring(i * 2, 2), 16))\n+                        .ToArray();\n+\n+                    Items[index] = bytes;\n+                }\n+            }\n+        }\n+        catch { /* ignore */ }\n+    }\n+\n+    private bool IsPrimitive(Type type) =>\n+        type.IsPrimitive ||\n+        type == typeof(string) ||\n+        type == typeof(decimal) ||\n+        type == typeof(bool) ||\n+        type == typeof(int) ||\n+        type == typeof(uint) ||\n+        type == typeof(long) ||\n+        type == typeof(ulong);\n+\n+    private EventCallback<string> GetBigIntegerChangedCallback(int index)\n+        => EventCallback.Factory.Create<string>(this, v => SetBigInteger(index, v));\n+\n+    private EventCallback<string> GetByteArrayChangedCallback(int index)\n+        => EventCallback.Factory.Create<string>(this, v => SetByteArray(index, v));\n+}"},{"sha":"1b855b08401b4755013708f7aa6bfdfefc6c3e1f","filename":"src/Nethereum.MudBlazorComponents/ContractDeploymentComponent.razor","status":"added","additions":236,"deletions":0,"changes":236,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FContractDeploymentComponent.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FContractDeploymentComponent.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FContractDeploymentComponent.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,236 @@\n+﻿@using System.Numerics\n+@using MudBlazor\n+@using Nethereum.Web3\n+@using Nethereum.Contracts\n+@using Nethereum.Contracts.Services\n+@using Nethereum.RPC.Eth.DTOs\n+@using Nethereum.UI\n+@using Nethereum.Util\n+@typeparam TDeploymentMessage where TDeploymentMessage : ContractDeploymentMessage, new()\n+\n+\n+<MudExpansionPanels Elevation=\"1\" Class=\"mb-4\">\n+    <MudExpansionPanel  Expanded=\"false\">\n+        <TitleContent>\n+                    <MudText Typo=\"Typo.h5\">@Title</MudText>\n+        </TitleContent>\n+        <ChildContent>\n+<MudPaper Class=\"pa-4 mb-4\">\n+    <MudForm @ref=\"_form\">\n+        <MudStack Spacing=\"2\">\n+          \n+\n+            <StructInput Model=\"DeploymentMessage\"\n+                         ModelType=\"typeof(TDeploymentMessage)\"\n+                         Title=\"Deployment Inputs\"\n+                         ExcludedProperties=\"DefaultExcludedDeploymentProps\"\n+                         @key=\"DeploymentMessage\" />\n+\n+            <MudExpansionPanels Elevation=\"0\">\n+                <MudExpansionPanel Text=\"Optional Deployment Settings\">\n+                    <MudStack Spacing=\"2\">\n+                        <MudNumericField T=\"decimal\"\n+                                         @bind-Value=\"AmountToSendEth\"\n+                                         Label=\"Amount to Send (ETH)\"\n+                                         Variant=\"Variant.Filled\"\n+                                         FullWidth=\"true\"\n+                                         Immediate=\"true\" />\n+\n+                        <MudTextField @bind-Value=\"GasString\"\n+                                      Label=\"Gas (Units)\"\n+                                      Variant=\"Variant.Filled\"\n+                                      FullWidth=\"true\"\n+                                      Immediate=\"true\"\n+                                      Validation=\"@((Func<string, string>)ValidateBigInteger)\" />\n+\n+                        <MudTextField @bind-Value=\"NonceString\"\n+                                      Label=\"Nonce\"\n+                                      Variant=\"Variant.Filled\"\n+                                      FullWidth=\"true\"\n+                                      Immediate=\"true\"\n+                                     Validation=\"@((Func<string, string>)ValidateBigInteger)\" />\n+\n+                        <MudNumericField T=\"decimal?\"\n+                                         @bind-Value=\"GasPriceGwei\"\n+                                         Label=\"Gas Price (Gwei)\"\n+                                         Variant=\"Variant.Filled\"\n+                                         FullWidth=\"true\"\n+                                         Immediate=\"true\" />\n+\n+                        <MudNumericField T=\"decimal?\"\n+                                         @bind-Value=\"MaxFeePerGasGwei\"\n+                                         Label=\"Max Fee Per Gas (Gwei)\"\n+                                         Variant=\"Variant.Filled\"\n+                                         FullWidth=\"true\"\n+                                         Immediate=\"true\" />\n+\n+                        <MudNumericField T=\"decimal?\"\n+                                         @bind-Value=\"MaxPriorityFeePerGasGwei\"\n+                                         Label=\"Max Priority Fee (Gwei)\"\n+                                         Variant=\"Variant.Filled\"\n+                                         FullWidth=\"true\"\n+                                         Immediate=\"true\" />\n+                    </MudStack>\n+                </MudExpansionPanel>\n+            </MudExpansionPanels>\n+\n+            <MudButton OnClick=\"ValidateAndDeployAsync\"\n+                       Variant=\"Variant.Filled\"\n+                       Color=\"Color.Primary\"\n+                       StartIcon=\"@Icons.Material.Filled.Publish\"\n+                       Disabled=\"@IsLoading\"\n+                       >\n+                Deploy Contract\n+            </MudButton>\n+\n+            @if (!string.IsNullOrWhiteSpace(ErrorMessage))\n+            {\n+                <MudAlert Severity=\"Severity.Error\" Variant=\"Variant.Filled\">@ErrorMessage</MudAlert>\n+            }\n+\n+            @if (Receipt is not null)\n+            {\n+                <MudText Color=\"Color.Primary\">Contract Address: <b>@Receipt.ContractAddress</b></MudText>\n+\n+                <MudExpansionPanels Elevation=\"1\" Class=\"mb-4\">\n+                <MudExpansionPanel Expanded=\"true\">\n+                      <TitleContent>\n+                           <MudText Typo=\"Typo.h6\">Transaction Receipt</MudText>\n+                     </TitleContent>\n+                     <ChildContent>\n+                             <ResultOutput Result=\"Receipt\"\n+                                  ResultType=\"typeof(TransactionReceipt)\"\n+                                  ContractService=\"contractService\"\n+                                  AdditionalEventTypes=\"AdditionalEventTypes\" />\n+                        </ChildContent>\n+                    </MudExpansionPanel>\n+                </MudExpansionPanels>\n+            }\n+        </MudStack>\n+    </MudForm>\n+</MudPaper>\n+        </ChildContent>\n+    </MudExpansionPanel>\n+</MudExpansionPanels>\n+@code {\n+    [Parameter] public string Title { get; set; } = typeof(TDeploymentMessage).Name;\n+    [Parameter] public SelectedEthereumHostProviderService HostProvider { get; set; }\n+    [Parameter] public TDeploymentMessage DeploymentMessage { get; set; } = new();\n+    [Parameter] public string ContractAddress { get; set; }\n+    [Parameter] public EventCallback<string> ContractAddressChanged { get; set; }\n+    [Parameter] public Type ServiceType { get; set; }\n+    [Parameter] public IEnumerable<Type> AdditionalEventTypes { get; set; }\n+\n+    private MudForm _form;\n+    private TransactionReceipt Receipt;\n+    private string ErrorMessage;\n+    private bool IsLoading;\n+    private ContractServiceBase contractService;\n+\n+    private decimal AmountToSendEth\n+    {\n+        get => Web3.Convert.FromWei(DeploymentMessage.AmountToSend);\n+        set => DeploymentMessage.AmountToSend = Web3.Convert.ToWei(value);\n+    }\n+\n+    private string GasString\n+    {\n+        get => DeploymentMessage.Gas?.ToString() ?? \"\";\n+        set => DeploymentMessage.Gas = BigInteger.TryParse(value, out var result) ? result : null;\n+    }\n+\n+    private string NonceString\n+    {\n+        get => DeploymentMessage.Nonce?.ToString() ?? \"\";\n+        set => DeploymentMessage.Nonce = BigInteger.TryParse(value, out var result) ? result : null;\n+    }\n+\n+    private string ValidateBigInteger(string input)\n+    {\n+        if (string.IsNullOrWhiteSpace(input)) return null;\n+        return BigInteger.TryParse(input, out _) ? null : \"Invalid number\";\n+    }\n+\n+    private decimal? GasPriceGwei\n+    {\n+        get => DeploymentMessage.GasPrice.HasValue\n+            ? Web3.Convert.FromWei(DeploymentMessage.GasPrice.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+        set => DeploymentMessage.GasPrice = value.HasValue\n+            ? Web3.Convert.ToWei(value.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+    }\n+\n+    private decimal? MaxFeePerGasGwei\n+    {\n+        get => DeploymentMessage.MaxFeePerGas.HasValue\n+            ? Web3.Convert.FromWei(DeploymentMessage.MaxFeePerGas.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+        set => DeploymentMessage.MaxFeePerGas = value.HasValue\n+            ? Web3.Convert.ToWei(value.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+    }\n+\n+    private decimal? MaxPriorityFeePerGasGwei\n+    {\n+        get => DeploymentMessage.MaxPriorityFeePerGas.HasValue\n+            ? Web3.Convert.FromWei(DeploymentMessage.MaxPriorityFeePerGas.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+        set => DeploymentMessage.MaxPriorityFeePerGas = value.HasValue\n+            ? Web3.Convert.ToWei(value.Value, UnitConversion.EthUnit.Gwei)\n+            : null;\n+    }\n+\n+    private async Task ValidateAndDeployAsync()\n+    {\n+        await _form.Validate();\n+        if (_form.IsValid)\n+        {\n+            await DeployAsync();\n+        }\n+    }\n+\n+    private async Task DeployAsync()\n+    {\n+        ErrorMessage = null;\n+        Receipt = null;\n+        IsLoading = true;\n+\n+        try\n+        {\n+            var web3 = await HostProvider.SelectedHost.GetWeb3Async();\n+            var handler = web3.Eth.GetContractDeploymentHandler<TDeploymentMessage>();\n+            Receipt = await handler.SendRequestAndWaitForReceiptAsync(DeploymentMessage);\n+            ContractAddress = Receipt.ContractAddress;\n+            await ContractAddressChanged.InvokeAsync(ContractAddress);\n+\n+            if (ServiceType != null && !string.IsNullOrEmpty(ContractAddress))\n+            {\n+                var serviceInstance = Activator.CreateInstance(ServiceType, web3, ContractAddress);\n+                contractService = serviceInstance as ContractServiceBase;\n+            }\n+        }\n+        catch (Exception ex)\n+        {\n+            ErrorMessage = ex.ToString();\n+        }\n+        finally\n+        {\n+            IsLoading = false;\n+        }\n+    }\n+\n+    private static readonly HashSet<string> DefaultExcludedDeploymentProps = new()\n+    {\n+        nameof(ContractDeploymentMessage.FromAddress),\n+        nameof(ContractDeploymentMessage.AmountToSend),\n+        nameof(ContractDeploymentMessage.Gas),\n+        nameof(ContractDeploymentMessage.GasPrice),\n+        nameof(ContractDeploymentMessage.Nonce),\n+        nameof(ContractDeploymentMessage.MaxFeePerGas),\n+        nameof(ContractDeploymentMessage.MaxPriorityFeePerGas),\n+        nameof(ContractDeploymentMessage.TransactionType),\n+        nameof(ContractDeploymentMessage.AccessList),\n+        nameof(FunctionMessage.AuthorisationList)\n+    };\n+}"},{"sha":"a4d7e6d8201b165f6afe00e2129160155c43b0b5","filename":"src/Nethereum.MudBlazorComponents/DynamicRouteService.cs","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FDynamicRouteService.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FDynamicRouteService.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FDynamicRouteService.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,45 @@\n+﻿using Microsoft.AspNetCore.Components;\n+using Microsoft.AspNetCore.Components.Routing;\n+using MudBlazor;\n+using System;\n+using System.Collections.Generic;\n+using System.Linq;\n+using System.Reflection;\n+\n+namespace Nethereum.MudBlazorComponents\n+{\n+    public class DynamicRouteService\n+    {\n+        //.gen is converted to _gen as the type name\n+        public List<NavItem> GetGeneratedRoutes(string suffixFilter = \"_gen\")\n+        {\n+            return AppDomain.CurrentDomain.GetAssemblies()\n+                .SelectMany(a =>\n+                {\n+                    try { return a.GetExportedTypes(); } catch { return Enumerable.Empty<Type>(); }\n+                })\n+               .Where(t => typeof(ComponentBase).IsAssignableFrom(t))\n+               .Where(t => {\n+                       // Console.WriteLine(t.Name);\n+                        return t.Name.EndsWith(suffixFilter, StringComparison.OrdinalIgnoreCase);\n+                    })\n+                .SelectMany(t => t.GetCustomAttributes<RouteAttribute>().Select(r => new { t.Name, r.Template }))\n+                .Where(x => !string.IsNullOrWhiteSpace(x.Template))\n+                .Select(r => new NavItem\n+                {\n+                    Title = r.Name.Replace(suffixFilter, \"\", StringComparison.OrdinalIgnoreCase),\n+                    Href = r.Template,\n+                    Icon = Icons.Material.Filled.List\n+                })\n+               .ToList();\n+        }\n+    }\n+\n+    public class NavItem\n+    {\n+        public string Title { get; set; }\n+        public string Href { get; set; }\n+        public string Icon { get; set; }\n+        public NavLinkMatch Match { get; set; } = NavLinkMatch.Prefix;\n+    }\n+}"},{"sha":"8cbae1e572d2507eaa74b25681b0542b1af7ea5f","filename":"src/Nethereum.MudBlazorComponents/FormattedValue.razor","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FFormattedValue.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FFormattedValue.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FFormattedValue.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,35 @@\n+﻿@using MudBlazor\n+@inject IJSRuntime JS\n+\n+@if (!IsExpandable)\n+{\n+    <MudTextField Value=\"@Value\"\n+                  ReadOnly=\"true\"\n+                  Variant=\"Variant.Filled\"\n+                  Typo=\"Typo.subtitle2\" />\n+}\n+else\n+{\n+    <MudTextField Value=\"@Value\"\n+                  Typo=\"Typo.subtitle2\"\n+                  ReadOnly=\"true\"\n+                  Variant=\"Variant.Filled\"\n+                  Adornment=\"Adornment.End\"\n+                  AutoGrow=\"true\"\n+                  MaxLines=\"10\"\n+                  AdornmentIcon=\"@Icons.Material.Filled.ContentCopy\"\n+                  OnAdornmentClick=\"@(() => CopyToClipboard(Value))\" />\n+}\n+\n+@code {\n+    [Parameter] public string Value { get; set; }\n+    [Parameter] public int ShortenThreshold { get; set; } = 48;\n+\n+    private bool IsExpandable =>\n+        !string.IsNullOrEmpty(Value) && Value.Length > ShortenThreshold;\n+\n+    private async Task CopyToClipboard(string value)\n+    {\n+        await JS.InvokeVoidAsync(\"eval\", $\"navigator.clipboard.writeText(`{value}`)\");\n+    }\n+}\n\\ No newline at end of file"},{"sha":"5711131b5945c22483756e073b6a4638a0238f56","filename":"src/Nethereum.MudBlazorComponents/MudDevTableComponent.razor","status":"added","additions":230,"deletions":0,"changes":230,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FMudDevTableComponent.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FMudDevTableComponent.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FMudDevTableComponent.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,230 @@\n+﻿@using System.Numerics\n+@using System.Reflection\n+@using Microsoft.AspNetCore.Components\n+@using MudBlazor\n+@using Nethereum.Mud.Contracts.Core.Tables\n+@using Nethereum.Web3\n+@using Nethereum.Contracts\n+@using Nethereum.Contracts.Services\n+@using Nethereum.RPC.Eth.DTOs\n+@using Nethereum.ABI.FunctionEncoding\n+@using Nethereum.UI\n+@using Nethereum.Util\n+@using Nethereum.Mud\n+@using Nethereum.Mud.Contracts.Store.Tables\n+@typeparam TTableService\n+\n+<MudExpansionPanels Elevation=\"1\" Class=\"mb-4\">\n+    <MudExpansionPanel Expanded=\"false\">\n+        <TitleContent>\n+            <MudText Typo=\"Typo.h5\">@_resourceTitle</MudText>\n+        </TitleContent>\n+        <ChildContent>\n+            <MudPaper Class=\"pa-4 mb-4\">\n+                <MudForm @ref=\"_form\">\n+                    <MudStack Spacing=\"2\">\n+                        @if (!_isSingleton && _key != null && _keyType != null)\n+                        {\n+                            <StructInput Model=\"_key\"\n+                            ModelType=\"_keyType\"\n+                            Title=\"Record Key\"\n+                            @key=\"_key\" />\n+                        }\n+\n+                        <MudButton OnClick=\"QueryRecordAsync\"\n+                        Variant=\"Variant.Filled\"\n+                        Color=\"Color.Primary\"\n+                        StartIcon=\"@Icons.Material.Filled.Search\"\n+                        Disabled=\"@IsLoading\"\n+                        >\n+                            Load Record\n+                        </MudButton>\n+\n+                        @if (_value != null && _valueType != null)\n+                        {\n+                            <StructInput Model=\"_value\"\n+                            ModelType=\"_valueType\"\n+                            Title=\"Record Value\"\n+                            @key=\"_value\" />\n+\n+                            <MudButton OnClick=\"ValidateAndSaveAsync\"\n+                            Variant=\"Variant.Outlined\"\n+                            Color=\"Color.Secondary\"\n+                            StartIcon=\"@Icons.Material.Filled.Save\"\n+                            Disabled=\"@IsLoading\"\n+                            >\n+                                Save Record\n+                            </MudButton>\n+                        }\n+\n+                        @if (!string.IsNullOrEmpty(ErrorMessage))\n+                        {\n+                            <MudAlert Severity=\"Severity.Error\">@ErrorMessage</MudAlert>\n+                        }\n+\n+                        @if (Receipt != null)\n+                        {\n+                            <MudExpansionPanels Elevation=\"1\" Class=\"mb-4\">\n+                                <MudExpansionPanel Expanded=\"true\">\n+                                    <TitleContent>\n+                                        <MudText Typo=\"Typo.h6\">Transaction Receipt</MudText>\n+                                    </TitleContent>\n+                                    <ChildContent>\n+                                        <ResultOutput Result=\"Receipt\" ResultType=\"typeof(TransactionReceipt)\" />\n+                                    </ChildContent>\n+                                </MudExpansionPanel>\n+                            </MudExpansionPanels>\n+                        }\n+                    </MudStack>\n+                </MudForm>\n+            </MudPaper>\n+        </ChildContent>\n+    </MudExpansionPanel>\n+</MudExpansionPanels>\n+\n+@code {\n+    private bool _isSingleton;\n+\n+    [Parameter] public string ContractAddress { get; set; }\n+    [Parameter] public SelectedEthereumHostProviderService HostProvider { get; set; }\n+\n+    private object _key;\n+    private object _value;\n+    private Type _keyType;\n+    private Type _valueType;\n+    private Type _recordType;\n+    private PropertyInfo _valuesProp;\n+    private string _resourceTitle = \"Manage Table Record\";\n+\n+    private TransactionReceipt Receipt;\n+    private string ErrorMessage;\n+    private bool IsLoading;\n+    private MudForm _form;\n+\n+    protected override void OnInitialized()\n+    {\n+        // Detect generic arguments and record/value types\n+        var scan = typeof(TTableService);\n+        while (scan != null && scan != typeof(object))\n+        {\n+            if (scan.IsGenericType)\n+            {\n+                var def = scan.GetGenericTypeDefinition();\n+                if (def == typeof(TableSingletonService<,>))\n+                {\n+                    _isSingleton = true;\n+                    var args = scan.GetGenericArguments();\n+                    _recordType = args[0];\n+                    _valueType = args[1];\n+                    _value = Activator.CreateInstance(_valueType);\n+                    break;\n+                }\n+                if (def == typeof(TableService<,,>))\n+                {\n+                    var args = scan.GetGenericArguments();\n+                    _recordType = args[0];\n+                    _keyType = args[1];\n+                    _valueType = args[2];\n+                    _key = Activator.CreateInstance(_keyType);\n+                    break;\n+                }\n+            }\n+            scan = scan.BaseType;\n+        }\n+\n+        // Locate Values property for both singleton & regular records\n+        _valuesProp = _recordType?.GetProperty(\"Values\");\n+        _resourceTitle = ResourceRegistry.GetResource(_recordType)?.Name ?? \"Manage Table Record\";\n+    }\n+\n+    private async Task ValidateAndSaveAsync()\n+    {\n+        await _form.Validate();\n+        if (_form.IsValid)\n+        {\n+            await SaveRecordAsync();\n+        }\n+    }\n+\n+    private async Task QueryRecordAsync()\n+    {\n+        ErrorMessage = null;\n+        IsLoading = true;\n+        try\n+        {\n+            var web3 = await HostProvider.SelectedHost.GetWeb3Async();\n+            Console.WriteLine(ContractAddress);\n+            var service = (TTableService)Activator.CreateInstance(typeof(TTableService), web3, ContractAddress);\n+            \n+            MethodInfo method;\n+            object[] parameters;\n+\n+            if (_isSingleton)\n+            {\n+                method = typeof(TTableService).GetMethod(\"GetTableRecordAsync\", new[] { typeof(BlockParameter) });\n+                parameters = new object[] { null };\n+            }\n+            else\n+            {\n+                method = typeof(TTableService).GetMethod(\"GetTableRecordAsync\", new[] { _keyType, typeof(BlockParameter) });\n+                parameters = new object[] { _key, null };\n+            }\n+\n+            var task = (Task)method.Invoke(service, parameters);\n+            await task.ConfigureAwait(false);\n+            var recordResult = task.GetType().GetProperty(\"Result\")?.GetValue(task);\n+\n+            if (recordResult != null)\n+            {\n+                if (_valuesProp == null)\n+                {\n+                    _valuesProp = recordResult.GetType().GetProperty(\"Values\");\n+                }\n+                _value = _valuesProp != null ? _valuesProp.GetValue(recordResult) : recordResult;\n+            }\n+        }\n+        catch (Exception ex)\n+        {\n+            ErrorMessage = ex.ToString();\n+        }\n+        finally\n+        {\n+            IsLoading = false;\n+        }\n+    }\n+\n+    private async Task SaveRecordAsync()\n+    {\n+        ErrorMessage = null;\n+        IsLoading = true;\n+        try\n+        {\n+            var web3 = await HostProvider.SelectedHost.GetWeb3Async();\n+            var service = (TTableService)Activator.CreateInstance(typeof(TTableService), web3, ContractAddress);\n+            MethodInfo method;\n+            object[] parameters;\n+\n+            if (_isSingleton)\n+            {\n+                method = typeof(TTableService).GetMethod(\"SetRecordRequestAndWaitForReceiptAsync\", new[] { _valueType });\n+                parameters = new object[] { _value };\n+            }\n+            else\n+            {\n+                method = typeof(TTableService).GetMethod(\"SetRecordRequestAndWaitForReceiptAsync\", new[] { _keyType, _valueType });\n+                parameters = new object[] { _key, _value };\n+            }\n+\n+            var task = (Task<TransactionReceipt>)method.Invoke(service, parameters);\n+            Receipt = await task.ConfigureAwait(false);\n+        }\n+        catch (Exception ex)\n+        {\n+            ErrorMessage = ex.Message;\n+        }\n+        finally\n+        {\n+            IsLoading = false;\n+        }\n+    }\n+}"},{"sha":"c79803718e3c915218b7354d8f971e92074a87fd","filename":"src/Nethereum.MudBlazorComponents/MudDevTableServicesComponent.razor","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FMudDevTableServicesComponent.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FMudDevTableServicesComponent.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FMudDevTableServicesComponent.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,66 @@\n+﻿@using System.Reflection\n+@using MudBlazor\n+@using Nethereum.UI\n+@using Nethereum.Mud.Contracts.Store.Tables\n+@using Nethereum.Mud.Contracts.Core.Tables\n+\n+<MudContainer MaxWidth=\"MaxWidth.Large\" Class=\"mt-4\">\n+    <MudText Typo=\"Typo.h5\" Class=\"mb-4\">@Title</MudText>\n+\n+    <MudTextField @bind-Value=\"ContractAddress\"\n+    Label=\"World Contract Address\"\n+    Variant=\"Variant.Outlined\"\n+    Class=\"mb-4\" />\n+\n+    @foreach (var svc in _tableServiceTypes)\n+    {\n+        <DynamicComponent Type=\"@_componentCache[svc]\"\n+        Parameters=\"GetParameters()\"\n+        @key=\"svc\" />\n+    }\n+</MudContainer>\n+\n+@code {\n+    [Parameter] public string Title { get; set; } = \"MUD Tables\";     \n+    [Parameter] public Assembly SearchAssembly { get; set; }\n+    [Parameter] public SelectedEthereumHostProviderService HostProvider { get; set; }\n+    [Parameter] public string ContractAddress { get; set; } = string.Empty;\n+    [Parameter] public EventCallback<string> ContractAddressChanged { get; set; }\n+\n+\n+    private List<Type> _tableServiceTypes = new();\n+    private readonly Dictionary<Type, Type> _componentCache = new();\n+    private static readonly Type _iface = typeof(ITableServiceBase);\n+    private Dictionary<string, object> _parameterValues;\n+\n+    protected override void OnParametersSet()\n+    {\n+        _parameterValues = GetParameters();\n+        DiscoverServices();\n+    }\n+   \n+    private void DiscoverServices()\n+    {\n+        var asm = SearchAssembly ?? _iface.Assembly;       \n+        _tableServiceTypes = SafeGetTypes(asm)\n+            .Where(t => t.IsClass && !t.IsAbstract && _iface.IsAssignableFrom(t))\n+            .OrderBy(t => t.Name)\n+            .ToList();\n+\n+        foreach (var tableServiceType in _tableServiceTypes)\n+            _componentCache.TryAdd(tableServiceType, typeof(MudDevTableComponent<>).MakeGenericType(tableServiceType));\n+    }\n+\n+    private static IEnumerable<Type> SafeGetTypes(Assembly asm)\n+    {\n+        try { return asm.GetTypes(); }\n+        catch (ReflectionTypeLoadException ex)\n+        { return ex.Types.Where(t => t is not null)!; }\n+    }\n+\n+    private Dictionary<string, object> GetParameters() => new()\n+        {\n+            [\"ContractAddress\"] = ContractAddress,\n+            [\"HostProvider\"] = HostProvider\n+        };\n+}"},{"sha":"3071a53bde7adcc9ad00220a81775d0e529875dc","filename":"src/Nethereum.MudBlazorComponents/Nethereum.MudBlazorComponents.csproj","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FNethereum.MudBlazorComponents.csproj","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FNethereum.MudBlazorComponents.csproj","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FNethereum.MudBlazorComponents.csproj?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f","patch":"@@ -0,0 +1,34 @@\n+﻿<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\n+\n+\t<Import Project=\"$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.props))\\dir.props\" />\n+\n+\t<PropertyGroup>\n+\t\t<Description>Nethereum.MudBlazorComponents Nethereum MudBlazor Components to dynamically generate Deploy, Transact and Query smart contracts user interfaces using Deployment and Function Typed Messages or Nethereum Services. Mud.dev Table components to query and upsert data using TableServices.</Description>\n+\t\t<AssemblyTitle>Nethereum.MudBlazorComponents</AssemblyTitle>\n+\t\t<Version>$(NethereumVersion)</Version>\n+\t\t<TargetFrameworks>net9.0</TargetFrameworks>\n+\t\t<AssemblyName>Nethereum.MudBlazorComponents</AssemblyName>\n+\t\t<PackageId>Nethereum.MudBlazorComponents</PackageId>\n+\t\t<PackageTags>Netherum;EIP6963;Blazor;Metamask;Coinbase;Rabby;Ethereum;Blockchain</PackageTags>\n+\t</PropertyGroup>\n+\n+\n+\t<ItemGroup>\n+\t\t<PackageReference Include=\"Microsoft.AspNetCore.Components.WebAssembly\" Version=\"9.*\" />\n+\t\t<PackageReference Include=\"MudBlazor\" Version=\"8.*\" />\n+\t</ItemGroup>\n+\n+\t<ItemGroup Condition=\" '$(TargetFramework)' != 'net35' And '$(TargetUnityNet461AOT)' != 'true'\">\n+\t\t<None Include=\"..\\..\\NethereumKey.snk\" />\n+\t</ItemGroup>\n+\t\n+\t<ItemGroup>\n+\t  <ProjectReference Include=\"..\\Nethereum.Blazor\\Nethereum.Blazor.csproj\" />\n+\t  <ProjectReference Include=\"..\\Nethereum.Mud.Contracts\\Nethereum.Mud.Contracts.csproj\" />\n+\t  <ProjectReference Include=\"..\\Nethereum.Mud\\Nethereum.Mud.csproj\" />\n+\t  <ProjectReference Include=\"..\\Nethereum.UI\\Nethereum.UI.csproj\" />\n+\t  <ProjectReference Include=\"..\\Nethereum.Web3\\Nethereum.Web3.csproj\" />\n+\t</ItemGroup>\n+\n+\n+</Project>"},{"sha":"d2eacf87821f495bfe5aa35044ea116b95b3a215","filename":"src/Nethereum.MudBlazorComponents/QueryFunctionComponent.razor","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FQueryFunctionComponent.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FQueryFunctionComponent.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FQueryFunctionComponent.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"87db43eda8beff6e27de7dca0eb3de60d369215b","filename":"src/Nethereum.MudBlazorComponents/ResultOutput.razor","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FResultOutput.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FResultOutput.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FResultOutput.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"d1ec6541c76bdd4ac566a93fdb731cd0bab73771","filename":"src/Nethereum.MudBlazorComponents/StructInput.razor","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FStructInput.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FStructInput.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FStructInput.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"67de80254bf1b139b25e3842b139f417ce2cbbdb","filename":"src/Nethereum.MudBlazorComponents/TransactionFunctionComponent.razor","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FTransactionFunctionComponent.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2FTransactionFunctionComponent.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2FTransactionFunctionComponent.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"d37285f4b6f596de23e3d56e9da34888e99f5f72","filename":"src/Nethereum.MudBlazorComponents/_Imports.razor","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2F_Imports.razor","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.MudBlazorComponents%2F_Imports.razor","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.MudBlazorComponents%2F_Imports.razor?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"2abde1d3c088416c25b8a7e6e4706d94c7f47c66","filename":"src/Nethereum.Quorum/QuorumTransactionManager.cs","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Quorum%2FQuorumTransactionManager.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.Quorum%2FQuorumTransactionManager.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.Quorum%2FQuorumTransactionManager.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"fbf4cd4e37d3776fb96bf9782d445daa76f6ec1a","filename":"src/Nethereum.RPC/DebugNode/Dtos/AccountStorageValue.cs","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FAccountStorageValue.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FAccountStorageValue.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FAccountStorageValue.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"},{"sha":"99abfe08b35eabe8f07c282450a1d5c2a783fc68","filename":"src/Nethereum.RPC/DebugNode/Dtos/DebugStorageAtResult.cs","status":"modified","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/Nethereum/Nethereum/blob/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FDebugStorageAtResult.cs","raw_url":"https://github.com/Nethereum/Nethereum/raw/aac2eab3252f31be505ce3c4b070a47ef04db47f/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FDebugStorageAtResult.cs","contents_url":"https://api.github.com/repos/Nethereum/Nethereum/contents/src%2FNethereum.RPC%2FDebugNode%2FDtos%2FDebugStorageAtResult.cs?ref=aac2eab3252f31be505ce3c4b070a47ef04db47f"}]}